{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1528198505236},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1528198505241},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1528198505270},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1528198505292},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1528198505310},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1528198505313},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1528198505876},{"_id":"themes/yilia/_config.yml","hash":"ddddef1f5e7eb5a8e176bf80f8ad32bf407323c6","modified":1552531299076},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1528198505525},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1528198506786},{"_id":"source/_posts/CentOS 6.X 图形界面安装.md","hash":"89d070f47a903e37d5de4825465db742b60f4208","modified":1551179969519},{"_id":"source/_posts/CentOS 6.X 安装VNC Server实现图形化访问.md","hash":"eae698b7c940852abe4ec10fa038872a6e1451a4","modified":1551179969500},{"_id":"source/_posts/CentOS 6.X 安装VirtualBox-5.1.md","hash":"2df7735dca1974ab71f1bcb2938309b8c3800a2f","modified":1551179652133},{"_id":"source/_posts/CentOS6.5 离线安装MySQL5.6.26.md","hash":"989420331a975ddfc90126dd2a45bd19632ba4c8","modified":1528198831968},{"_id":"source/_posts/ELK之本地Grok-Debugger配置.md","hash":"afed8fb3081f55baf34933c4c4d782ed47536928","modified":1528198831969},{"_id":"source/_posts/ElasticSearch5.x安装Elasticsearch-head插件.md","hash":"a374fe6c31ceb77345a2fdc70650b4dad1771f7b","modified":1551114238560},{"_id":"source/_posts/FreeMarker-中文乱码问题解决办法.md","hash":"6f3cef9a62b985be752db24bb101362c86f14b83","modified":1528198832053},{"_id":"source/_posts/IDEA安装插件(阿里的编码约束).md","hash":"9334c94ba47155afeecc459ea93c9b35d1a9006a","modified":1551115527771},{"_id":"source/_posts/IDEA设置后端代码开发规范.md","hash":"cbb4fc5f2b53b0b9b7aff0cb3fca55949d89cc32","modified":1551113366353},{"_id":"source/_posts/Java中将一个文件夹下所有的文件压缩成一个文件.md","hash":"72308aa04cb84f5422aff19bff01b1399af7dbcc","modified":1528198832060},{"_id":"source/_posts/Linux-卸载分区.md","hash":"e80ace0722d331f3fddf0e930ad995c75ab2bdc9","modified":1552354479678},{"_id":"source/_posts/Linux-新建扩展分区.md","hash":"995a09ec26c146d375b981520b3a4083d985df45","modified":1528198832176},{"_id":"source/_posts/Linux-查看网卡UUID.md","hash":"d035ae0eb17b991edab4bdeb7b007e00707e97b4","modified":1528198832111},{"_id":"source/_posts/Linux上安装node和npm.md","hash":"a8e63648d6ad3063447f5b92f15b9829e301e220","modified":1552354411424},{"_id":"source/_posts/Linux下Tomcat指定JDK和设置内存大小.md","hash":"fa7d639ab02641965d17e6289315eccac5cd2f7f","modified":1551116110517},{"_id":"source/_posts/Linux下同步网络时间.md","hash":"8724784ea24586c1c60f208eee50964279ae11ee","modified":1551181677666},{"_id":"source/_posts/Linux下安装Erlang.md","hash":"b592da7d53ef2693cfdb718eb06850b5add708c0","modified":1552354578814},{"_id":"source/_posts/Linux下安装rabbitMq.md","hash":"c0f6b6a47f5cd9b5f70cafcf84677568f42ffd0c","modified":1552354703638},{"_id":"source/_posts/Linux下更改MySQL的存储目录.md","hash":"1f72dfcd1a167b5faf0eded38755949649eb043a","modified":1551116110513},{"_id":"source/_posts/Linux临时和永久关闭selinux.md","hash":"8e8388b18cf51d44103932a90574743e76523204","modified":1551181662266},{"_id":"source/_posts/Linux安装OpenResty api 网关 Orange.md","hash":"83cd8f029a8b5c1f78c20765bd1ae064ba00d36a","modified":1551181673208},{"_id":"source/_posts/Linux搭建GitLab并汉化.md","hash":"5f89a10d5c7db232d7997d0459b2a23f6f80b20b","modified":1528198832296},{"_id":"source/_posts/Linux查看硬件信息.md","hash":"d84b94d08732ba3e093b2a748dba0fa67763365e","modified":1552530729027},{"_id":"source/_posts/Linux配置SSH-Key到GitHub.md","hash":"4a580f5b5dc90afc190dc6c34ed3f8ad4cd72fa6","modified":1528198832301},{"_id":"source/_posts/SpringBoot 2.0 更新记录.md","hash":"14cfa1bbb7ffe5098fd880def4768dcdda307357","modified":1551115757324},{"_id":"source/_posts/SpringBoot设置默认首页.md","hash":"243c43bb198badaa8eacf58e895220eb0fb794d8","modified":1551182327983},{"_id":"source/_posts/SpringBoot配置文件中context-path不起作用.md","hash":"56ecd1a98a11cc4c1d7939f391a3361d818704be","modified":1551116110493},{"_id":"source/_posts/SpringBoot集成Druid不支持多条SQL.md","hash":"35bdd72b68752ef16082c5a93f0ac15cecdb71f3","modified":1528198832337},{"_id":"source/_posts/nohup-和-dev-null-2-1.md","hash":"193eb89c225a8b05fccd32725f39e651557b7fc0","modified":1533923344035},{"_id":"source/_posts/我听说.md","hash":"47642c115f894dee74540d710d7f5e0c7cb032e4","modified":1551095558087},{"_id":"source/_posts/搭建-ElasticSearch-6-1-3分布式集群.md","hash":"5657ab4d321622b84603bb7e18026a84644ccfe7","modified":1528198832352},{"_id":"source/_posts/新增Hexo博客文章置顶功能.md","hash":"0d3c66bfafa899f82519c627b6cf869cf3e22a13","modified":1551102823286},{"_id":"source/_posts/解决MariaDB中文乱码.md","hash":"a33721134aae5ec65732ba0f271db9bc5752a245","modified":1551189111600},{"_id":"source/_posts/解决Tomcat在IDEA控制台中文乱码的问题.md","hash":"9f2363de82b8bff2e00369cfe8912dd97fb9613c","modified":1551102343200},{"_id":"source/_posts/赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！.md","hash":"70f5065b84ed704b3efe07401102ca636b15e371","modified":1551095524503},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1528198505358},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1528198505362},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1528198505377},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1528198505384},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1528198505400},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1528198505404},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1528198505420},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1528198505423},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1528198505443},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1528198505445},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1528198505464},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1528198505468},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1528198505486},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1528198505491},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"7deb677d3919c4e2caaf7664361b35e23395a7e5","modified":1551114445348},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1528198506095},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1528198506116},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1528198506641},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1528198505830},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"e00d1afd8166db96a369283887208ccb9129f370","modified":1551265133539},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1528198506087},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1528198505547},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1528198505551},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1528198505570},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1552445022237},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1528198505595},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1528198505595},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1528198505614},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"b1cc286f25b431b6e9d6be6e517e87e6da339165","modified":1552531079763},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1528198505634},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1528198505634},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1528198505652},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1528198505652},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1528198505671},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1528198505672},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1528198505854},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1528198505861},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1528198505931},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1528198505956},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1528198505959},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1528198505977},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1528198505984},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1528198505995},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1528198506003},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1528198506025},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1528198506025},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1528198506604},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1528198506616},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1528198506128},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1528198506139},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1528198506152},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1528198506167},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1528198506174},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1528198506194},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1528198506197},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1528198506344},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1528198506352},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1528198506370},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1528198506374},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1528198506393},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1528198506417},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1528198506462},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1528198506466},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1528198506486},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1528198506490},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1528198506508},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1528198506523},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1528198506542},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1528198506547},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1528198506563},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1528198506568},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1528198506585},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1528198506589},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1528198506720},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1528198506647},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1528198506663},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1528198506668},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1528198506688},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1528198506691},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1528198506711},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1528198506733},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1528198506739},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1528198506754},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1528198506765},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1528198506775},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1528198505708},{"_id":"themes/yilia/layout/_partial/post/.gitment.ejs.swp","hash":"e4f904ea09c74bc1e6ad1db9badc509242905819","modified":1552362448681},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1528198505721},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1528198505727},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"62b5575a0825fb1a395075c07ef82c217fd2cea4","modified":1552446297033},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1528198505746},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"0cded7cd4f304b3f0c1282168a51496dfe021adc","modified":1552373615101},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1528198505771},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"a136ebe98afd675d6585355a33fb48127b587ec2","modified":1551267427720},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1528198505792},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"ad0399c87c4007810b2c5b063a843c84aa36a594","modified":1552361421967},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1528198505825},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1528198506234},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1528198506249},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1528198506256},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1528198506271},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1528198506277},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1528198506292},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1528198506303},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1528198506321},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1528198506325},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1528198506424},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1528198506441},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1528198506444},{"_id":"themes/yilia/layout/_partial/.css.ejs.swp","hash":"cb31583a610fc3bb76c9fc52b23afeba47518f62","modified":1552362779706},{"_id":"public/content.json","hash":"b38c1b330b62be9c7fa9ee282a0df091d508ae2f","modified":1552455980274},{"_id":"public/2019/03/07/Linux下安装rabbitMq/index.html","hash":"650b8a1d25910a70cda9b48b6cc52a0d6b700b47","modified":1552531373034},{"_id":"public/2019/03/01/Linux下安装Erlang/index.html","hash":"429cbaec83c8b453d40c9aef5f120bd9c90fef5c","modified":1552531373035},{"_id":"public/2019/02/25/新增Hexo博客文章置顶功能/index.html","hash":"cf34a64ee5b5867fd4b9227e0a5ed24c0aae7b13","modified":1552531373035},{"_id":"public/2019/02/18/解决Tomcat在IDEA控制台中文乱码的问题/index.html","hash":"40c482f7f691d5c5b7d5d387085615aaa94cd4c3","modified":1552531373035},{"_id":"public/2019/01/25/IDEA安装插件(阿里的编码约束)/index.html","hash":"7ad461b2141ce98eba8c913885dfb7b91293a824","modified":1552531373035},{"_id":"public/2019/01/23/IDEA设置后端代码开发规范/index.html","hash":"713f66edccab8d114f97564a9cc83c09df442e19","modified":1552531373036},{"_id":"public/2018/08/21/ElasticSearch5.x安装Elasticsearch-head插件/index.html","hash":"b6b76befd85cd222abb39cbd16e7264241e145e1","modified":1552531373036},{"_id":"public/2018/08/21/SpringBoot 2.0 更新记录/index.html","hash":"ed91796cfdc185deee658a5fd53ee9bce58a68c1","modified":1552531373036},{"_id":"public/2018/08/17/SpringBoot配置文件中context-path不起作用/index.html","hash":"ab53213331fa6cd1041c621e70e2f7fb5cc8e2fe","modified":1552531373037},{"_id":"public/2018/08/11/nohup-和-dev-null-2-1/index.html","hash":"dc27625adaa4f0113f93d268b8c79b15ecf93214","modified":1552531373037},{"_id":"public/2018/08/06/Linux下Tomcat指定JDK和设置内存大小/index.html","hash":"f858b00ff0d0d1edaabb8f813bd21fae62bb6309","modified":1552531373037},{"_id":"public/2018/08/06/Linux下更改MySQL的存储目录/index.html","hash":"44e259c0fa0674456ffb756d6184c87bbd567489","modified":1552531373038},{"_id":"public/2018/08/06/CentOS 6.X 安装VirtualBox-5.1/index.html","hash":"3422c1cecb6fe98f6d9267d34271481d5490212f","modified":1552531373038},{"_id":"public/2018/08/06/CentOS 6.X 安装VNC Server实现图形化访问/index.html","hash":"f90363ecf50d4165503f275ca1c3845008685372","modified":1552531373038},{"_id":"public/2018/08/06/CentOS 6.X 图形界面安装/index.html","hash":"ba7fa346e1e8c08911f2b1c628cb8b405c7d78c6","modified":1552531373038},{"_id":"public/2018/08/02/Linux临时和永久关闭selinux/index.html","hash":"94080bbe6c0955d06128a38d489fd001fbd0d632","modified":1552531373039},{"_id":"public/2018/08/01/Linux下同步网络时间/index.html","hash":"3b9907b404ad3b05e48ca18453e132fe58ad994c","modified":1552531373039},{"_id":"public/2018/06/06/CentOS6.5 离线安装MySQL5.6.26/index.html","hash":"e64b13fd9f8cb44c7cd6d174043aa6654ece3a82","modified":1552531373039},{"_id":"public/2018/06/04/Linux搭建GitLab并汉化/index.html","hash":"989c2eb04e2f100de627f13b7fdbfd4b4d64262a","modified":1552531373039},{"_id":"public/2018/05/30/Linux安装OpenResty api 网关 Orange/index.html","hash":"8cdf1fcb4b9f8318b1cc58c157e66ffc9d527038","modified":1552531373039},{"_id":"public/2018/04/26/解决MariaDB中文乱码/index.html","hash":"e8148bebaaa0056c294f3de26dfc9c332b8207c7","modified":1552531373040},{"_id":"public/2018/04/26/SpringBoot设置默认首页/index.html","hash":"d235775fe323810e59a3474e68de4096604c77c4","modified":1552531373040},{"_id":"public/2018/04/20/Linux上安装node和npm/index.html","hash":"bdac7aab8972d8c0b8e1a72ea14946f480abe461","modified":1552531373040},{"_id":"public/2018/04/17/Linux-查看网卡UUID/index.html","hash":"25d0574dcead99784028d9e853bdbb7755360f46","modified":1552531373041},{"_id":"public/2018/04/17/Linux-卸载分区/index.html","hash":"fe8abbee7ada2fc552f9b9e5948fb757452202b9","modified":1552531373041},{"_id":"public/2018/04/17/Linux-新建扩展分区/index.html","hash":"6cb5534377f7f17d49872c8ed4d8482e27c3face","modified":1552531373042},{"_id":"public/2018/04/17/搭建-ElasticSearch-6-1-3分布式集群/index.html","hash":"cbc17215ee79edfc1505528d38c0deadca45bba6","modified":1552531373042},{"_id":"public/2018/04/17/FreeMarker-中文乱码问题解决办法/index.html","hash":"4d9136b427181b8a1cdc0984a01a0ef6ed23e600","modified":1552531373042},{"_id":"public/2018/04/17/SpringBoot集成Druid不支持多条SQL/index.html","hash":"5083e44c0a9ead5110e01ab523440258bf924f83","modified":1552531373042},{"_id":"public/2018/04/17/Linux配置SSH-Key到GitHub/index.html","hash":"fd55cc4f4aa2da506db2077deee986ea84a9d330","modified":1552531373043},{"_id":"public/2018/04/17/Java中将一个文件夹下所有的文件压缩成一个文件/index.html","hash":"63424cfc3a12befcb3d6ee0d9b06f43eddc12bfd","modified":1552531373043},{"_id":"public/2018/04/15/ELK之本地Grok-Debugger配置/index.html","hash":"a60c4687c4c786c61decb5e8cda7fb9824430e62","modified":1552531373043},{"_id":"public/2018/03/17/Linux查看硬件信息/index.html","hash":"9b400f0f9cd81160ed91de26fc3afa6be471bcdf","modified":1552531373044},{"_id":"public/2018/02/04/赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！/index.html","hash":"e54610e1799586217420d729cf50154270bca4c4","modified":1552531373044},{"_id":"public/2017/01/01/我听说/index.html","hash":"d765027e91ae3535d43c7a9a530f8828f05dea18","modified":1552531373044},{"_id":"public/archives/index.html","hash":"751a55603c80810aa5c7ec0794a9813de966eca9","modified":1552531102574},{"_id":"public/archives/page/2/index.html","hash":"b519bb83cd205d4ff8267f3e77f98fa6042fe0f2","modified":1552531102574},{"_id":"public/archives/page/3/index.html","hash":"974b87b3973a93263c26e52bfe629a90d32d9ff9","modified":1552531102575},{"_id":"public/archives/page/4/index.html","hash":"95e0e44e718a4cf2ae641ceddf821aaeb5a2faac","modified":1552531102575},{"_id":"public/archives/2017/index.html","hash":"a3f53715bea3ecf20ea2083cd606695f37f2ee1c","modified":1552531102575},{"_id":"public/archives/2017/01/index.html","hash":"d98c30e3e87e738fc63b973cba0ab77386fff32b","modified":1552531102576},{"_id":"public/archives/2018/index.html","hash":"4d506bf4c2145322edca3a96c01ad5235c662bee","modified":1552531102576},{"_id":"public/archives/2018/page/2/index.html","hash":"580f396cc7a1cb9730ea27ef9b085b546113f8a4","modified":1552531102576},{"_id":"public/archives/2018/page/3/index.html","hash":"e548adfa840b3194ed136eaa6dc41a47ee107b40","modified":1552531102577},{"_id":"public/archives/2018/02/index.html","hash":"c1b4b0c52f33b52379d2104d71cffbd592fd9b29","modified":1552531102577},{"_id":"public/archives/2018/03/index.html","hash":"c7670d7278f472a190217e4ce1299d3d982c6eef","modified":1552531102577},{"_id":"public/archives/2018/04/index.html","hash":"888a561a9d1b2e88152d7d1fe5ac2c14ed9e5b9b","modified":1552531102578},{"_id":"public/archives/2018/04/page/2/index.html","hash":"31053eaeaf20df180a99bb61280c6ff043c20121","modified":1552531102578},{"_id":"public/archives/2018/05/index.html","hash":"d64122ed730ac8005138c61d62fc7cffdca198a3","modified":1552531102578},{"_id":"public/archives/2018/06/index.html","hash":"12c784b1f64c67dd69242741eac429414c9c2c0b","modified":1552531102578},{"_id":"public/archives/2018/08/index.html","hash":"3e2d9350bc842006fda84d9a48f790bb399aab27","modified":1552531102579},{"_id":"public/archives/2018/08/page/2/index.html","hash":"5253e9b516e45986ab21143258713d2eb545a107","modified":1552531102579},{"_id":"public/archives/2019/index.html","hash":"c3dbc7f1aa5323b62c4e13dab5f17533c6597daa","modified":1552531102585},{"_id":"public/archives/2019/01/index.html","hash":"c5bc9f826e6fc91f0b9ea599d53a72342981d326","modified":1552531102585},{"_id":"public/archives/2019/02/index.html","hash":"9f45d936597399853e3ea46977a8f8bca4b22b5e","modified":1552531102585},{"_id":"public/archives/2019/03/index.html","hash":"8ba993c15832dc685b2cc69ab9aab51b50065035","modified":1552531102586},{"_id":"public/index.html","hash":"51163c15ad545acc0b5a5ed15832e73c0c754611","modified":1552531102588},{"_id":"public/page/2/index.html","hash":"82838968158772532b17f9f92d9a378f579e2bd1","modified":1552531102588},{"_id":"public/page/3/index.html","hash":"a8db2921d1093c9b5f8f74571ff80d8402c1720a","modified":1552531102588},{"_id":"public/page/4/index.html","hash":"7c41e646b65b80a434602f704fa55343f30350ce","modified":1552531102588},{"_id":"public/tags/Linux/index.html","hash":"de94fe52a9e5cdc80394273ec99e96db8b4210db","modified":1552531102589},{"_id":"public/tags/Linux/page/2/index.html","hash":"b981f8dcdecda910a791237a2bbd16b283de711d","modified":1552531102589},{"_id":"public/tags/ELK日志分析/index.html","hash":"62cc6f7c5908d58bccf5e5fb82ed4968534e9e4b","modified":1552531102589},{"_id":"public/tags/ELK日志分析平台/index.html","hash":"402430e327e6b8ab566fa855b445619e23f9e898","modified":1552531102590},{"_id":"public/tags/Java/index.html","hash":"743ebd4552b1a908377972b1e73440c1fdb82817","modified":1552531102590},{"_id":"public/tags/日记本/index.html","hash":"713b64bdb26e2e68b8b8f7f9aa627c13779b36b4","modified":1552531102590},{"_id":"public/tags/记录生活点滴/index.html","hash":"ca77f08fdb8a0717971ad1e6fee4a565e0c8f107","modified":1552531102591},{"_id":"themes/yilia/layout/_partial/post/.title.ejs.swp","hash":"3fdbfb4fcb954afd4fde5e15f98e14600a62963d","modified":1552440998808},{"_id":"themes/yilia/layout/_partial/.article.ejs.swp","hash":"daa27a163c564f4b0bc2c8b359d7df45ee28570d","modified":1552443301609},{"_id":"themes/yilia/layout/_partial/.footer.ejs.swp","hash":"9236bdab7f596a52898840aa669d44e3d93bbcbc","modified":1552442922507},{"_id":"source/_posts/Hexo博客添加访问量统计.md","hash":"38c43f62fbb2e0f2e060a735e11bf77373571547","modified":1552530614327},{"_id":"public/2019/03/13/Hexo博客添加访问量统计/index.html","hash":"e629ee3795a14d0764dc6f8776755b6823e59c0a","modified":1552531373034}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CentOS 6.X 图形界面安装","date":"2018-08-06T07:39:00.000Z","description":"CentOS 6.X 图形界面安装","_content":"##### 一、安装图形界面\n```shell\n# yum groupinstall -y \"Desktop\" \"Desktop Platform\" \"Fonts\" \"General Purpose Desktop\" \"Graphical Administration Tools\" \"Input Methods\" \"Legacy X Window System compatibility\" \"Remote Desktop Clients\" \"X Window System\"\n# vi /etc/inittab\n# 修改最后一行为id:5:initdefault:\n# startx\n# reboot\n```\n##### 二、安装中文输入法(可选)\n```shell\n# yum -y install \"@Chinese Support\"\n```","source":"_posts/CentOS 6.X 图形界面安装.md","raw":"---\ntitle: CentOS 6.X 图形界面安装\ndate: 2018-08-06 15:39\ntags: Linux\ndescription: CentOS 6.X 图形界面安装\n---\n##### 一、安装图形界面\n```shell\n# yum groupinstall -y \"Desktop\" \"Desktop Platform\" \"Fonts\" \"General Purpose Desktop\" \"Graphical Administration Tools\" \"Input Methods\" \"Legacy X Window System compatibility\" \"Remote Desktop Clients\" \"X Window System\"\n# vi /etc/inittab\n# 修改最后一行为id:5:initdefault:\n# startx\n# reboot\n```\n##### 二、安装中文输入法(可选)\n```shell\n# yum -y install \"@Chinese Support\"\n```","slug":"CentOS 6.X 图形界面安装","published":1,"updated":"2019-02-26T11:19:29.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irna000048dk5rjap63v","content":"<h5 id=\"一、安装图形界面\"><a href=\"#一、安装图形界面\" class=\"headerlink\" title=\"一、安装图形界面\"></a>一、安装图形界面</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"Desktop\" \"Desktop Platform\" \"Fonts\" \"General Purpose Desktop\" \"Graphical Administration Tools\" \"Input Methods\" \"Legacy X Window System compatibility\" \"Remote Desktop Clients\" \"X Window System\"</span><br><span class=\"line\"><span class=\"meta\">#</span> vi /etc/inittab</span><br><span class=\"line\"><span class=\"meta\">#</span> 修改最后一行为id:5:initdefault:</span><br><span class=\"line\"><span class=\"meta\">#</span> startx</span><br><span class=\"line\"><span class=\"meta\">#</span> reboot</span><br></pre></td></tr></table></figure>\n<h5 id=\"二、安装中文输入法-可选\"><a href=\"#二、安装中文输入法-可选\" class=\"headerlink\" title=\"二、安装中文输入法(可选)\"></a>二、安装中文输入法(可选)</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum -y install \"@Chinese Support\"</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"一、安装图形界面\"><a href=\"#一、安装图形界面\" class=\"headerlink\" title=\"一、安装图形界面\"></a>一、安装图形界面</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"Desktop\" \"Desktop Platform\" \"Fonts\" \"General Purpose Desktop\" \"Graphical Administration Tools\" \"Input Methods\" \"Legacy X Window System compatibility\" \"Remote Desktop Clients\" \"X Window System\"</span><br><span class=\"line\"><span class=\"meta\">#</span> vi /etc/inittab</span><br><span class=\"line\"><span class=\"meta\">#</span> 修改最后一行为id:5:initdefault:</span><br><span class=\"line\"><span class=\"meta\">#</span> startx</span><br><span class=\"line\"><span class=\"meta\">#</span> reboot</span><br></pre></td></tr></table></figure>\n<h5 id=\"二、安装中文输入法-可选\"><a href=\"#二、安装中文输入法-可选\" class=\"headerlink\" title=\"二、安装中文输入法(可选)\"></a>二、安装中文输入法(可选)</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum -y install \"@Chinese Support\"</span><br></pre></td></tr></table></figure>"},{"title":"CentOS 6.X 安装VNC Server实现图形化访问","date":"2018-08-06T07:45:00.000Z","description":"CentOS 6.X 安装VNC Server实现图形化访问","_content":"##### 一、安装gnome图形化桌面\n```shell\n# yum groupinstall -y \"X Window System\"\n# yum groupinstall -y \"Desktop\"\n# yum groupinstall -y \"Chinese Support\"\n```\n\n##### 二、安装vncserver（vnc是一款优秀的远程控制软件）\n```shell\n# yum install -y tigervnc-server\n```\n<!--more-->\n##### 三、配置vncserver\n```shell\n# ---配置为开机自启动\n# chkconfig --level 345 vncserver on\n# ---配置vnc密码\n# vncserver\n# ---配置为使用gnome桌面\n# ---修改文件xstratup\n# vim /root/.vnc/xstartup   把最后的 twm & 删掉 加上 gnome-session &\n# ---配置vncserver启动后监听端口和环境参数\n# vim /etc/sysconfig/vncservers\n# ---在文件末添加以下内容\nVNCSERVERS=\"1:root\"\nVNCSERVERARGS[1]=\"-geometry 1200x800\"\n# ---重启vncserver服务\n# service vncserver restart\n```\n##### 四、允许root访问图形界面和生成新的machine-id\n```shell\n# sed -i 's/.*!= root.*/#&/' /etc/pam.d/gdm\n# dbus-uuidgen > /var/lib/dbus/machine-id\n```\n##### 五、关闭selinux和NetworkManager服务\n###### 1.检查selinux服务并关闭(确认里面的SELINUX字段的值是disabled，如果不是则改为disabled)\n```shell\n# vim /etc/selinux/config\n```\n###### 2.关闭NetworkManager服务\n```shell\n# chkconfig --del NetworkManager\n```\n安装vncviewer客户端输入IP:1 输入密码访问即可\n![](https://upload-images.jianshu.io/upload_images/2743275-49dec0ced1f91260.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/CentOS 6.X 安装VNC Server实现图形化访问.md","raw":"---\ntitle: CentOS 6.X 安装VNC Server实现图形化访问\ndate: 2018-08-06 15:45\ntags: Linux\ndescription: CentOS 6.X 安装VNC Server实现图形化访问\n---\n##### 一、安装gnome图形化桌面\n```shell\n# yum groupinstall -y \"X Window System\"\n# yum groupinstall -y \"Desktop\"\n# yum groupinstall -y \"Chinese Support\"\n```\n\n##### 二、安装vncserver（vnc是一款优秀的远程控制软件）\n```shell\n# yum install -y tigervnc-server\n```\n<!--more-->\n##### 三、配置vncserver\n```shell\n# ---配置为开机自启动\n# chkconfig --level 345 vncserver on\n# ---配置vnc密码\n# vncserver\n# ---配置为使用gnome桌面\n# ---修改文件xstratup\n# vim /root/.vnc/xstartup   把最后的 twm & 删掉 加上 gnome-session &\n# ---配置vncserver启动后监听端口和环境参数\n# vim /etc/sysconfig/vncservers\n# ---在文件末添加以下内容\nVNCSERVERS=\"1:root\"\nVNCSERVERARGS[1]=\"-geometry 1200x800\"\n# ---重启vncserver服务\n# service vncserver restart\n```\n##### 四、允许root访问图形界面和生成新的machine-id\n```shell\n# sed -i 's/.*!= root.*/#&/' /etc/pam.d/gdm\n# dbus-uuidgen > /var/lib/dbus/machine-id\n```\n##### 五、关闭selinux和NetworkManager服务\n###### 1.检查selinux服务并关闭(确认里面的SELINUX字段的值是disabled，如果不是则改为disabled)\n```shell\n# vim /etc/selinux/config\n```\n###### 2.关闭NetworkManager服务\n```shell\n# chkconfig --del NetworkManager\n```\n安装vncviewer客户端输入IP:1 输入密码访问即可\n![](https://upload-images.jianshu.io/upload_images/2743275-49dec0ced1f91260.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"CentOS 6.X 安装VNC Server实现图形化访问","published":1,"updated":"2019-02-26T11:19:29.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irnt000148dk9utebe6c","content":"<h5 id=\"一、安装gnome图形化桌面\"><a href=\"#一、安装gnome图形化桌面\" class=\"headerlink\" title=\"一、安装gnome图形化桌面\"></a>一、安装gnome图形化桌面</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"X Window System\"</span><br><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"Desktop\"</span><br><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"Chinese Support\"</span><br></pre></td></tr></table></figure>\n<h5 id=\"二、安装vncserver（vnc是一款优秀的远程控制软件）\"><a href=\"#二、安装vncserver（vnc是一款优秀的远程控制软件）\" class=\"headerlink\" title=\"二、安装vncserver（vnc是一款优秀的远程控制软件）\"></a>二、安装vncserver（vnc是一款优秀的远程控制软件）</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y tigervnc-server</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"三、配置vncserver\"><a href=\"#三、配置vncserver\" class=\"headerlink\" title=\"三、配置vncserver\"></a>三、配置vncserver</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> ---配置为开机自启动</span><br><span class=\"line\"><span class=\"meta\">#</span> chkconfig --level 345 vncserver on</span><br><span class=\"line\"><span class=\"meta\">#</span> ---配置vnc密码</span><br><span class=\"line\"><span class=\"meta\">#</span> vncserver</span><br><span class=\"line\"><span class=\"meta\">#</span> ---配置为使用gnome桌面</span><br><span class=\"line\"><span class=\"meta\">#</span> ---修改文件xstratup</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /root/.vnc/xstartup   把最后的 twm &amp; 删掉 加上 gnome-session &amp;</span><br><span class=\"line\"><span class=\"meta\">#</span> ---配置vncserver启动后监听端口和环境参数</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /etc/sysconfig/vncservers</span><br><span class=\"line\"><span class=\"meta\">#</span> ---在文件末添加以下内容</span><br><span class=\"line\">VNCSERVERS=\"1:root\"</span><br><span class=\"line\">VNCSERVERARGS[1]=\"-geometry 1200x800\"</span><br><span class=\"line\"><span class=\"meta\">#</span> ---重启vncserver服务</span><br><span class=\"line\"><span class=\"meta\">#</span> service vncserver restart</span><br></pre></td></tr></table></figure>\n<h5 id=\"四、允许root访问图形界面和生成新的machine-id\"><a href=\"#四、允许root访问图形界面和生成新的machine-id\" class=\"headerlink\" title=\"四、允许root访问图形界面和生成新的machine-id\"></a>四、允许root访问图形界面和生成新的machine-id</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> sed -i 's/.*!= root.*/#&amp;/' /etc/pam.d/gdm</span><br><span class=\"line\"><span class=\"meta\">#</span> dbus-uuidgen &gt; /var/lib/dbus/machine-id</span><br></pre></td></tr></table></figure>\n<h5 id=\"五、关闭selinux和NetworkManager服务\"><a href=\"#五、关闭selinux和NetworkManager服务\" class=\"headerlink\" title=\"五、关闭selinux和NetworkManager服务\"></a>五、关闭selinux和NetworkManager服务</h5><h6 id=\"1-检查selinux服务并关闭-确认里面的SELINUX字段的值是disabled，如果不是则改为disabled\"><a href=\"#1-检查selinux服务并关闭-确认里面的SELINUX字段的值是disabled，如果不是则改为disabled\" class=\"headerlink\" title=\"1.检查selinux服务并关闭(确认里面的SELINUX字段的值是disabled，如果不是则改为disabled)\"></a>1.检查selinux服务并关闭(确认里面的SELINUX字段的值是disabled，如果不是则改为disabled)</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/selinux/config</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-关闭NetworkManager服务\"><a href=\"#2-关闭NetworkManager服务\" class=\"headerlink\" title=\"2.关闭NetworkManager服务\"></a>2.关闭NetworkManager服务</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> chkconfig --del NetworkManager</span><br></pre></td></tr></table></figure>\n<p>安装vncviewer客户端输入IP:1 输入密码访问即可<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-49dec0ced1f91260.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h5 id=\"一、安装gnome图形化桌面\"><a href=\"#一、安装gnome图形化桌面\" class=\"headerlink\" title=\"一、安装gnome图形化桌面\"></a>一、安装gnome图形化桌面</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"X Window System\"</span><br><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"Desktop\"</span><br><span class=\"line\"><span class=\"meta\">#</span> yum groupinstall -y \"Chinese Support\"</span><br></pre></td></tr></table></figure>\n<h5 id=\"二、安装vncserver（vnc是一款优秀的远程控制软件）\"><a href=\"#二、安装vncserver（vnc是一款优秀的远程控制软件）\" class=\"headerlink\" title=\"二、安装vncserver（vnc是一款优秀的远程控制软件）\"></a>二、安装vncserver（vnc是一款优秀的远程控制软件）</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y tigervnc-server</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"三、配置vncserver\"><a href=\"#三、配置vncserver\" class=\"headerlink\" title=\"三、配置vncserver\"></a>三、配置vncserver</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> ---配置为开机自启动</span><br><span class=\"line\"><span class=\"meta\">#</span> chkconfig --level 345 vncserver on</span><br><span class=\"line\"><span class=\"meta\">#</span> ---配置vnc密码</span><br><span class=\"line\"><span class=\"meta\">#</span> vncserver</span><br><span class=\"line\"><span class=\"meta\">#</span> ---配置为使用gnome桌面</span><br><span class=\"line\"><span class=\"meta\">#</span> ---修改文件xstratup</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /root/.vnc/xstartup   把最后的 twm &amp; 删掉 加上 gnome-session &amp;</span><br><span class=\"line\"><span class=\"meta\">#</span> ---配置vncserver启动后监听端口和环境参数</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /etc/sysconfig/vncservers</span><br><span class=\"line\"><span class=\"meta\">#</span> ---在文件末添加以下内容</span><br><span class=\"line\">VNCSERVERS=\"1:root\"</span><br><span class=\"line\">VNCSERVERARGS[1]=\"-geometry 1200x800\"</span><br><span class=\"line\"><span class=\"meta\">#</span> ---重启vncserver服务</span><br><span class=\"line\"><span class=\"meta\">#</span> service vncserver restart</span><br></pre></td></tr></table></figure>\n<h5 id=\"四、允许root访问图形界面和生成新的machine-id\"><a href=\"#四、允许root访问图形界面和生成新的machine-id\" class=\"headerlink\" title=\"四、允许root访问图形界面和生成新的machine-id\"></a>四、允许root访问图形界面和生成新的machine-id</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> sed -i 's/.*!= root.*/#&amp;/' /etc/pam.d/gdm</span><br><span class=\"line\"><span class=\"meta\">#</span> dbus-uuidgen &gt; /var/lib/dbus/machine-id</span><br></pre></td></tr></table></figure>\n<h5 id=\"五、关闭selinux和NetworkManager服务\"><a href=\"#五、关闭selinux和NetworkManager服务\" class=\"headerlink\" title=\"五、关闭selinux和NetworkManager服务\"></a>五、关闭selinux和NetworkManager服务</h5><h6 id=\"1-检查selinux服务并关闭-确认里面的SELINUX字段的值是disabled，如果不是则改为disabled\"><a href=\"#1-检查selinux服务并关闭-确认里面的SELINUX字段的值是disabled，如果不是则改为disabled\" class=\"headerlink\" title=\"1.检查selinux服务并关闭(确认里面的SELINUX字段的值是disabled，如果不是则改为disabled)\"></a>1.检查selinux服务并关闭(确认里面的SELINUX字段的值是disabled，如果不是则改为disabled)</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/selinux/config</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-关闭NetworkManager服务\"><a href=\"#2-关闭NetworkManager服务\" class=\"headerlink\" title=\"2.关闭NetworkManager服务\"></a>2.关闭NetworkManager服务</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> chkconfig --del NetworkManager</span><br></pre></td></tr></table></figure>\n<p>安装vncviewer客户端输入IP:1 输入密码访问即可<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-49dec0ced1f91260.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"CentOS 6.X 安装VirtualBox-5.1","date":"2018-08-06T08:19:00.000Z","description":"CentOS 6.X 安装VirtualBox-5.1","_content":"##### 一、安装virtualbox的yum源\n```shell\n# vim /etc/yum.repos.d/virtualbox.repo\n# 添加以下内容\n[virtualbox] \nname=Oracle Linux / RHEL / CentOS-$releasever / $basearch - VirtualBox \nbaseurl=http://download.virtualbox.org/virtualbox/rpm/el/$releasever/$basearch \nenabled=1 \ngpgcheck=1 \ngpgkey=http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc\n```\n<!--more-->\n##### 二、添加EPEL源\n```shell\n# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\n```\n##### 三、添加必要的依赖包\n```shell\n# yum install -y gcc make patch  dkms qt libgomp\n# yum install -y kernel-headers kernel-devel fontforge binutils glibc-headers glibc-devel\n# yum install -y kernel kernel-headers kernel-devel gcc make\n```\n##### 四、设置环境变量，主要是内核的路径\n```shell\n# vim /etc/profile\n# 文件最后行添加\nexport KERN_DIR=/usr/src/kernels/你的最新内核版本xxx\n# source /etc/profile\n```\n##### 五、安装virtualbox\n```shell\n# yum search VirtualBox\n# yum install -y VirtualBox-5.1\n# reboot\n# 重新编译与virtualbox相关的内核模块\n# service vboxdrv setup\n# 启动virtualbox\n# virtualbox &\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-6c0e7cf6fbadb6f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","source":"_posts/CentOS 6.X 安装VirtualBox-5.1.md","raw":"---\ntitle: CentOS 6.X 安装VirtualBox-5.1\ndate: 2018-08-06 16:19\ntags: Linux\ndescription: CentOS 6.X 安装VirtualBox-5.1\n---\n##### 一、安装virtualbox的yum源\n```shell\n# vim /etc/yum.repos.d/virtualbox.repo\n# 添加以下内容\n[virtualbox] \nname=Oracle Linux / RHEL / CentOS-$releasever / $basearch - VirtualBox \nbaseurl=http://download.virtualbox.org/virtualbox/rpm/el/$releasever/$basearch \nenabled=1 \ngpgcheck=1 \ngpgkey=http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc\n```\n<!--more-->\n##### 二、添加EPEL源\n```shell\n# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\n```\n##### 三、添加必要的依赖包\n```shell\n# yum install -y gcc make patch  dkms qt libgomp\n# yum install -y kernel-headers kernel-devel fontforge binutils glibc-headers glibc-devel\n# yum install -y kernel kernel-headers kernel-devel gcc make\n```\n##### 四、设置环境变量，主要是内核的路径\n```shell\n# vim /etc/profile\n# 文件最后行添加\nexport KERN_DIR=/usr/src/kernels/你的最新内核版本xxx\n# source /etc/profile\n```\n##### 五、安装virtualbox\n```shell\n# yum search VirtualBox\n# yum install -y VirtualBox-5.1\n# reboot\n# 重新编译与virtualbox相关的内核模块\n# service vboxdrv setup\n# 启动virtualbox\n# virtualbox &\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-6c0e7cf6fbadb6f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n","slug":"CentOS 6.X 安装VirtualBox-5.1","published":1,"updated":"2019-02-26T11:14:12.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58iro1000348dkfx5m8oi5","content":"<h5 id=\"一、安装virtualbox的yum源\"><a href=\"#一、安装virtualbox的yum源\" class=\"headerlink\" title=\"一、安装virtualbox的yum源\"></a>一、安装virtualbox的yum源</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/yum.repos.d/virtualbox.repo</span><br><span class=\"line\"><span class=\"meta\">#</span> 添加以下内容</span><br><span class=\"line\">[virtualbox] </span><br><span class=\"line\">name=Oracle Linux / RHEL / CentOS-$releasever / $basearch - VirtualBox </span><br><span class=\"line\">baseurl=http://download.virtualbox.org/virtualbox/rpm/el/$releasever/$basearch </span><br><span class=\"line\">enabled=1 </span><br><span class=\"line\">gpgcheck=1 </span><br><span class=\"line\">gpgkey=http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"二、添加EPEL源\"><a href=\"#二、添加EPEL源\" class=\"headerlink\" title=\"二、添加EPEL源\"></a>二、添加EPEL源</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure>\n<h5 id=\"三、添加必要的依赖包\"><a href=\"#三、添加必要的依赖包\" class=\"headerlink\" title=\"三、添加必要的依赖包\"></a>三、添加必要的依赖包</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y gcc make patch  dkms qt libgomp</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y kernel-headers kernel-devel fontforge binutils glibc-headers glibc-devel</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y kernel kernel-headers kernel-devel gcc make</span><br></pre></td></tr></table></figure>\n<h5 id=\"四、设置环境变量，主要是内核的路径\"><a href=\"#四、设置环境变量，主要是内核的路径\" class=\"headerlink\" title=\"四、设置环境变量，主要是内核的路径\"></a>四、设置环境变量，主要是内核的路径</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/profile</span><br><span class=\"line\"><span class=\"meta\">#</span> 文件最后行添加</span><br><span class=\"line\">export KERN_DIR=/usr/src/kernels/你的最新内核版本xxx</span><br><span class=\"line\"><span class=\"meta\">#</span> source /etc/profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"五、安装virtualbox\"><a href=\"#五、安装virtualbox\" class=\"headerlink\" title=\"五、安装virtualbox\"></a>五、安装virtualbox</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum search VirtualBox</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y VirtualBox-5.1</span><br><span class=\"line\"><span class=\"meta\">#</span> reboot</span><br><span class=\"line\"><span class=\"meta\">#</span> 重新编译与virtualbox相关的内核模块</span><br><span class=\"line\"><span class=\"meta\">#</span> service vboxdrv setup</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动virtualbox</span><br><span class=\"line\"><span class=\"meta\">#</span> virtualbox &amp;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-6c0e7cf6fbadb6f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h5 id=\"一、安装virtualbox的yum源\"><a href=\"#一、安装virtualbox的yum源\" class=\"headerlink\" title=\"一、安装virtualbox的yum源\"></a>一、安装virtualbox的yum源</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/yum.repos.d/virtualbox.repo</span><br><span class=\"line\"><span class=\"meta\">#</span> 添加以下内容</span><br><span class=\"line\">[virtualbox] </span><br><span class=\"line\">name=Oracle Linux / RHEL / CentOS-$releasever / $basearch - VirtualBox </span><br><span class=\"line\">baseurl=http://download.virtualbox.org/virtualbox/rpm/el/$releasever/$basearch </span><br><span class=\"line\">enabled=1 </span><br><span class=\"line\">gpgcheck=1 </span><br><span class=\"line\">gpgkey=http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"二、添加EPEL源\"><a href=\"#二、添加EPEL源\" class=\"headerlink\" title=\"二、添加EPEL源\"></a>二、添加EPEL源</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure>\n<h5 id=\"三、添加必要的依赖包\"><a href=\"#三、添加必要的依赖包\" class=\"headerlink\" title=\"三、添加必要的依赖包\"></a>三、添加必要的依赖包</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y gcc make patch  dkms qt libgomp</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y kernel-headers kernel-devel fontforge binutils glibc-headers glibc-devel</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y kernel kernel-headers kernel-devel gcc make</span><br></pre></td></tr></table></figure>\n<h5 id=\"四、设置环境变量，主要是内核的路径\"><a href=\"#四、设置环境变量，主要是内核的路径\" class=\"headerlink\" title=\"四、设置环境变量，主要是内核的路径\"></a>四、设置环境变量，主要是内核的路径</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/profile</span><br><span class=\"line\"><span class=\"meta\">#</span> 文件最后行添加</span><br><span class=\"line\">export KERN_DIR=/usr/src/kernels/你的最新内核版本xxx</span><br><span class=\"line\"><span class=\"meta\">#</span> source /etc/profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"五、安装virtualbox\"><a href=\"#五、安装virtualbox\" class=\"headerlink\" title=\"五、安装virtualbox\"></a>五、安装virtualbox</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum search VirtualBox</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y VirtualBox-5.1</span><br><span class=\"line\"><span class=\"meta\">#</span> reboot</span><br><span class=\"line\"><span class=\"meta\">#</span> 重新编译与virtualbox相关的内核模块</span><br><span class=\"line\"><span class=\"meta\">#</span> service vboxdrv setup</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动virtualbox</span><br><span class=\"line\"><span class=\"meta\">#</span> virtualbox &amp;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-6c0e7cf6fbadb6f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"CentOS6.5 离线安装MySQL5.6.26","description":"CentOS6.5 离线安装MySQL5.6.26","date":"2018-06-06T07:59:52.000Z","_content":"#### 1、卸载之前安装的MySQL\n```shell\n# rpm -qa | grep mysql   --查看系统之前是否已安装MySQL。\n# rpm -e --nodeps mysql-libs-5.1.71-1.el6.x86_64   --执行删除语句\n# rm -rf /var/lib/mysql*   --善后处理\n# rm -rf /usr/share/mysql*\n```\n<!--more-->\n#### 2、安装MySQL\n###### 2.1 下载并安装 libaio\n```shell\n# cd /usr/local\n# wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libaio-0.3.107-10.el6.x86_64.rpm\n# rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm\n```\n###### 2.2 下载并安装MySQL\n```shell\n# cd /usr/local\n# wget https://dev.mysql.com/get/archives/mysql-5.6/MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar\n# tar -xf MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar\n# rpm -ivh MySQL-server-5.6.26-1.linux_glibc2.5.x86_64.rpm\n# rpm -ivh MySQL-client-5.6.26-1.linux_glibc2.5.x86_64.rpm\n```\n###### 2.3 查看并修改MySQL root用户密码\n```shell\n# more /root/.mysql_secret\n# service mysql restart\n# mysqladmin -uroot -pFeyU2YjwMcAw9Nv0 password 'root'  --修改root密码为root\n# mysql -uroot -proot   --测试登陆\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-1d296e2cb8b73d3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n###### 2.4 配置MySQL数据库编码\n```shell\n# cp -rp /usr/share/mysql/my-default.cnf /etc/my.cnf\n# 在mysqld下面增加\ninit-connect='SET NAMES utf8'\ncharacter-set-server = utf8\n# service mysql restart\n# mysql -uroot -proot  --验证是否成功\n# show variables like 'character%';\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-6cdfd951579ad2d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n------------\n![](https://upload-images.jianshu.io/upload_images/2743275-eb169140eb6b5b36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n###### 2.5 配置MySQL远程访问\n```shell\n# service iptables stop\n# chkconfig iptables off\n# mysql -uroot -proot\n# grant all privileges on *.* to root@'%' identified by 'root' WITH GRANT OPTION;\n# flush privileges;\n```","source":"_posts/CentOS6.5 离线安装MySQL5.6.26.md","raw":"title: CentOS6.5 离线安装MySQL5.6.26\ntags: Linux\ndescription: CentOS6.5 离线安装MySQL5.6.26\ndate: 2018-06-06 15:59:52\n---\n#### 1、卸载之前安装的MySQL\n```shell\n# rpm -qa | grep mysql   --查看系统之前是否已安装MySQL。\n# rpm -e --nodeps mysql-libs-5.1.71-1.el6.x86_64   --执行删除语句\n# rm -rf /var/lib/mysql*   --善后处理\n# rm -rf /usr/share/mysql*\n```\n<!--more-->\n#### 2、安装MySQL\n###### 2.1 下载并安装 libaio\n```shell\n# cd /usr/local\n# wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libaio-0.3.107-10.el6.x86_64.rpm\n# rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm\n```\n###### 2.2 下载并安装MySQL\n```shell\n# cd /usr/local\n# wget https://dev.mysql.com/get/archives/mysql-5.6/MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar\n# tar -xf MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar\n# rpm -ivh MySQL-server-5.6.26-1.linux_glibc2.5.x86_64.rpm\n# rpm -ivh MySQL-client-5.6.26-1.linux_glibc2.5.x86_64.rpm\n```\n###### 2.3 查看并修改MySQL root用户密码\n```shell\n# more /root/.mysql_secret\n# service mysql restart\n# mysqladmin -uroot -pFeyU2YjwMcAw9Nv0 password 'root'  --修改root密码为root\n# mysql -uroot -proot   --测试登陆\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-1d296e2cb8b73d3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n###### 2.4 配置MySQL数据库编码\n```shell\n# cp -rp /usr/share/mysql/my-default.cnf /etc/my.cnf\n# 在mysqld下面增加\ninit-connect='SET NAMES utf8'\ncharacter-set-server = utf8\n# service mysql restart\n# mysql -uroot -proot  --验证是否成功\n# show variables like 'character%';\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-6cdfd951579ad2d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n------------\n![](https://upload-images.jianshu.io/upload_images/2743275-eb169140eb6b5b36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n###### 2.5 配置MySQL远程访问\n```shell\n# service iptables stop\n# chkconfig iptables off\n# mysql -uroot -proot\n# grant all privileges on *.* to root@'%' identified by 'root' WITH GRANT OPTION;\n# flush privileges;\n```","slug":"CentOS6.5 离线安装MySQL5.6.26","published":1,"updated":"2018-06-05T11:40:31.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58iro5000448dkph485j4r","content":"<h4 id=\"1、卸载之前安装的MySQL\"><a href=\"#1、卸载之前安装的MySQL\" class=\"headerlink\" title=\"1、卸载之前安装的MySQL\"></a>1、卸载之前安装的MySQL</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rpm -qa | grep mysql   --查看系统之前是否已安装MySQL。</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -e --nodeps mysql-libs-5.1.71-1.el6.x86_64   --执行删除语句</span><br><span class=\"line\"><span class=\"meta\">#</span> rm -rf /var/lib/mysql*   --善后处理</span><br><span class=\"line\"><span class=\"meta\">#</span> rm -rf /usr/share/mysql*</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"2、安装MySQL\"><a href=\"#2、安装MySQL\" class=\"headerlink\" title=\"2、安装MySQL\"></a>2、安装MySQL</h4><h6 id=\"2-1-下载并安装-libaio\"><a href=\"#2-1-下载并安装-libaio\" class=\"headerlink\" title=\"2.1 下载并安装 libaio\"></a>2.1 下载并安装 libaio</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libaio-0.3.107-10.el6.x86_64.rpm</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-2-下载并安装MySQL\"><a href=\"#2-2-下载并安装MySQL\" class=\"headerlink\" title=\"2.2 下载并安装MySQL\"></a>2.2 下载并安装MySQL</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local</span><br><span class=\"line\"><span class=\"meta\">#</span> wget https://dev.mysql.com/get/archives/mysql-5.6/MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -xf MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -ivh MySQL-server-5.6.26-1.linux_glibc2.5.x86_64.rpm</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -ivh MySQL-client-5.6.26-1.linux_glibc2.5.x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-3-查看并修改MySQL-root用户密码\"><a href=\"#2-3-查看并修改MySQL-root用户密码\" class=\"headerlink\" title=\"2.3 查看并修改MySQL root用户密码\"></a>2.3 查看并修改MySQL root用户密码</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> more /root/.mysql_secret</span><br><span class=\"line\"><span class=\"meta\">#</span> service mysql restart</span><br><span class=\"line\"><span class=\"meta\">#</span> mysqladmin -uroot -pFeyU2YjwMcAw9Nv0 password 'root'  --修改root密码为root</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -uroot -proot   --测试登陆</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1d296e2cb8b73d3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"2-4-配置MySQL数据库编码\"><a href=\"#2-4-配置MySQL数据库编码\" class=\"headerlink\" title=\"2.4 配置MySQL数据库编码\"></a>2.4 配置MySQL数据库编码</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cp -rp /usr/share/mysql/my-default.cnf /etc/my.cnf</span><br><span class=\"line\"><span class=\"meta\">#</span> 在mysqld下面增加</span><br><span class=\"line\">init-connect='SET NAMES utf8'</span><br><span class=\"line\">character-set-server = utf8</span><br><span class=\"line\"><span class=\"meta\">#</span> service mysql restart</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -uroot -proot  --验证是否成功</span><br><span class=\"line\"><span class=\"meta\">#</span> show variables like 'character%';</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-6cdfd951579ad2d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-eb169140eb6b5b36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"2-5-配置MySQL远程访问\"><a href=\"#2-5-配置MySQL远程访问\" class=\"headerlink\" title=\"2.5 配置MySQL远程访问\"></a>2.5 配置MySQL远程访问</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> service iptables stop</span><br><span class=\"line\"><span class=\"meta\">#</span> chkconfig iptables off</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -uroot -proot</span><br><span class=\"line\"><span class=\"meta\">#</span> grant all privileges on *.* to root@'%' identified by 'root' WITH GRANT OPTION;</span><br><span class=\"line\"><span class=\"meta\">#</span> flush privileges;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h4 id=\"1、卸载之前安装的MySQL\"><a href=\"#1、卸载之前安装的MySQL\" class=\"headerlink\" title=\"1、卸载之前安装的MySQL\"></a>1、卸载之前安装的MySQL</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rpm -qa | grep mysql   --查看系统之前是否已安装MySQL。</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -e --nodeps mysql-libs-5.1.71-1.el6.x86_64   --执行删除语句</span><br><span class=\"line\"><span class=\"meta\">#</span> rm -rf /var/lib/mysql*   --善后处理</span><br><span class=\"line\"><span class=\"meta\">#</span> rm -rf /usr/share/mysql*</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"2、安装MySQL\"><a href=\"#2、安装MySQL\" class=\"headerlink\" title=\"2、安装MySQL\"></a>2、安装MySQL</h4><h6 id=\"2-1-下载并安装-libaio\"><a href=\"#2-1-下载并安装-libaio\" class=\"headerlink\" title=\"2.1 下载并安装 libaio\"></a>2.1 下载并安装 libaio</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libaio-0.3.107-10.el6.x86_64.rpm</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-2-下载并安装MySQL\"><a href=\"#2-2-下载并安装MySQL\" class=\"headerlink\" title=\"2.2 下载并安装MySQL\"></a>2.2 下载并安装MySQL</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local</span><br><span class=\"line\"><span class=\"meta\">#</span> wget https://dev.mysql.com/get/archives/mysql-5.6/MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -xf MySQL-5.6.26-1.linux_glibc2.5.x86_64.rpm-bundle.tar</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -ivh MySQL-server-5.6.26-1.linux_glibc2.5.x86_64.rpm</span><br><span class=\"line\"><span class=\"meta\">#</span> rpm -ivh MySQL-client-5.6.26-1.linux_glibc2.5.x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h6 id=\"2-3-查看并修改MySQL-root用户密码\"><a href=\"#2-3-查看并修改MySQL-root用户密码\" class=\"headerlink\" title=\"2.3 查看并修改MySQL root用户密码\"></a>2.3 查看并修改MySQL root用户密码</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> more /root/.mysql_secret</span><br><span class=\"line\"><span class=\"meta\">#</span> service mysql restart</span><br><span class=\"line\"><span class=\"meta\">#</span> mysqladmin -uroot -pFeyU2YjwMcAw9Nv0 password 'root'  --修改root密码为root</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -uroot -proot   --测试登陆</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1d296e2cb8b73d3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"2-4-配置MySQL数据库编码\"><a href=\"#2-4-配置MySQL数据库编码\" class=\"headerlink\" title=\"2.4 配置MySQL数据库编码\"></a>2.4 配置MySQL数据库编码</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cp -rp /usr/share/mysql/my-default.cnf /etc/my.cnf</span><br><span class=\"line\"><span class=\"meta\">#</span> 在mysqld下面增加</span><br><span class=\"line\">init-connect='SET NAMES utf8'</span><br><span class=\"line\">character-set-server = utf8</span><br><span class=\"line\"><span class=\"meta\">#</span> service mysql restart</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -uroot -proot  --验证是否成功</span><br><span class=\"line\"><span class=\"meta\">#</span> show variables like 'character%';</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-6cdfd951579ad2d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-eb169140eb6b5b36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"2-5-配置MySQL远程访问\"><a href=\"#2-5-配置MySQL远程访问\" class=\"headerlink\" title=\"2.5 配置MySQL远程访问\"></a>2.5 配置MySQL远程访问</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> service iptables stop</span><br><span class=\"line\"><span class=\"meta\">#</span> chkconfig iptables off</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -uroot -proot</span><br><span class=\"line\"><span class=\"meta\">#</span> grant all privileges on *.* to root@'%' identified by 'root' WITH GRANT OPTION;</span><br><span class=\"line\"><span class=\"meta\">#</span> flush privileges;</span><br></pre></td></tr></table></figure>"},{"title":"ELK之本地Grok Debugger配置","date":"2018-04-15T00:13:52.000Z","_content":"1、Ruby环境安装\n\n\t清理已安装过的\n\t#yum erase ruby ruby-libs ruby-mode ruby-rdoc ruby-irb ruby-ri ruby-docs\n\t#yum remove ruby\n\n\t1.Ruby的安装\n\t#yum install -y wget unzip\n\t#cd /usr/local\n\t#yum -y install  openssl-devel gcc\n\t#wget https://ruby.taobao.org/mirrors/ruby/2.1/ruby-2.1.7.tar.gz\n\t#tar zxf ruby-2.1.7.tar.gz\n\t#cd ruby-2.1.7\n\t#./configure --prefix=/usr/local/ruby2.1.7\n\t#make && make install\n\t#echo 'export PATH=/usr/local/ruby2.1.7/bin:$PATH'>>/etc/profile\n\t#source /etc/profile\n\t说明：别使用ruby最新的2.2或者2.3的版本，可能出现部分组件无法安装\n<!--more-->\n\t2. RubyGems工具安装\n\t#cd /usr/local\n\t#wget http://rubygems.global.ssl.fastly.net/rubygems/rubygems-2.6.2.tgz\n\t#tar zxf rubygems-2.6.2.tgz\n\t#cd rubygems-2.6.2\n\t#ruby setup.rb\n\n\t3.替换gem源,又是由于网络环境的问题，访问官方源非常慢，使用淘宝的gem源\n\t#gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n\t#gem sources –l\n\n\t4.Grokbug的安装\n\t#mkdir /usr/local/grokbug\n\t#cd /usr/local/grokbug\n\t#wget https://codeload.github.com/nickethier/grokdebug/zip/master\n\t#unzip master\n\t#mv grokdebug-master/* .\n\t#rm -rf grokdebug-master/\n\n\t5.Ruby组件安装(以下组件都对版本有相应的要求)\n\t查看缺少的组件\n\t#ruby config.ru\n\t就会提示组件及对应的版本\n\t#gem install bundler\n\tgem install cabin -v=0.5.0\n\tgem install haml -v=3.1.7\n\tgem install jls-grok -v=0.10.10\n\tgem install json -v=1.7.5\n\tgem install kgio -v=2.8.0\n\tgem install rack -v=1.4.1\n\tgem install rack-protection -v=1.2.0\n\tgem install raindrops -v=0.11.0\n\tgem install shotgun -v=0.9\n\tgem install tilt -v=1.3.3\n\tgem install sinatra -v=1.3.3\n\tgem install unicorn -v=4.6.3\n\n\t6.启动服务\n\t#cd /usr/local/grokbug\n\t#nohup bundle exec unicorn -p 8080 -c ./unicorn &\n\n\t7.关闭防火墙\n\t#service iptables stop\n\t#chkconfig iptables off\n\n\t8.替换Google的jquery源\n\t#cd /usr/local/grokbug\n\t#cd views \n\n###执行下面5条语句\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js#//lib.sinaapp.com/js/jquery/1.8.1/jquery.min.js#g' index.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js#//lib.sinaapp.com/js/jquery-ui/1.9.2/jquery-ui.min.js#g' index.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g' patterns.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.0/themes/ui-lightness/jquery-ui.css#//lib.sinaapp.com/js/jquery-ui/1.9.0/themes/ui-lightness/jquery-ui.css#g' layout.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g' discover.haml\n\n\n测试，通过web路径访问测试了\n[http://xxx](http://master.am.com/ambari):8080\n\n![](https://upload-images.jianshu.io/upload_images/2743275-ab527d48b90f29e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n","source":"_posts/ELK之本地Grok-Debugger配置.md","raw":"---\ntitle: ELK之本地Grok Debugger配置\ndate: 2018-04-15 08:13:52\ntags: ELK日志分析\n---\n1、Ruby环境安装\n\n\t清理已安装过的\n\t#yum erase ruby ruby-libs ruby-mode ruby-rdoc ruby-irb ruby-ri ruby-docs\n\t#yum remove ruby\n\n\t1.Ruby的安装\n\t#yum install -y wget unzip\n\t#cd /usr/local\n\t#yum -y install  openssl-devel gcc\n\t#wget https://ruby.taobao.org/mirrors/ruby/2.1/ruby-2.1.7.tar.gz\n\t#tar zxf ruby-2.1.7.tar.gz\n\t#cd ruby-2.1.7\n\t#./configure --prefix=/usr/local/ruby2.1.7\n\t#make && make install\n\t#echo 'export PATH=/usr/local/ruby2.1.7/bin:$PATH'>>/etc/profile\n\t#source /etc/profile\n\t说明：别使用ruby最新的2.2或者2.3的版本，可能出现部分组件无法安装\n<!--more-->\n\t2. RubyGems工具安装\n\t#cd /usr/local\n\t#wget http://rubygems.global.ssl.fastly.net/rubygems/rubygems-2.6.2.tgz\n\t#tar zxf rubygems-2.6.2.tgz\n\t#cd rubygems-2.6.2\n\t#ruby setup.rb\n\n\t3.替换gem源,又是由于网络环境的问题，访问官方源非常慢，使用淘宝的gem源\n\t#gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n\t#gem sources –l\n\n\t4.Grokbug的安装\n\t#mkdir /usr/local/grokbug\n\t#cd /usr/local/grokbug\n\t#wget https://codeload.github.com/nickethier/grokdebug/zip/master\n\t#unzip master\n\t#mv grokdebug-master/* .\n\t#rm -rf grokdebug-master/\n\n\t5.Ruby组件安装(以下组件都对版本有相应的要求)\n\t查看缺少的组件\n\t#ruby config.ru\n\t就会提示组件及对应的版本\n\t#gem install bundler\n\tgem install cabin -v=0.5.0\n\tgem install haml -v=3.1.7\n\tgem install jls-grok -v=0.10.10\n\tgem install json -v=1.7.5\n\tgem install kgio -v=2.8.0\n\tgem install rack -v=1.4.1\n\tgem install rack-protection -v=1.2.0\n\tgem install raindrops -v=0.11.0\n\tgem install shotgun -v=0.9\n\tgem install tilt -v=1.3.3\n\tgem install sinatra -v=1.3.3\n\tgem install unicorn -v=4.6.3\n\n\t6.启动服务\n\t#cd /usr/local/grokbug\n\t#nohup bundle exec unicorn -p 8080 -c ./unicorn &\n\n\t7.关闭防火墙\n\t#service iptables stop\n\t#chkconfig iptables off\n\n\t8.替换Google的jquery源\n\t#cd /usr/local/grokbug\n\t#cd views \n\n###执行下面5条语句\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js#//lib.sinaapp.com/js/jquery/1.8.1/jquery.min.js#g' index.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js#//lib.sinaapp.com/js/jquery-ui/1.9.2/jquery-ui.min.js#g' index.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g' patterns.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.0/themes/ui-lightness/jquery-ui.css#//lib.sinaapp.com/js/jquery-ui/1.9.0/themes/ui-lightness/jquery-ui.css#g' layout.haml\n\n\tsed -i 's#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g' discover.haml\n\n\n测试，通过web路径访问测试了\n[http://xxx](http://master.am.com/ambari):8080\n\n![](https://upload-images.jianshu.io/upload_images/2743275-ab527d48b90f29e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n","slug":"ELK之本地Grok-Debugger配置","published":1,"updated":"2018-06-05T11:40:31.969Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58iro9000548dkacc5r4g6","content":"<p>1、Ruby环境安装</p>\n<pre><code>清理已安装过的\n#yum erase ruby ruby-libs ruby-mode ruby-rdoc ruby-irb ruby-ri ruby-docs\n#yum remove ruby\n\n1.Ruby的安装\n#yum install -y wget unzip\n#cd /usr/local\n#yum -y install  openssl-devel gcc\n#wget https://ruby.taobao.org/mirrors/ruby/2.1/ruby-2.1.7.tar.gz\n#tar zxf ruby-2.1.7.tar.gz\n#cd ruby-2.1.7\n#./configure --prefix=/usr/local/ruby2.1.7\n#make &amp;&amp; make install\n#echo &apos;export PATH=/usr/local/ruby2.1.7/bin:$PATH&apos;&gt;&gt;/etc/profile\n#source /etc/profile\n说明：别使用ruby最新的2.2或者2.3的版本，可能出现部分组件无法安装\n</code></pre><a id=\"more\"></a>\n<pre><code>2. RubyGems工具安装\n#cd /usr/local\n#wget http://rubygems.global.ssl.fastly.net/rubygems/rubygems-2.6.2.tgz\n#tar zxf rubygems-2.6.2.tgz\n#cd rubygems-2.6.2\n#ruby setup.rb\n\n3.替换gem源,又是由于网络环境的问题，访问官方源非常慢，使用淘宝的gem源\n#gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n#gem sources –l\n\n4.Grokbug的安装\n#mkdir /usr/local/grokbug\n#cd /usr/local/grokbug\n#wget https://codeload.github.com/nickethier/grokdebug/zip/master\n#unzip master\n#mv grokdebug-master/* .\n#rm -rf grokdebug-master/\n\n5.Ruby组件安装(以下组件都对版本有相应的要求)\n查看缺少的组件\n#ruby config.ru\n就会提示组件及对应的版本\n#gem install bundler\ngem install cabin -v=0.5.0\ngem install haml -v=3.1.7\ngem install jls-grok -v=0.10.10\ngem install json -v=1.7.5\ngem install kgio -v=2.8.0\ngem install rack -v=1.4.1\ngem install rack-protection -v=1.2.0\ngem install raindrops -v=0.11.0\ngem install shotgun -v=0.9\ngem install tilt -v=1.3.3\ngem install sinatra -v=1.3.3\ngem install unicorn -v=4.6.3\n\n6.启动服务\n#cd /usr/local/grokbug\n#nohup bundle exec unicorn -p 8080 -c ./unicorn &amp;\n\n7.关闭防火墙\n#service iptables stop\n#chkconfig iptables off\n\n8.替换Google的jquery源\n#cd /usr/local/grokbug\n#cd views \n</code></pre><p>###执行下面5条语句</p>\n<pre><code>sed -i &apos;s#//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js#//lib.sinaapp.com/js/jquery/1.8.1/jquery.min.js#g&apos; index.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js#//lib.sinaapp.com/js/jquery-ui/1.9.2/jquery-ui.min.js#g&apos; index.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g&apos; patterns.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.0/themes/ui-lightness/jquery-ui.css#//lib.sinaapp.com/js/jquery-ui/1.9.0/themes/ui-lightness/jquery-ui.css#g&apos; layout.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g&apos; discover.haml\n</code></pre><p>测试，通过web路径访问测试了<br><a href=\"http://master.am.com/ambari\" target=\"_blank\" rel=\"noopener\">http://xxx</a>:8080</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-ab527d48b90f29e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>1、Ruby环境安装</p>\n<pre><code>清理已安装过的\n#yum erase ruby ruby-libs ruby-mode ruby-rdoc ruby-irb ruby-ri ruby-docs\n#yum remove ruby\n\n1.Ruby的安装\n#yum install -y wget unzip\n#cd /usr/local\n#yum -y install  openssl-devel gcc\n#wget https://ruby.taobao.org/mirrors/ruby/2.1/ruby-2.1.7.tar.gz\n#tar zxf ruby-2.1.7.tar.gz\n#cd ruby-2.1.7\n#./configure --prefix=/usr/local/ruby2.1.7\n#make &amp;&amp; make install\n#echo &apos;export PATH=/usr/local/ruby2.1.7/bin:$PATH&apos;&gt;&gt;/etc/profile\n#source /etc/profile\n说明：别使用ruby最新的2.2或者2.3的版本，可能出现部分组件无法安装\n</code></pre>","more":"<pre><code>2. RubyGems工具安装\n#cd /usr/local\n#wget http://rubygems.global.ssl.fastly.net/rubygems/rubygems-2.6.2.tgz\n#tar zxf rubygems-2.6.2.tgz\n#cd rubygems-2.6.2\n#ruby setup.rb\n\n3.替换gem源,又是由于网络环境的问题，访问官方源非常慢，使用淘宝的gem源\n#gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\n#gem sources –l\n\n4.Grokbug的安装\n#mkdir /usr/local/grokbug\n#cd /usr/local/grokbug\n#wget https://codeload.github.com/nickethier/grokdebug/zip/master\n#unzip master\n#mv grokdebug-master/* .\n#rm -rf grokdebug-master/\n\n5.Ruby组件安装(以下组件都对版本有相应的要求)\n查看缺少的组件\n#ruby config.ru\n就会提示组件及对应的版本\n#gem install bundler\ngem install cabin -v=0.5.0\ngem install haml -v=3.1.7\ngem install jls-grok -v=0.10.10\ngem install json -v=1.7.5\ngem install kgio -v=2.8.0\ngem install rack -v=1.4.1\ngem install rack-protection -v=1.2.0\ngem install raindrops -v=0.11.0\ngem install shotgun -v=0.9\ngem install tilt -v=1.3.3\ngem install sinatra -v=1.3.3\ngem install unicorn -v=4.6.3\n\n6.启动服务\n#cd /usr/local/grokbug\n#nohup bundle exec unicorn -p 8080 -c ./unicorn &amp;\n\n7.关闭防火墙\n#service iptables stop\n#chkconfig iptables off\n\n8.替换Google的jquery源\n#cd /usr/local/grokbug\n#cd views \n</code></pre><p>###执行下面5条语句</p>\n<pre><code>sed -i &apos;s#//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js#//lib.sinaapp.com/js/jquery/1.8.1/jquery.min.js#g&apos; index.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js#//lib.sinaapp.com/js/jquery-ui/1.9.2/jquery-ui.min.js#g&apos; index.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g&apos; patterns.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jqueryui/1.9.0/themes/ui-lightness/jquery-ui.css#//lib.sinaapp.com/js/jquery-ui/1.9.0/themes/ui-lightness/jquery-ui.css#g&apos; layout.haml\n\nsed -i &apos;s#//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js#//lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js#g&apos; discover.haml\n</code></pre><p>测试，通过web路径访问测试了<br><a href=\"http://master.am.com/ambari\" target=\"_blank\" rel=\"noopener\">http://xxx</a>:8080</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-ab527d48b90f29e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"ElasticSearch5.x安装Elasticsearch-head插件","date":"2018-08-21T08:03:00.000Z","description":"ElasticSearch5.x安装Elasticsearch-head插件","_content":"#### 一、安装Node.js环境\n```shell\n# cd /usr/local\n# wget https://nodejs.org/dist/v8.11.4/node-v8.11.4-linux-x64.tar.xz\n# yum install -y xz\n# xz -d node-v8.11.4-linux-x64.tar.xz\n# tar -xf node-v8.11.4-linux-x64.tar\n# cd /usr/local/bin   //全局使用 npm 和 node,需要做相关软链\n# ln -s /usr/local/node-v8.11.4-linux-x64/bin/node\n# ln -s /usr/local/node-v8.11.4-linux-x64/bin/npm\n# node -v\n# npm -v\n//使用淘宝镜像\n# npm config get registry // https://registry.npmjs.org/\n# npm config set registry https://registry.npm.taobao.org\n```\n<!--more-->\n#### 二、下载插件包\n去https://github.com/mobz/elasticsearch-head 下载代码上传到服务器上\n```shell\n# cd elasticsearch-head\n# npm install -g grunt -cli\n# npm install   //有报错忽略\n# npm install grunt --save  //有报错忽略\n# vim Gruntfile.js   // server.options增加 hostname: '0.0.0.0',\n# vim _site/app.js  //修改ES端口与IP 默认为 http://localhost:9200\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-10a0c4aae4bb3efb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![](https://upload-images.jianshu.io/upload_images/2743275-c94e1e6952bc69c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### 三、修改Elasticsearch配置\n修改elasticsearch.yml文件加入以下内容：\n```shell\n# 是否支持跨域\nhttp.cors.enabled: true\n# *表示支持所有域名\nhttp.cors.allow-origin: \"*\"\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-68b0592e86fdf36f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### 四、重启Elasticsearch（一定要重启不然配置不生效）\n\n#### 五、启动elasticsearch-head插件\n```shell\n# cd /usr/local/bin/\n# ln -s /usr/local/node-v8.11.4-linux-x64/bin/grunt\n# cd /usr/local/elasticsearch-5.5.2/elasticsearch-head\n# grunt server (后台运行 + &)   \n```\n![](https://upload-images.jianshu.io/upload_images/2743275-38e4c25912195708.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-5f43e2a56b85e914.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/ElasticSearch5.x安装Elasticsearch-head插件.md","raw":"---\ntitle: ElasticSearch5.x安装Elasticsearch-head插件\ndate: 2018-08-21 16:03\ntags: ELK日志分析平台\ndescription: ElasticSearch5.x安装Elasticsearch-head插件\n---\n#### 一、安装Node.js环境\n```shell\n# cd /usr/local\n# wget https://nodejs.org/dist/v8.11.4/node-v8.11.4-linux-x64.tar.xz\n# yum install -y xz\n# xz -d node-v8.11.4-linux-x64.tar.xz\n# tar -xf node-v8.11.4-linux-x64.tar\n# cd /usr/local/bin   //全局使用 npm 和 node,需要做相关软链\n# ln -s /usr/local/node-v8.11.4-linux-x64/bin/node\n# ln -s /usr/local/node-v8.11.4-linux-x64/bin/npm\n# node -v\n# npm -v\n//使用淘宝镜像\n# npm config get registry // https://registry.npmjs.org/\n# npm config set registry https://registry.npm.taobao.org\n```\n<!--more-->\n#### 二、下载插件包\n去https://github.com/mobz/elasticsearch-head 下载代码上传到服务器上\n```shell\n# cd elasticsearch-head\n# npm install -g grunt -cli\n# npm install   //有报错忽略\n# npm install grunt --save  //有报错忽略\n# vim Gruntfile.js   // server.options增加 hostname: '0.0.0.0',\n# vim _site/app.js  //修改ES端口与IP 默认为 http://localhost:9200\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-10a0c4aae4bb3efb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![](https://upload-images.jianshu.io/upload_images/2743275-c94e1e6952bc69c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### 三、修改Elasticsearch配置\n修改elasticsearch.yml文件加入以下内容：\n```shell\n# 是否支持跨域\nhttp.cors.enabled: true\n# *表示支持所有域名\nhttp.cors.allow-origin: \"*\"\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-68b0592e86fdf36f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### 四、重启Elasticsearch（一定要重启不然配置不生效）\n\n#### 五、启动elasticsearch-head插件\n```shell\n# cd /usr/local/bin/\n# ln -s /usr/local/node-v8.11.4-linux-x64/bin/grunt\n# cd /usr/local/elasticsearch-5.5.2/elasticsearch-head\n# grunt server (后台运行 + &)   \n```\n![](https://upload-images.jianshu.io/upload_images/2743275-38e4c25912195708.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-5f43e2a56b85e914.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"ElasticSearch5.x安装Elasticsearch-head插件","published":1,"updated":"2019-02-25T17:03:58.560Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irog000848dk2vg4rmvp","content":"<h4 id=\"一、安装Node-js环境\"><a href=\"#一、安装Node-js环境\" class=\"headerlink\" title=\"一、安装Node.js环境\"></a>一、安装Node.js环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local</span><br><span class=\"line\"><span class=\"meta\">#</span> wget https://nodejs.org/dist/v8.11.4/node-v8.11.4-linux-x64.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y xz</span><br><span class=\"line\"><span class=\"meta\">#</span> xz -d node-v8.11.4-linux-x64.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -xf node-v8.11.4-linux-x64.tar</span><br><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/bin   //全局使用 npm 和 node,需要做相关软链</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/node-v8.11.4-linux-x64/bin/node</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/node-v8.11.4-linux-x64/bin/npm</span><br><span class=\"line\"><span class=\"meta\">#</span> node -v</span><br><span class=\"line\"><span class=\"meta\">#</span> npm -v</span><br><span class=\"line\">//使用淘宝镜像</span><br><span class=\"line\"><span class=\"meta\">#</span> npm config get registry // https://registry.npmjs.org/</span><br><span class=\"line\"><span class=\"meta\">#</span> npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"二、下载插件包\"><a href=\"#二、下载插件包\" class=\"headerlink\" title=\"二、下载插件包\"></a>二、下载插件包</h4><p>去<a href=\"https://github.com/mobz/elasticsearch-head\" target=\"_blank\" rel=\"noopener\">https://github.com/mobz/elasticsearch-head</a> 下载代码上传到服务器上<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd elasticsearch-head</span><br><span class=\"line\"><span class=\"meta\">#</span> npm install -g grunt -cli</span><br><span class=\"line\"><span class=\"meta\">#</span> npm install   //有报错忽略</span><br><span class=\"line\"><span class=\"meta\">#</span> npm install grunt --save  //有报错忽略</span><br><span class=\"line\"><span class=\"meta\">#</span> vim Gruntfile.js   // server.options增加 hostname: '0.0.0.0',</span><br><span class=\"line\"><span class=\"meta\">#</span> vim _site/app.js  //修改ES端口与IP 默认为 http://localhost:9200</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-10a0c4aae4bb3efb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-c94e1e6952bc69c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"三、修改Elasticsearch配置\"><a href=\"#三、修改Elasticsearch配置\" class=\"headerlink\" title=\"三、修改Elasticsearch配置\"></a>三、修改Elasticsearch配置</h4><p>修改elasticsearch.yml文件加入以下内容：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 是否支持跨域</span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\"><span class=\"meta\">#</span> *表示支持所有域名</span><br><span class=\"line\">http.cors.allow-origin: \"*\"</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-68b0592e86fdf36f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"四、重启Elasticsearch（一定要重启不然配置不生效）\"><a href=\"#四、重启Elasticsearch（一定要重启不然配置不生效）\" class=\"headerlink\" title=\"四、重启Elasticsearch（一定要重启不然配置不生效）\"></a>四、重启Elasticsearch（一定要重启不然配置不生效）</h4><h4 id=\"五、启动elasticsearch-head插件\"><a href=\"#五、启动elasticsearch-head插件\" class=\"headerlink\" title=\"五、启动elasticsearch-head插件\"></a>五、启动elasticsearch-head插件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/bin/</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/node-v8.11.4-linux-x64/bin/grunt</span><br><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/elasticsearch-5.5.2/elasticsearch-head</span><br><span class=\"line\"><span class=\"meta\">#</span> grunt server (后台运行 + &amp;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-38e4c25912195708.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5f43e2a56b85e914.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"一、安装Node-js环境\"><a href=\"#一、安装Node-js环境\" class=\"headerlink\" title=\"一、安装Node.js环境\"></a>一、安装Node.js环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local</span><br><span class=\"line\"><span class=\"meta\">#</span> wget https://nodejs.org/dist/v8.11.4/node-v8.11.4-linux-x64.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y xz</span><br><span class=\"line\"><span class=\"meta\">#</span> xz -d node-v8.11.4-linux-x64.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -xf node-v8.11.4-linux-x64.tar</span><br><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/bin   //全局使用 npm 和 node,需要做相关软链</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/node-v8.11.4-linux-x64/bin/node</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/node-v8.11.4-linux-x64/bin/npm</span><br><span class=\"line\"><span class=\"meta\">#</span> node -v</span><br><span class=\"line\"><span class=\"meta\">#</span> npm -v</span><br><span class=\"line\">//使用淘宝镜像</span><br><span class=\"line\"><span class=\"meta\">#</span> npm config get registry // https://registry.npmjs.org/</span><br><span class=\"line\"><span class=\"meta\">#</span> npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"二、下载插件包\"><a href=\"#二、下载插件包\" class=\"headerlink\" title=\"二、下载插件包\"></a>二、下载插件包</h4><p>去<a href=\"https://github.com/mobz/elasticsearch-head\" target=\"_blank\" rel=\"noopener\">https://github.com/mobz/elasticsearch-head</a> 下载代码上传到服务器上<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd elasticsearch-head</span><br><span class=\"line\"><span class=\"meta\">#</span> npm install -g grunt -cli</span><br><span class=\"line\"><span class=\"meta\">#</span> npm install   //有报错忽略</span><br><span class=\"line\"><span class=\"meta\">#</span> npm install grunt --save  //有报错忽略</span><br><span class=\"line\"><span class=\"meta\">#</span> vim Gruntfile.js   // server.options增加 hostname: '0.0.0.0',</span><br><span class=\"line\"><span class=\"meta\">#</span> vim _site/app.js  //修改ES端口与IP 默认为 http://localhost:9200</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-10a0c4aae4bb3efb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-c94e1e6952bc69c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"三、修改Elasticsearch配置\"><a href=\"#三、修改Elasticsearch配置\" class=\"headerlink\" title=\"三、修改Elasticsearch配置\"></a>三、修改Elasticsearch配置</h4><p>修改elasticsearch.yml文件加入以下内容：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 是否支持跨域</span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\"><span class=\"meta\">#</span> *表示支持所有域名</span><br><span class=\"line\">http.cors.allow-origin: \"*\"</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-68b0592e86fdf36f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"四、重启Elasticsearch（一定要重启不然配置不生效）\"><a href=\"#四、重启Elasticsearch（一定要重启不然配置不生效）\" class=\"headerlink\" title=\"四、重启Elasticsearch（一定要重启不然配置不生效）\"></a>四、重启Elasticsearch（一定要重启不然配置不生效）</h4><h4 id=\"五、启动elasticsearch-head插件\"><a href=\"#五、启动elasticsearch-head插件\" class=\"headerlink\" title=\"五、启动elasticsearch-head插件\"></a>五、启动elasticsearch-head插件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/bin/</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/node-v8.11.4-linux-x64/bin/grunt</span><br><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/elasticsearch-5.5.2/elasticsearch-head</span><br><span class=\"line\"><span class=\"meta\">#</span> grunt server (后台运行 + &amp;)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-38e4c25912195708.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5f43e2a56b85e914.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"FreeMarker 中文乱码问题解决办法","description":"Spring集成FreeMarker 中文乱码问题解决办法","date":"2018-04-17T07:53:54.000Z","_content":"解决办法一：通过修改配置文件freemarker.properties，修改默认编码：\n\n\tlocale=zh_CN\n\tdefault_encoding=gbk\n\tnumber_format=#\n\tdate_format=yyyy-MM-dd\n\ttime_format=HH:mm:Ss\n\tdatetime_format=yyyy-MM-dd HH:mm:Ss\n\n还有1个办法   在contentType里设置value为text/html;charset=UTF-8\"\n<!--more-->\n\t<!-- FreeMarker视图解析器 -->\n\t<bean id=\"viewResolver\"\n\t\tclass=\"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver\">\n\t\t<property name=\"viewClass\"\n\t\t\tvalue=\"org.springframework.web.servlet.view.freemarker.FreeMarkerView\" />\n\t\t<property name=\"contentType\" value=\"text/html;charset=UTF-8\" />\n\t\t<property name=\"cache\" value=\"false\" />\n\t\t<property name=\"viewNames\" value=\"*.ftl\" />\n\t\t<property name=\"suffix\" value=\"\" />\n\t\t<property name=\"order\" value=\"2\" />\n\t</bean>\n\n解决办法二：通过spring或其他第三方工具配置：\n\n\t<bean id=\"freemakerCongfig\"\n\t    class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer\">\n\t       <property name=\"templateLoaderPath\">\n\t\t   <value>/WEB-INF/web/</value>\n\t       </property>\n\t       <property name=\"freemarkerSettings\">\n\t       <props>\n\t       <prop key=\"defaultEncoding\">gbk</prop>\n\t       </props>\n\t       </property>\n\t    </bean>\n\n\n###### 页面编码和charset要跟上面配置的一致才可以，\n\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=gbk\">\n\n###### 注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码(用记事本打开,另存为可以看到文件的编码)为UTF-8而页面的charset=gbk就会出现乱码，反之也一样。","source":"_posts/FreeMarker-中文乱码问题解决办法.md","raw":"title: FreeMarker 中文乱码问题解决办法\ntags: Java\ndescription: Spring集成FreeMarker 中文乱码问题解决办法\ndate: 2018-04-17 15:53:54\n---\n解决办法一：通过修改配置文件freemarker.properties，修改默认编码：\n\n\tlocale=zh_CN\n\tdefault_encoding=gbk\n\tnumber_format=#\n\tdate_format=yyyy-MM-dd\n\ttime_format=HH:mm:Ss\n\tdatetime_format=yyyy-MM-dd HH:mm:Ss\n\n还有1个办法   在contentType里设置value为text/html;charset=UTF-8\"\n<!--more-->\n\t<!-- FreeMarker视图解析器 -->\n\t<bean id=\"viewResolver\"\n\t\tclass=\"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver\">\n\t\t<property name=\"viewClass\"\n\t\t\tvalue=\"org.springframework.web.servlet.view.freemarker.FreeMarkerView\" />\n\t\t<property name=\"contentType\" value=\"text/html;charset=UTF-8\" />\n\t\t<property name=\"cache\" value=\"false\" />\n\t\t<property name=\"viewNames\" value=\"*.ftl\" />\n\t\t<property name=\"suffix\" value=\"\" />\n\t\t<property name=\"order\" value=\"2\" />\n\t</bean>\n\n解决办法二：通过spring或其他第三方工具配置：\n\n\t<bean id=\"freemakerCongfig\"\n\t    class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer\">\n\t       <property name=\"templateLoaderPath\">\n\t\t   <value>/WEB-INF/web/</value>\n\t       </property>\n\t       <property name=\"freemarkerSettings\">\n\t       <props>\n\t       <prop key=\"defaultEncoding\">gbk</prop>\n\t       </props>\n\t       </property>\n\t    </bean>\n\n\n###### 页面编码和charset要跟上面配置的一致才可以，\n\t<meta http-equiv=\"Content-type\" content=\"text/html; charset=gbk\">\n\n###### 注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码(用记事本打开,另存为可以看到文件的编码)为UTF-8而页面的charset=gbk就会出现乱码，反之也一样。","slug":"FreeMarker-中文乱码问题解决办法","published":1,"updated":"2018-06-05T11:40:32.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58iroj000a48dkre8fcowu","content":"<p>解决办法一：通过修改配置文件freemarker.properties，修改默认编码：</p>\n<pre><code>locale=zh_CN\ndefault_encoding=gbk\nnumber_format=#\ndate_format=yyyy-MM-dd\ntime_format=HH:mm:Ss\ndatetime_format=yyyy-MM-dd HH:mm:Ss\n</code></pre><p>还有1个办法   在contentType里设置value为text/html;charset=UTF-8”<br><a id=\"more\"></a><br>    <!-- FreeMarker视图解析器 --><br>    <bean id=\"viewResolver\" class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver\"><br>        <property name=\"viewClass\" value=\"org.springframework.web.servlet.view.freemarker.FreeMarkerView\"><br>        <property name=\"contentType\" value=\"text/html;charset=UTF-8\"><br>        <property name=\"cache\" value=\"false\"><br>        <property name=\"viewNames\" value=\"*.ftl\"><br>        <property name=\"suffix\" value=\"\"><br>        <property name=\"order\" value=\"2\"><br>    </property></property></property></property></property></property></bean></p>\n<p>解决办法二：通过spring或其他第三方工具配置：</p>\n<pre><code>&lt;bean id=&quot;freemakerCongfig&quot;\n    class=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&quot;&gt;\n       &lt;property name=&quot;templateLoaderPath&quot;&gt;\n       &lt;value&gt;/WEB-INF/web/&lt;/value&gt;\n       &lt;/property&gt;\n       &lt;property name=&quot;freemarkerSettings&quot;&gt;\n       &lt;props&gt;\n       &lt;prop key=&quot;defaultEncoding&quot;&gt;gbk&lt;/prop&gt;\n       &lt;/props&gt;\n       &lt;/property&gt;\n    &lt;/bean&gt;\n</code></pre><h6 id=\"页面编码和charset要跟上面配置的一致才可以，\"><a href=\"#页面编码和charset要跟上面配置的一致才可以，\" class=\"headerlink\" title=\"页面编码和charset要跟上面配置的一致才可以，\"></a>页面编码和charset要跟上面配置的一致才可以，</h6><pre><code>&lt;meta http-equiv=&quot;Content-type&quot; content=&quot;text/html; charset=gbk&quot;&gt;\n</code></pre><h6 id=\"注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码-用记事本打开-另存为可以看到文件的编码-为UTF-8而页面的charset-gbk就会出现乱码，反之也一样。\"><a href=\"#注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码-用记事本打开-另存为可以看到文件的编码-为UTF-8而页面的charset-gbk就会出现乱码，反之也一样。\" class=\"headerlink\" title=\"注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码(用记事本打开,另存为可以看到文件的编码)为UTF-8而页面的charset=gbk就会出现乱码，反之也一样。\"></a>注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码(用记事本打开,另存为可以看到文件的编码)为UTF-8而页面的charset=gbk就会出现乱码，反之也一样。</h6>","site":{"data":{}},"excerpt":"<p>解决办法一：通过修改配置文件freemarker.properties，修改默认编码：</p>\n<pre><code>locale=zh_CN\ndefault_encoding=gbk\nnumber_format=#\ndate_format=yyyy-MM-dd\ntime_format=HH:mm:Ss\ndatetime_format=yyyy-MM-dd HH:mm:Ss\n</code></pre><p>还有1个办法   在contentType里设置value为text/html;charset=UTF-8”<br>","more":"<br>    <!-- FreeMarker视图解析器 --><br>    <bean id=\"viewResolver\" class=\"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver\"><br>        <property name=\"viewClass\" value=\"org.springframework.web.servlet.view.freemarker.FreeMarkerView\"><br>        <property name=\"contentType\" value=\"text/html;charset=UTF-8\"><br>        <property name=\"cache\" value=\"false\"><br>        <property name=\"viewNames\" value=\"*.ftl\"><br>        <property name=\"suffix\" value=\"\"><br>        <property name=\"order\" value=\"2\"><br>    </property></property></property></property></property></property></bean></p>\n<p>解决办法二：通过spring或其他第三方工具配置：</p>\n<pre><code>&lt;bean id=&quot;freemakerCongfig&quot;\n    class=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&quot;&gt;\n       &lt;property name=&quot;templateLoaderPath&quot;&gt;\n       &lt;value&gt;/WEB-INF/web/&lt;/value&gt;\n       &lt;/property&gt;\n       &lt;property name=&quot;freemarkerSettings&quot;&gt;\n       &lt;props&gt;\n       &lt;prop key=&quot;defaultEncoding&quot;&gt;gbk&lt;/prop&gt;\n       &lt;/props&gt;\n       &lt;/property&gt;\n    &lt;/bean&gt;\n</code></pre><h6 id=\"页面编码和charset要跟上面配置的一致才可以，\"><a href=\"#页面编码和charset要跟上面配置的一致才可以，\" class=\"headerlink\" title=\"页面编码和charset要跟上面配置的一致才可以，\"></a>页面编码和charset要跟上面配置的一致才可以，</h6><pre><code>&lt;meta http-equiv=&quot;Content-type&quot; content=&quot;text/html; charset=gbk&quot;&gt;\n</code></pre><h6 id=\"注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码-用记事本打开-另存为可以看到文件的编码-为UTF-8而页面的charset-gbk就会出现乱码，反之也一样。\"><a href=\"#注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码-用记事本打开-另存为可以看到文件的编码-为UTF-8而页面的charset-gbk就会出现乱码，反之也一样。\" class=\"headerlink\" title=\"注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码(用记事本打开,另存为可以看到文件的编码)为UTF-8而页面的charset=gbk就会出现乱码，反之也一样。\"></a>注意：还有一种常见的导致乱码问题：编辑器或文件保存的编码和页面设置的编码不一致会导致乱码，例如文件的编码(用记事本打开,另存为可以看到文件的编码)为UTF-8而页面的charset=gbk就会出现乱码，反之也一样。</h6>"},{"title":"IDEA安装插件(阿里的编码约束)","date":"2019-01-25T03:40:00.000Z","description":"IDEA安装插件(阿里的编码约束)","_content":"在项目中，有的小伙伴第一次使用IDEA进行开发，想装开发插件(编码约束，lombk等)不知如何下手，下面就以安装Alibaba Java Coding Guidelines为例：\n\n首先打开IDEA,然后点击右上角的File->Settings如下图：\n\n![](http://upload-images.jianshu.io/upload_images/2743275-3e807be2b23dba76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!--more-->\n点击之后出现下图：\n\n![](http://upload-images.jianshu.io/upload_images/2743275-576837d8561bf015.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n点击plugin->browse repositories出现下图：\n\n![](http://upload-images.jianshu.io/upload_images/2743275-0cb65ef92f01225b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n在顶部的框中输入alibaba后点击Install,出现如下页面\n\n ![](http://upload-images.jianshu.io/upload_images/2743275-95d39290603090c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n此时正在安装，稍后出现如下图，点击restart IntelliJ IDEA即可\n\n![](http://upload-images.jianshu.io/upload_images/2743275-643e473ba826c837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n ###### Tips:其它的插件和该插件的安装方式相同\n\n","source":"_posts/IDEA安装插件(阿里的编码约束).md","raw":"---\ntitle: IDEA安装插件(阿里的编码约束)\ndate: 2019-01-25 11:40\ntags: 日记本\ndescription: IDEA安装插件(阿里的编码约束)\n---\n在项目中，有的小伙伴第一次使用IDEA进行开发，想装开发插件(编码约束，lombk等)不知如何下手，下面就以安装Alibaba Java Coding Guidelines为例：\n\n首先打开IDEA,然后点击右上角的File->Settings如下图：\n\n![](http://upload-images.jianshu.io/upload_images/2743275-3e807be2b23dba76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!--more-->\n点击之后出现下图：\n\n![](http://upload-images.jianshu.io/upload_images/2743275-576837d8561bf015.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n点击plugin->browse repositories出现下图：\n\n![](http://upload-images.jianshu.io/upload_images/2743275-0cb65ef92f01225b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n在顶部的框中输入alibaba后点击Install,出现如下页面\n\n ![](http://upload-images.jianshu.io/upload_images/2743275-95d39290603090c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n此时正在安装，稍后出现如下图，点击restart IntelliJ IDEA即可\n\n![](http://upload-images.jianshu.io/upload_images/2743275-643e473ba826c837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n ###### Tips:其它的插件和该插件的安装方式相同\n\n","slug":"IDEA安装插件(阿里的编码约束)","published":1,"updated":"2019-02-25T17:25:27.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irop000d48dklx6cmnny","content":"<p>在项目中，有的小伙伴第一次使用IDEA进行开发，想装开发插件(编码约束，lombk等)不知如何下手，下面就以安装Alibaba Java Coding Guidelines为例：</p>\n<p>首先打开IDEA,然后点击右上角的File-&gt;Settings如下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-3e807be2b23dba76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><a id=\"more\"></a><br>点击之后出现下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-576837d8561bf015.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>点击plugin-&gt;browse repositories出现下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-0cb65ef92f01225b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>在顶部的框中输入alibaba后点击Install,出现如下页面</p>\n<p> <img src=\"http://upload-images.jianshu.io/upload_images/2743275-95d39290603090c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>此时正在安装，稍后出现如下图，点击restart IntelliJ IDEA即可</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-643e473ba826c837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"Tips-其它的插件和该插件的安装方式相同\"><a href=\"#Tips-其它的插件和该插件的安装方式相同\" class=\"headerlink\" title=\"Tips:其它的插件和该插件的安装方式相同\"></a>Tips:其它的插件和该插件的安装方式相同</h6>","site":{"data":{}},"excerpt":"<p>在项目中，有的小伙伴第一次使用IDEA进行开发，想装开发插件(编码约束，lombk等)不知如何下手，下面就以安装Alibaba Java Coding Guidelines为例：</p>\n<p>首先打开IDEA,然后点击右上角的File-&gt;Settings如下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-3e807be2b23dba76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>","more":"<br>点击之后出现下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-576837d8561bf015.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>点击plugin-&gt;browse repositories出现下图：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-0cb65ef92f01225b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>在顶部的框中输入alibaba后点击Install,出现如下页面</p>\n<p> <img src=\"http://upload-images.jianshu.io/upload_images/2743275-95d39290603090c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>此时正在安装，稍后出现如下图，点击restart IntelliJ IDEA即可</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-643e473ba826c837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"Tips-其它的插件和该插件的安装方式相同\"><a href=\"#Tips-其它的插件和该插件的安装方式相同\" class=\"headerlink\" title=\"Tips:其它的插件和该插件的安装方式相同\"></a>Tips:其它的插件和该插件的安装方式相同</h6>"},{"title":"IDEA设置后端代码开发规范","date":"2019-01-23T02:33:00.000Z","description":"IDEA设置后端代码开发规范","_content":"##### 1、IDEA 配置svn\n提交svn报错：![](https://upload-images.jianshu.io/upload_images/2743275-ef2b3fcbeb66c50b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!--more-->\n###### 1.1、下载：[https://www.visualsvn.com/downloads/](https://www.visualsvn.com/downloads/)\n![](https://upload-images.jianshu.io/upload_images/2743275-44ad2e9c56003729.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n###### 1.2、修改IDEA配置指向的路径：![](https://upload-images.jianshu.io/upload_images/2743275-42eacfa5fcf4012b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n----\n##### 2、IDEA 设置 Tab 键为 4 个空格\nScheme 选择 ***Project*** ,在下面把取消勾选  ***Use tab character***\n![](https://upload-images.jianshu.io/upload_images/2743275-206f9205699535f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n----\n##### 3、IDEA 设置编码格式为 UTF-8\n![](https://upload-images.jianshu.io/upload_images/2743275-7552ebdc7e6ca13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n----\n##### 4、IDEA 设置换行符为 Unix 编码格式\n![](https://upload-images.jianshu.io/upload_images/2743275-753b9ab5b4add45a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n----\n##### 5、IDEA 设置类注释模板\n![](https://upload-images.jianshu.io/upload_images/2743275-5dc31e3d9d0a461e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n```java\n/**\n * \n * @author Created by 思伟 on ${DATE}\n */\n```\n----\n","source":"_posts/IDEA设置后端代码开发规范.md","raw":"---\ntitle: IDEA设置后端代码开发规范\ndate: 2019-01-23 10:33\ntags: 日记本\ndescription: IDEA设置后端代码开发规范\n---\n##### 1、IDEA 配置svn\n提交svn报错：![](https://upload-images.jianshu.io/upload_images/2743275-ef2b3fcbeb66c50b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!--more-->\n###### 1.1、下载：[https://www.visualsvn.com/downloads/](https://www.visualsvn.com/downloads/)\n![](https://upload-images.jianshu.io/upload_images/2743275-44ad2e9c56003729.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n###### 1.2、修改IDEA配置指向的路径：![](https://upload-images.jianshu.io/upload_images/2743275-42eacfa5fcf4012b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n----\n##### 2、IDEA 设置 Tab 键为 4 个空格\nScheme 选择 ***Project*** ,在下面把取消勾选  ***Use tab character***\n![](https://upload-images.jianshu.io/upload_images/2743275-206f9205699535f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n----\n##### 3、IDEA 设置编码格式为 UTF-8\n![](https://upload-images.jianshu.io/upload_images/2743275-7552ebdc7e6ca13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n----\n##### 4、IDEA 设置换行符为 Unix 编码格式\n![](https://upload-images.jianshu.io/upload_images/2743275-753b9ab5b4add45a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n----\n##### 5、IDEA 设置类注释模板\n![](https://upload-images.jianshu.io/upload_images/2743275-5dc31e3d9d0a461e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n```java\n/**\n * \n * @author Created by 思伟 on ${DATE}\n */\n```\n----\n","slug":"IDEA设置后端代码开发规范","published":1,"updated":"2019-02-25T16:49:26.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58iror000e48dkmwtqblyr","content":"<h5 id=\"1、IDEA-配置svn\"><a href=\"#1、IDEA-配置svn\" class=\"headerlink\" title=\"1、IDEA 配置svn\"></a>1、IDEA 配置svn</h5><p>提交svn报错：<img src=\"https://upload-images.jianshu.io/upload_images/2743275-ef2b3fcbeb66c50b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><a id=\"more\"></a></p>\n<h6 id=\"1-1、下载：https-www-visualsvn-com-downloads\"><a href=\"#1-1、下载：https-www-visualsvn-com-downloads\" class=\"headerlink\" title=\"1.1、下载：https://www.visualsvn.com/downloads/\"></a>1.1、下载：<a href=\"https://www.visualsvn.com/downloads/\" target=\"_blank\" rel=\"noopener\">https://www.visualsvn.com/downloads/</a></h6><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-44ad2e9c56003729.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></p>\n<h6 id=\"1-2、修改IDEA配置指向的路径：\"><a href=\"#1-2、修改IDEA配置指向的路径：\" class=\"headerlink\" title=\"1.2、修改IDEA配置指向的路径：\"></a>1.2、修改IDEA配置指向的路径：<img src=\"https://upload-images.jianshu.io/upload_images/2743275-42eacfa5fcf4012b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></h6><hr>\n<h5 id=\"2、IDEA-设置-Tab-键为-4-个空格\"><a href=\"#2、IDEA-设置-Tab-键为-4-个空格\" class=\"headerlink\" title=\"2、IDEA 设置 Tab 键为 4 个空格\"></a>2、IDEA 设置 Tab 键为 4 个空格</h5><p>Scheme 选择 <strong><em>Project</em></strong> ,在下面把取消勾选  <strong><em>Use tab character</em></strong><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-206f9205699535f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></p>\n<hr>\n<h5 id=\"3、IDEA-设置编码格式为-UTF-8\"><a href=\"#3、IDEA-设置编码格式为-UTF-8\" class=\"headerlink\" title=\"3、IDEA 设置编码格式为 UTF-8\"></a>3、IDEA 设置编码格式为 UTF-8</h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-7552ebdc7e6ca13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></p>\n<hr>\n<h5 id=\"4、IDEA-设置换行符为-Unix-编码格式\"><a href=\"#4、IDEA-设置换行符为-Unix-编码格式\" class=\"headerlink\" title=\"4、IDEA 设置换行符为 Unix 编码格式\"></a>4、IDEA 设置换行符为 Unix 编码格式</h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-753b9ab5b4add45a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"5、IDEA-设置类注释模板\"><a href=\"#5、IDEA-设置类注释模板\" class=\"headerlink\" title=\"5、IDEA 设置类注释模板\"></a>5、IDEA 设置类注释模板</h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5dc31e3d9d0a461e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Created by 思伟 on $&#123;DATE&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n","site":{"data":{}},"excerpt":"<h5 id=\"1、IDEA-配置svn\"><a href=\"#1、IDEA-配置svn\" class=\"headerlink\" title=\"1、IDEA 配置svn\"></a>1、IDEA 配置svn</h5><p>提交svn报错：<img src=\"https://upload-images.jianshu.io/upload_images/2743275-ef2b3fcbeb66c50b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>","more":"</p>\n<h6 id=\"1-1、下载：https-www-visualsvn-com-downloads\"><a href=\"#1-1、下载：https-www-visualsvn-com-downloads\" class=\"headerlink\" title=\"1.1、下载：https://www.visualsvn.com/downloads/\"></a>1.1、下载：<a href=\"https://www.visualsvn.com/downloads/\" target=\"_blank\" rel=\"noopener\">https://www.visualsvn.com/downloads/</a></h6><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-44ad2e9c56003729.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></p>\n<h6 id=\"1-2、修改IDEA配置指向的路径：\"><a href=\"#1-2、修改IDEA配置指向的路径：\" class=\"headerlink\" title=\"1.2、修改IDEA配置指向的路径：\"></a>1.2、修改IDEA配置指向的路径：<img src=\"https://upload-images.jianshu.io/upload_images/2743275-42eacfa5fcf4012b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></h6><hr>\n<h5 id=\"2、IDEA-设置-Tab-键为-4-个空格\"><a href=\"#2、IDEA-设置-Tab-键为-4-个空格\" class=\"headerlink\" title=\"2、IDEA 设置 Tab 键为 4 个空格\"></a>2、IDEA 设置 Tab 键为 4 个空格</h5><p>Scheme 选择 <strong><em>Project</em></strong> ,在下面把取消勾选  <strong><em>Use tab character</em></strong><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-206f9205699535f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></p>\n<hr>\n<h5 id=\"3、IDEA-设置编码格式为-UTF-8\"><a href=\"#3、IDEA-设置编码格式为-UTF-8\" class=\"headerlink\" title=\"3、IDEA 设置编码格式为 UTF-8\"></a>3、IDEA 设置编码格式为 UTF-8</h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-7552ebdc7e6ca13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"\"></p>\n<hr>\n<h5 id=\"4、IDEA-设置换行符为-Unix-编码格式\"><a href=\"#4、IDEA-设置换行符为-Unix-编码格式\" class=\"headerlink\" title=\"4、IDEA 设置换行符为 Unix 编码格式\"></a>4、IDEA 设置换行符为 Unix 编码格式</h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-753b9ab5b4add45a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"5、IDEA-设置类注释模板\"><a href=\"#5、IDEA-设置类注释模板\" class=\"headerlink\" title=\"5、IDEA 设置类注释模板\"></a>5、IDEA 设置类注释模板</h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5dc31e3d9d0a461e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Created by 思伟 on $&#123;DATE&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure></p>\n<hr>"},{"title":"Java中将一个文件夹下所有的文件压缩成一个文件","date":"2018-04-17T04:22:13.000Z","_content":"  \t \n\t/** 缓冲 */\n\tstatic final byte[] buffer = new byte[2048];  \n\n\n\t// 来源  \n\tFile inputDir = new File(request.getServletContext()  \n\t\t.getRealPath(Constant.getUploadPath()));  \n\tif (null != inputDir.listFiles()) {  \n\t    // 压缩  \n\t    zip(inputDir.listFiles(), \"\", zip);  \n\t}  \n\n<!--more-->\n\t/** \n\t* 压缩ZIP \n\t*  \n\t* @param files \n\t*            多个文件 \n\t* @param baseFolder \n\t*            压缩到ZIP的父级目录(目录后面跟上File.separator) \n\t* @param zos \n\t*            ZipOutputStream \n\t* @throws Exception \n\t*/  \n\tprivate static void zip(File[] files, String baseFolder, ZipOutputStream zos)  \n\t\t    throws Exception {  \n\t\t// 输入  \n\t\tFileInputStream fis = null;  \n\t\t// 条目  \n\t\tZipEntry entry = null;  \n\t\t// 数目  \n\t\tint count = 0;  \n\t\tfor (File file : files) {  \n\t\t    if (file.isDirectory()) {  \n\t\t\t// 递归  \n\t\t\tzip(file.listFiles(),  baseFolder + file.getName() + File.separator, zos);  \n\t\t\tcontinue;  \n\t\t    }  \n\t\t    entry = new ZipEntry(baseFolder + file.getName());  \n\t\t    // 加入  \n\t\t    zos.putNextEntry(entry);  \n\t\t    fis = new FileInputStream(file);  \n\t\t    // 读取  \n\t\t    while ((count = fis.read(buffer, 0, buffer.length)) != -1) {  \n\t\t\t// 写入  \n\t\t\tzos.write(buffer, 0, count);  \n\t\t    }  \n\t\t    zos.closeEntry(); // 释放资源  \n\t\t}  \n\t}  \n\n\n\t记得用完zip要close掉\n","source":"_posts/Java中将一个文件夹下所有的文件压缩成一个文件.md","raw":"---\ntitle: Java中将一个文件夹下所有的文件压缩成一个文件\ndate: 2018-04-17 12:22:13\ntags: Java\n---\n  \t \n\t/** 缓冲 */\n\tstatic final byte[] buffer = new byte[2048];  \n\n\n\t// 来源  \n\tFile inputDir = new File(request.getServletContext()  \n\t\t.getRealPath(Constant.getUploadPath()));  \n\tif (null != inputDir.listFiles()) {  \n\t    // 压缩  \n\t    zip(inputDir.listFiles(), \"\", zip);  \n\t}  \n\n<!--more-->\n\t/** \n\t* 压缩ZIP \n\t*  \n\t* @param files \n\t*            多个文件 \n\t* @param baseFolder \n\t*            压缩到ZIP的父级目录(目录后面跟上File.separator) \n\t* @param zos \n\t*            ZipOutputStream \n\t* @throws Exception \n\t*/  \n\tprivate static void zip(File[] files, String baseFolder, ZipOutputStream zos)  \n\t\t    throws Exception {  \n\t\t// 输入  \n\t\tFileInputStream fis = null;  \n\t\t// 条目  \n\t\tZipEntry entry = null;  \n\t\t// 数目  \n\t\tint count = 0;  \n\t\tfor (File file : files) {  \n\t\t    if (file.isDirectory()) {  \n\t\t\t// 递归  \n\t\t\tzip(file.listFiles(),  baseFolder + file.getName() + File.separator, zos);  \n\t\t\tcontinue;  \n\t\t    }  \n\t\t    entry = new ZipEntry(baseFolder + file.getName());  \n\t\t    // 加入  \n\t\t    zos.putNextEntry(entry);  \n\t\t    fis = new FileInputStream(file);  \n\t\t    // 读取  \n\t\t    while ((count = fis.read(buffer, 0, buffer.length)) != -1) {  \n\t\t\t// 写入  \n\t\t\tzos.write(buffer, 0, count);  \n\t\t    }  \n\t\t    zos.closeEntry(); // 释放资源  \n\t\t}  \n\t}  \n\n\n\t记得用完zip要close掉\n","slug":"Java中将一个文件夹下所有的文件压缩成一个文件","published":1,"updated":"2018-06-05T11:40:32.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irp4000h48dkircdr7n1","content":"<pre><code>/** 缓冲 */\nstatic final byte[] buffer = new byte[2048];  \n\n\n// 来源  \nFile inputDir = new File(request.getServletContext()  \n    .getRealPath(Constant.getUploadPath()));  \nif (null != inputDir.listFiles()) {  \n    // 压缩  \n    zip(inputDir.listFiles(), &quot;&quot;, zip);  \n}  \n</code></pre><a id=\"more\"></a>\n<pre><code>/** \n* 压缩ZIP \n*  \n* @param files \n*            多个文件 \n* @param baseFolder \n*            压缩到ZIP的父级目录(目录后面跟上File.separator) \n* @param zos \n*            ZipOutputStream \n* @throws Exception \n*/  \nprivate static void zip(File[] files, String baseFolder, ZipOutputStream zos)  \n        throws Exception {  \n    // 输入  \n    FileInputStream fis = null;  \n    // 条目  \n    ZipEntry entry = null;  \n    // 数目  \n    int count = 0;  \n    for (File file : files) {  \n        if (file.isDirectory()) {  \n        // 递归  \n        zip(file.listFiles(),  baseFolder + file.getName() + File.separator, zos);  \n        continue;  \n        }  \n        entry = new ZipEntry(baseFolder + file.getName());  \n        // 加入  \n        zos.putNextEntry(entry);  \n        fis = new FileInputStream(file);  \n        // 读取  \n        while ((count = fis.read(buffer, 0, buffer.length)) != -1) {  \n        // 写入  \n        zos.write(buffer, 0, count);  \n        }  \n        zos.closeEntry(); // 释放资源  \n    }  \n}  \n\n\n记得用完zip要close掉\n</code></pre>","site":{"data":{}},"excerpt":"<pre><code>/** 缓冲 */\nstatic final byte[] buffer = new byte[2048];  \n\n\n// 来源  \nFile inputDir = new File(request.getServletContext()  \n    .getRealPath(Constant.getUploadPath()));  \nif (null != inputDir.listFiles()) {  \n    // 压缩  \n    zip(inputDir.listFiles(), &quot;&quot;, zip);  \n}  \n</code></pre>","more":"<pre><code>/** \n* 压缩ZIP \n*  \n* @param files \n*            多个文件 \n* @param baseFolder \n*            压缩到ZIP的父级目录(目录后面跟上File.separator) \n* @param zos \n*            ZipOutputStream \n* @throws Exception \n*/  \nprivate static void zip(File[] files, String baseFolder, ZipOutputStream zos)  \n        throws Exception {  \n    // 输入  \n    FileInputStream fis = null;  \n    // 条目  \n    ZipEntry entry = null;  \n    // 数目  \n    int count = 0;  \n    for (File file : files) {  \n        if (file.isDirectory()) {  \n        // 递归  \n        zip(file.listFiles(),  baseFolder + file.getName() + File.separator, zos);  \n        continue;  \n        }  \n        entry = new ZipEntry(baseFolder + file.getName());  \n        // 加入  \n        zos.putNextEntry(entry);  \n        fis = new FileInputStream(file);  \n        // 读取  \n        while ((count = fis.read(buffer, 0, buffer.length)) != -1) {  \n        // 写入  \n        zos.write(buffer, 0, count);  \n        }  \n        zos.closeEntry(); // 释放资源  \n    }  \n}  \n\n\n记得用完zip要close掉\n</code></pre>"},{"title":"Linux 卸载分区","date":"2018-04-17T08:01:30.000Z","description":"Linux 卸载分区","_content":"##### 注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\n\t# df -hT\n![](https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!--more-->    \n\t准备卸载/dev/sda6这个分区\n\t# umount /data2\t\n\t重新检查一下 \n\t# df -hT\n![](https://upload-images.jianshu.io/upload_images/2743275-2af8caea924f6612.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t# fdisk -l\n\t发现待分区的磁盘 /dev/sda\n![](https://upload-images.jianshu.io/upload_images/2743275-c079a22b84557f0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t对该磁盘进行卸载分区，输入m并回车\n\t# fdisk /dev/sda\n\t# m 输入帮助\n\t# p 打印分区表\n![](https://upload-images.jianshu.io/upload_images/2743275-85bcd2afce1808d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-95439e347a38fcf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n卸载/dev/sda6分区\n此时注意/dev/sda6是刚刚卸载了/data2的分区名\n![](https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t# d 删除一个分区\n\t# 6  删除第六个分区\n![](https://upload-images.jianshu.io/upload_images/2743275-b7cbc678d5616a01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t重新打印分区表发现已卸载/dev/sda6分区\n\t# p \n![](https://upload-images.jianshu.io/upload_images/2743275-8969029b19517563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t# w   将表写入磁盘并退出\n\t再检查一遍\n\t# fdisk /dev/sda\n\t# p 打印分区表 \n![](https://upload-images.jianshu.io/upload_images/2743275-fc6779f38f7ccb43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-40d4fd8413ae4065.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/Linux-卸载分区.md","raw":"---\ntitle: Linux 卸载分区\ndate: 2018-04-17 16:01:30\ntags: Linux\ndescription: Linux 卸载分区\n---\n##### 注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\n\t# df -hT\n![](https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!--more-->    \n\t准备卸载/dev/sda6这个分区\n\t# umount /data2\t\n\t重新检查一下 \n\t# df -hT\n![](https://upload-images.jianshu.io/upload_images/2743275-2af8caea924f6612.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t# fdisk -l\n\t发现待分区的磁盘 /dev/sda\n![](https://upload-images.jianshu.io/upload_images/2743275-c079a22b84557f0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t对该磁盘进行卸载分区，输入m并回车\n\t# fdisk /dev/sda\n\t# m 输入帮助\n\t# p 打印分区表\n![](https://upload-images.jianshu.io/upload_images/2743275-85bcd2afce1808d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-95439e347a38fcf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n卸载/dev/sda6分区\n此时注意/dev/sda6是刚刚卸载了/data2的分区名\n![](https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t# d 删除一个分区\n\t# 6  删除第六个分区\n![](https://upload-images.jianshu.io/upload_images/2743275-b7cbc678d5616a01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t重新打印分区表发现已卸载/dev/sda6分区\n\t# p \n![](https://upload-images.jianshu.io/upload_images/2743275-8969029b19517563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t# w   将表写入磁盘并退出\n\t再检查一遍\n\t# fdisk /dev/sda\n\t# p 打印分区表 \n![](https://upload-images.jianshu.io/upload_images/2743275-fc6779f38f7ccb43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-40d4fd8413ae4065.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"Linux-卸载分区","published":1,"updated":"2019-03-12T01:34:39.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irp9000i48dk9cepq0r4","content":"<h5 id=\"注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\"><a href=\"#注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\" class=\"headerlink\" title=\"注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\"></a>注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份</h5><pre><code># df -hT\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<a id=\"more\"></a>    \n<pre><code>准备卸载/dev/sda6这个分区\n# umount /data2    \n重新检查一下 \n# df -hT\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-2af8caea924f6612.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code># fdisk -l\n发现待分区的磁盘 /dev/sda\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-c079a22b84557f0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code>对该磁盘进行卸载分区，输入m并回车\n# fdisk /dev/sda\n# m 输入帮助\n# p 打印分区表\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-85bcd2afce1808d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-95439e347a38fcf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>卸载/dev/sda6分区<br>此时注意/dev/sda6是刚刚卸载了/data2的分区名<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code># d 删除一个分区\n# 6  删除第六个分区\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-b7cbc678d5616a01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code>重新打印分区表发现已卸载/dev/sda6分区\n# p \n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-8969029b19517563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code># w   将表写入磁盘并退出\n再检查一遍\n# fdisk /dev/sda\n# p 打印分区表 \n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-fc6779f38f7ccb43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-40d4fd8413ae4065.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h5 id=\"注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\"><a href=\"#注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\" class=\"headerlink\" title=\"注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份\"></a>注意，卸载分区会格式化分区内所有的数据，请谨慎操作或进行数据备份</h5><pre><code># df -hT\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>","more":"<pre><code>准备卸载/dev/sda6这个分区\n# umount /data2    \n重新检查一下 \n# df -hT\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-2af8caea924f6612.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code># fdisk -l\n发现待分区的磁盘 /dev/sda\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-c079a22b84557f0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code>对该磁盘进行卸载分区，输入m并回车\n# fdisk /dev/sda\n# m 输入帮助\n# p 打印分区表\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-85bcd2afce1808d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-95439e347a38fcf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>卸载/dev/sda6分区<br>此时注意/dev/sda6是刚刚卸载了/data2的分区名<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d7fb0c77ed1e94d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code># d 删除一个分区\n# 6  删除第六个分区\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-b7cbc678d5616a01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code>重新打印分区表发现已卸载/dev/sda6分区\n# p \n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-8969029b19517563.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code># w   将表写入磁盘并退出\n再检查一遍\n# fdisk /dev/sda\n# p 打印分区表 \n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-fc6779f38f7ccb43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-40d4fd8413ae4065.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"Linux 新建扩展分区","description":"Linux 新建扩展分区","date":"2018-04-17T07:59:52.000Z","_content":"# fdisk -l\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a3f8dba4931f0e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n要进行新建扩展分区的磁盘是 /dev/sda\n<!--more-->\n\t# fdisk /dev/sda\n\t# p  打印分区表\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-547ba5ce1f898e88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n此时磁盘已经有了3个分区，如果要再弄2个分区就不行，这个时候我们进行新建扩展分区\n\n\t# n  添加一个新的分区\n\t# e  添加一个扩展分区\n\t# p  打印分区表\n\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-4c842484993e6eba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n此时已经看见扩展分区创建完成，在扩展分区下面新建2个分区\n因为现在扩展分区是20G  所以下面的2个分区都给10G\n\n\t# n\n\t# +10G\n\t# p\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-720c53c845ce00b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-37380dc4f6e9a485.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n重复上面的操作\n\n\t# n\n\t# 回车\n\t# 回车   此时回车等于把磁盘剩下的所有空间给了此分区\n\t# p\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a8dbb997e23e1066.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-591af00ad28e8d7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n创建完毕  保存并重启\n\n\t# w\n\t# reboot\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-7f03551e8e9ec095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n重新登入系统\n\n\t# fdisk -l\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-e2e92df2a2148520.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n需要格式化 /dev/sda5   /dev/sda6 分区\n\n\text4是磁盘文件系统的格式，也可以是ext3\n\t# mkfs -t ext4 /dev/sda5\n\t# mkfs -t ext4 /dev/sda6\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-8d5cf4a6f7464a29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-1d8943f50b678455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\t# mount /dev/sda5 /data\n\t报错:mount: mount point /data does not exist\n\t原因是根目录没有此文件夹\n\t创建文件夹\n\t# mkdir /data\n\t# mkdir /data2\n\t# mount /dev/sda5 /data   把分区 /dev/sda5 挂载到 /data 目录下\n\t# mount /dev/sda6 /data2  把分区 /dev/sda6 挂载到 /data2 目录下\n\t# df -hT  查看是否挂载成功\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-79b686cdd3f0e8c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n分区格式类型是ext4 分区大小也是10G\n##### 此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\n\n##### 开机自动挂载（磁盘）\n\t# vi /etc/fstab\n最后面添加\n\n\t/dev/sda5 /data ext4 defaults 0 0\n\t/dev/sda6 /data2 ext4 defaults 0 0\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-59ae777451c4b097.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### tips:\n   ###### 第一列：分区的UUID或分区名 例如:/dev/sda5\n   ###### 第二列：Mount point：设备的挂载点，就是你要挂载到哪个目录下。\n   ###### 第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\n   ###### 第四列：parameters：文件系统的参数\n\tAsync/sync\n\t设置是否为同步方式运行，默认为async\n\tauto/noauto \n\t 当下载mount -a 的命令时，此文件系统是否被主动挂载。默认为auto\n\trw/ro        \n\t 是否以以只读或者读写模式挂载\n\texec/noexec        \n\t 限制此文件系统内是否能够进行\"执行\"的操作\n\tuser/nouser\n\t是否允许用户使用mount命令挂载\n\tsuid/nosuid\n\t是否允许SUID的存在\n\tUsrquota\n\t启动文件系统支持磁盘配额模式\n\tGrpquota\n\t启动文件系统对群组磁盘配额模式的支持\n\tDefaults\n\t同事具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置\n\n   ###### 第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1  \n\t0    代表不要做dump备份\n\t1    代表要每天进行dump的操作\n\t2    代表不定日期的进行dump操作\n   ###### 第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。  \n\t0    不要检验\n\t1    最早检验（一般根目录会选择）\n\t2    1级别检验完成之后进行检验\n\n\n#### Tips:  \n\t查看各个分区的UUID和磁盘文件系统的格式\n\t# blkid\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a42a23c8dbe89e25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","source":"_posts/Linux-新建扩展分区.md","raw":"title: Linux 新建扩展分区\ntags: Linux\ndescription: Linux 新建扩展分区\ndate: 2018-04-17 15:59:52\n---\n# fdisk -l\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a3f8dba4931f0e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n要进行新建扩展分区的磁盘是 /dev/sda\n<!--more-->\n\t# fdisk /dev/sda\n\t# p  打印分区表\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-547ba5ce1f898e88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n此时磁盘已经有了3个分区，如果要再弄2个分区就不行，这个时候我们进行新建扩展分区\n\n\t# n  添加一个新的分区\n\t# e  添加一个扩展分区\n\t# p  打印分区表\n\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-4c842484993e6eba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n此时已经看见扩展分区创建完成，在扩展分区下面新建2个分区\n因为现在扩展分区是20G  所以下面的2个分区都给10G\n\n\t# n\n\t# +10G\n\t# p\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-720c53c845ce00b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-37380dc4f6e9a485.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n重复上面的操作\n\n\t# n\n\t# 回车\n\t# 回车   此时回车等于把磁盘剩下的所有空间给了此分区\n\t# p\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a8dbb997e23e1066.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-591af00ad28e8d7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n创建完毕  保存并重启\n\n\t# w\n\t# reboot\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-7f03551e8e9ec095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n重新登入系统\n\n\t# fdisk -l\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-e2e92df2a2148520.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n需要格式化 /dev/sda5   /dev/sda6 分区\n\n\text4是磁盘文件系统的格式，也可以是ext3\n\t# mkfs -t ext4 /dev/sda5\n\t# mkfs -t ext4 /dev/sda6\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-8d5cf4a6f7464a29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-1d8943f50b678455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\t# mount /dev/sda5 /data\n\t报错:mount: mount point /data does not exist\n\t原因是根目录没有此文件夹\n\t创建文件夹\n\t# mkdir /data\n\t# mkdir /data2\n\t# mount /dev/sda5 /data   把分区 /dev/sda5 挂载到 /data 目录下\n\t# mount /dev/sda6 /data2  把分区 /dev/sda6 挂载到 /data2 目录下\n\t# df -hT  查看是否挂载成功\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-79b686cdd3f0e8c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n分区格式类型是ext4 分区大小也是10G\n##### 此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\n\n##### 开机自动挂载（磁盘）\n\t# vi /etc/fstab\n最后面添加\n\n\t/dev/sda5 /data ext4 defaults 0 0\n\t/dev/sda6 /data2 ext4 defaults 0 0\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-59ae777451c4b097.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### tips:\n   ###### 第一列：分区的UUID或分区名 例如:/dev/sda5\n   ###### 第二列：Mount point：设备的挂载点，就是你要挂载到哪个目录下。\n   ###### 第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\n   ###### 第四列：parameters：文件系统的参数\n\tAsync/sync\n\t设置是否为同步方式运行，默认为async\n\tauto/noauto \n\t 当下载mount -a 的命令时，此文件系统是否被主动挂载。默认为auto\n\trw/ro        \n\t 是否以以只读或者读写模式挂载\n\texec/noexec        \n\t 限制此文件系统内是否能够进行\"执行\"的操作\n\tuser/nouser\n\t是否允许用户使用mount命令挂载\n\tsuid/nosuid\n\t是否允许SUID的存在\n\tUsrquota\n\t启动文件系统支持磁盘配额模式\n\tGrpquota\n\t启动文件系统对群组磁盘配额模式的支持\n\tDefaults\n\t同事具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置\n\n   ###### 第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1  \n\t0    代表不要做dump备份\n\t1    代表要每天进行dump的操作\n\t2    代表不定日期的进行dump操作\n   ###### 第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。  \n\t0    不要检验\n\t1    最早检验（一般根目录会选择）\n\t2    1级别检验完成之后进行检验\n\n\n#### Tips:  \n\t查看各个分区的UUID和磁盘文件系统的格式\n\t# blkid\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a42a23c8dbe89e25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","slug":"Linux-新建扩展分区","published":1,"updated":"2018-06-05T11:40:32.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpb000k48dkchuanqnv","content":"<h1 id=\"fdisk-l\"><a href=\"#fdisk-l\" class=\"headerlink\" title=\"fdisk -l\"></a>fdisk -l</h1><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a3f8dba4931f0e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>要进行新建扩展分区的磁盘是 /dev/sda<br><a id=\"more\"></a></p>\n<pre><code># fdisk /dev/sda\n# p  打印分区表\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-547ba5ce1f898e88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>此时磁盘已经有了3个分区，如果要再弄2个分区就不行，这个时候我们进行新建扩展分区</p>\n<pre><code># n  添加一个新的分区\n# e  添加一个扩展分区\n# p  打印分区表\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-4c842484993e6eba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>此时已经看见扩展分区创建完成，在扩展分区下面新建2个分区<br>因为现在扩展分区是20G  所以下面的2个分区都给10G</p>\n<pre><code># n\n# +10G\n# p\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-720c53c845ce00b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-37380dc4f6e9a485.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>重复上面的操作</p>\n<pre><code># n\n# 回车\n# 回车   此时回车等于把磁盘剩下的所有空间给了此分区\n# p\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a8dbb997e23e1066.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-591af00ad28e8d7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>创建完毕  保存并重启</p>\n<pre><code># w\n# reboot\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-7f03551e8e9ec095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>重新登入系统</p>\n<pre><code># fdisk -l\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-e2e92df2a2148520.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>需要格式化 /dev/sda5   /dev/sda6 分区</p>\n<pre><code>ext4是磁盘文件系统的格式，也可以是ext3\n# mkfs -t ext4 /dev/sda5\n# mkfs -t ext4 /dev/sda6\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-8d5cf4a6f7464a29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1d8943f50b678455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<pre><code># mount /dev/sda5 /data\n报错:mount: mount point /data does not exist\n原因是根目录没有此文件夹\n创建文件夹\n# mkdir /data\n# mkdir /data2\n# mount /dev/sda5 /data   把分区 /dev/sda5 挂载到 /data 目录下\n# mount /dev/sda6 /data2  把分区 /dev/sda6 挂载到 /data2 目录下\n# df -hT  查看是否挂载成功\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-79b686cdd3f0e8c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>分区格式类型是ext4 分区大小也是10G</p>\n<h5 id=\"此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\"><a href=\"#此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\" class=\"headerlink\" title=\"此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\"></a>此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）</h5><h5 id=\"开机自动挂载（磁盘）\"><a href=\"#开机自动挂载（磁盘）\" class=\"headerlink\" title=\"开机自动挂载（磁盘）\"></a>开机自动挂载（磁盘）</h5><pre><code># vi /etc/fstab\n</code></pre><p>最后面添加</p>\n<pre><code>/dev/sda5 /data ext4 defaults 0 0\n/dev/sda6 /data2 ext4 defaults 0 0\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-59ae777451c4b097.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h3 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips:\"></a>tips:</h3><h6 id=\"第一列：分区的UUID或分区名-例如-dev-sda5\"><a href=\"#第一列：分区的UUID或分区名-例如-dev-sda5\" class=\"headerlink\" title=\"第一列：分区的UUID或分区名 例如:/dev/sda5\"></a>第一列：分区的UUID或分区名 例如:/dev/sda5</h6><h6 id=\"第二列：Mount-point：设备的挂载点，就是你要挂载到哪个目录下。\"><a href=\"#第二列：Mount-point：设备的挂载点，就是你要挂载到哪个目录下。\" class=\"headerlink\" title=\"第二列：Mount point：设备的挂载点，就是你要挂载到哪个目录下。\"></a>第二列：Mount point：设备的挂载点，就是你要挂载到哪个目录下。</h6><h6 id=\"第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\"><a href=\"#第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\" class=\"headerlink\" title=\"第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\"></a>第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等</h6><h6 id=\"第四列：parameters：文件系统的参数\"><a href=\"#第四列：parameters：文件系统的参数\" class=\"headerlink\" title=\"第四列：parameters：文件系统的参数\"></a>第四列：parameters：文件系统的参数</h6><pre><code>Async/sync\n设置是否为同步方式运行，默认为async\nauto/noauto \n 当下载mount -a 的命令时，此文件系统是否被主动挂载。默认为auto\nrw/ro        \n 是否以以只读或者读写模式挂载\nexec/noexec        \n 限制此文件系统内是否能够进行&quot;执行&quot;的操作\nuser/nouser\n是否允许用户使用mount命令挂载\nsuid/nosuid\n是否允许SUID的存在\nUsrquota\n启动文件系统支持磁盘配额模式\nGrpquota\n启动文件系统对群组磁盘配额模式的支持\nDefaults\n同事具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置\n</code></pre><h6 id=\"第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1\"><a href=\"#第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1\" class=\"headerlink\" title=\"第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1\"></a>第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1</h6><pre><code>0    代表不要做dump备份\n1    代表要每天进行dump的操作\n2    代表不定日期的进行dump操作\n</code></pre><h6 id=\"第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。\"><a href=\"#第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。\" class=\"headerlink\" title=\"第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。\"></a>第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。</h6><pre><code>0    不要检验\n1    最早检验（一般根目录会选择）\n2    1级别检验完成之后进行检验\n</code></pre><h4 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips:\"></a>Tips:</h4><pre><code>查看各个分区的UUID和磁盘文件系统的格式\n# blkid\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a42a23c8dbe89e25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"fdisk-l\"><a href=\"#fdisk-l\" class=\"headerlink\" title=\"fdisk -l\"></a>fdisk -l</h1><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a3f8dba4931f0e69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>要进行新建扩展分区的磁盘是 /dev/sda<br>","more":"</p>\n<pre><code># fdisk /dev/sda\n# p  打印分区表\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-547ba5ce1f898e88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>此时磁盘已经有了3个分区，如果要再弄2个分区就不行，这个时候我们进行新建扩展分区</p>\n<pre><code># n  添加一个新的分区\n# e  添加一个扩展分区\n# p  打印分区表\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-4c842484993e6eba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>此时已经看见扩展分区创建完成，在扩展分区下面新建2个分区<br>因为现在扩展分区是20G  所以下面的2个分区都给10G</p>\n<pre><code># n\n# +10G\n# p\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-720c53c845ce00b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-37380dc4f6e9a485.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>重复上面的操作</p>\n<pre><code># n\n# 回车\n# 回车   此时回车等于把磁盘剩下的所有空间给了此分区\n# p\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a8dbb997e23e1066.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-591af00ad28e8d7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>创建完毕  保存并重启</p>\n<pre><code># w\n# reboot\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-7f03551e8e9ec095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>重新登入系统</p>\n<pre><code># fdisk -l\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-e2e92df2a2148520.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>需要格式化 /dev/sda5   /dev/sda6 分区</p>\n<pre><code>ext4是磁盘文件系统的格式，也可以是ext3\n# mkfs -t ext4 /dev/sda5\n# mkfs -t ext4 /dev/sda6\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-8d5cf4a6f7464a29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1d8943f50b678455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<pre><code># mount /dev/sda5 /data\n报错:mount: mount point /data does not exist\n原因是根目录没有此文件夹\n创建文件夹\n# mkdir /data\n# mkdir /data2\n# mount /dev/sda5 /data   把分区 /dev/sda5 挂载到 /data 目录下\n# mount /dev/sda6 /data2  把分区 /dev/sda6 挂载到 /data2 目录下\n# df -hT  查看是否挂载成功\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-79b686cdd3f0e8c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<p>分区格式类型是ext4 分区大小也是10G</p>\n<h5 id=\"此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\"><a href=\"#此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\" class=\"headerlink\" title=\"此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）\"></a>此时注意，这样机器重启后就重置了，如果需要永久生效需要设置开机自动挂载（磁盘）</h5><h5 id=\"开机自动挂载（磁盘）\"><a href=\"#开机自动挂载（磁盘）\" class=\"headerlink\" title=\"开机自动挂载（磁盘）\"></a>开机自动挂载（磁盘）</h5><pre><code># vi /etc/fstab\n</code></pre><p>最后面添加</p>\n<pre><code>/dev/sda5 /data ext4 defaults 0 0\n/dev/sda6 /data2 ext4 defaults 0 0\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-59ae777451c4b097.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h3 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips:\"></a>tips:</h3><h6 id=\"第一列：分区的UUID或分区名-例如-dev-sda5\"><a href=\"#第一列：分区的UUID或分区名-例如-dev-sda5\" class=\"headerlink\" title=\"第一列：分区的UUID或分区名 例如:/dev/sda5\"></a>第一列：分区的UUID或分区名 例如:/dev/sda5</h6><h6 id=\"第二列：Mount-point：设备的挂载点，就是你要挂载到哪个目录下。\"><a href=\"#第二列：Mount-point：设备的挂载点，就是你要挂载到哪个目录下。\" class=\"headerlink\" title=\"第二列：Mount point：设备的挂载点，就是你要挂载到哪个目录下。\"></a>第二列：Mount point：设备的挂载点，就是你要挂载到哪个目录下。</h6><h6 id=\"第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\"><a href=\"#第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\" class=\"headerlink\" title=\"第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等\"></a>第三列：filesystem：磁盘文件系统的格式，包括ext2、ext3、reiserfs、nfs、vfat等</h6><h6 id=\"第四列：parameters：文件系统的参数\"><a href=\"#第四列：parameters：文件系统的参数\" class=\"headerlink\" title=\"第四列：parameters：文件系统的参数\"></a>第四列：parameters：文件系统的参数</h6><pre><code>Async/sync\n设置是否为同步方式运行，默认为async\nauto/noauto \n 当下载mount -a 的命令时，此文件系统是否被主动挂载。默认为auto\nrw/ro        \n 是否以以只读或者读写模式挂载\nexec/noexec        \n 限制此文件系统内是否能够进行&quot;执行&quot;的操作\nuser/nouser\n是否允许用户使用mount命令挂载\nsuid/nosuid\n是否允许SUID的存在\nUsrquota\n启动文件系统支持磁盘配额模式\nGrpquota\n启动文件系统对群组磁盘配额模式的支持\nDefaults\n同事具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置\n</code></pre><h6 id=\"第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1\"><a href=\"#第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1\" class=\"headerlink\" title=\"第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1\"></a>第五列：能否被dump备份命令作用：dump是一个用来作为备份的命令。通常这个参数的值为0或者1</h6><pre><code>0    代表不要做dump备份\n1    代表要每天进行dump的操作\n2    代表不定日期的进行dump操作\n</code></pre><h6 id=\"第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。\"><a href=\"#第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。\" class=\"headerlink\" title=\"第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。\"></a>第六列：是否检验扇区：开机的过程中，系统默认会以fsck检验我们系统是否为完整（clean）。</h6><pre><code>0    不要检验\n1    最早检验（一般根目录会选择）\n2    1级别检验完成之后进行检验\n</code></pre><h4 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips:\"></a>Tips:</h4><pre><code>查看各个分区的UUID和磁盘文件系统的格式\n# blkid\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a42a23c8dbe89e25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>"},{"title":"Linux 查看网卡UUID","description":"Linux 查看网卡UUID","date":"2018-04-17T08:03:00.000Z","_content":"#### Linux 查看网卡UUID\n###### 1、首先我们查看一下nmcli是哪个软件包提供的\n\t# yum provides \"*/nmcli\"\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a42d314368eebd8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!--more-->\n###### 2、安装NetworkManager服务\n\t# yum -y install NetworkManager\n\n###### 3、启动NetworkManager服务\n\t# service NetworkManager start\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-21dd8cfcd7fc0216.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n###### 4、查看网卡UUID\n\t# nmcli con\n  \ttips:如果有发现有报错\n\t# Error: could not connect to D-Bus.\n\ttips:查看/var/log/messages日志\n\t# vi /var/log/messages\n\ttips:按两下大写的G跳到最后一页\n报错：\n\n\t...\n\tApr 20 14:53:05 localhost NetworkManager[2013]: <info> NetworkManager (version 0.8.1-113.el6) is starting...\n\tApr 20 14:53:05 localhost NetworkManager[2013]: <info> Read config file /etc/NetworkManager/NetworkManager.conf\n\tApr 20 14:53:05 localhost NetworkManager[2013]: <error> [1492671185.606620] [nm-dbus-manager.c:278] nm_dbus_manager_init_bus(): Could not get the system bus.  Make sure the message bus daemon is running!  Message: Failed to connect to socket /var/run/dbus/system_bus_socket: Connection refused\n\t...\n    \n需要先启动messagebus，再启动NetworkManager\n\n\t# /etc/init.d/messagebus start\n\ttips:重新启动\n\t# service NetworkManager start\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-1d945ece865909ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n###### 运行nmcli\n\t# nmcli con\n报错:\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-77a46ad27ca920e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t查看/var/log/messages日志\n\t# vi /var/log/messages\n发现有报错\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-8e47a7a12aeb9e68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n###### g_slist_free_full 属于glist 的一个方法，缺少glist\n###### 解决方法:\n\t# yum -y install glib2-devel\n###### 3、此时再运行nmcli即可查看网卡UUID\t\n\t# service NetworkManager start\n\t# nmcli con\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-ad3b6fb7812e01d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","source":"_posts/Linux-查看网卡UUID.md","raw":"title: Linux 查看网卡UUID\ntags:\n  - Linux\ndescription: Linux 查看网卡UUID\ncategories: []\ndate: 2018-04-17 16:03:00\n---\n#### Linux 查看网卡UUID\n###### 1、首先我们查看一下nmcli是哪个软件包提供的\n\t# yum provides \"*/nmcli\"\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-a42d314368eebd8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!--more-->\n###### 2、安装NetworkManager服务\n\t# yum -y install NetworkManager\n\n###### 3、启动NetworkManager服务\n\t# service NetworkManager start\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-21dd8cfcd7fc0216.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n###### 4、查看网卡UUID\n\t# nmcli con\n  \ttips:如果有发现有报错\n\t# Error: could not connect to D-Bus.\n\ttips:查看/var/log/messages日志\n\t# vi /var/log/messages\n\ttips:按两下大写的G跳到最后一页\n报错：\n\n\t...\n\tApr 20 14:53:05 localhost NetworkManager[2013]: <info> NetworkManager (version 0.8.1-113.el6) is starting...\n\tApr 20 14:53:05 localhost NetworkManager[2013]: <info> Read config file /etc/NetworkManager/NetworkManager.conf\n\tApr 20 14:53:05 localhost NetworkManager[2013]: <error> [1492671185.606620] [nm-dbus-manager.c:278] nm_dbus_manager_init_bus(): Could not get the system bus.  Make sure the message bus daemon is running!  Message: Failed to connect to socket /var/run/dbus/system_bus_socket: Connection refused\n\t...\n    \n需要先启动messagebus，再启动NetworkManager\n\n\t# /etc/init.d/messagebus start\n\ttips:重新启动\n\t# service NetworkManager start\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-1d945ece865909ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n###### 运行nmcli\n\t# nmcli con\n报错:\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-77a46ad27ca920e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t查看/var/log/messages日志\n\t# vi /var/log/messages\n发现有报错\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-8e47a7a12aeb9e68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n###### g_slist_free_full 属于glist 的一个方法，缺少glist\n###### 解决方法:\n\t# yum -y install glib2-devel\n###### 3、此时再运行nmcli即可查看网卡UUID\t\n\t# service NetworkManager start\n\t# nmcli con\n![image.png](https://upload-images.jianshu.io/upload_images/2743275-ad3b6fb7812e01d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","slug":"Linux-查看网卡UUID","published":1,"updated":"2018-06-05T11:40:32.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpe000m48dkp7sitmlx","content":"<h4 id=\"Linux-查看网卡UUID\"><a href=\"#Linux-查看网卡UUID\" class=\"headerlink\" title=\"Linux 查看网卡UUID\"></a>Linux 查看网卡UUID</h4><h6 id=\"1、首先我们查看一下nmcli是哪个软件包提供的\"><a href=\"#1、首先我们查看一下nmcli是哪个软件包提供的\" class=\"headerlink\" title=\"1、首先我们查看一下nmcli是哪个软件包提供的\"></a>1、首先我们查看一下nmcli是哪个软件包提供的</h6><pre><code># yum provides &quot;*/nmcli&quot;\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a42d314368eebd8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br><a id=\"more\"></a></p>\n<h6 id=\"2、安装NetworkManager服务\"><a href=\"#2、安装NetworkManager服务\" class=\"headerlink\" title=\"2、安装NetworkManager服务\"></a>2、安装NetworkManager服务</h6><pre><code># yum -y install NetworkManager\n</code></pre><h6 id=\"3、启动NetworkManager服务\"><a href=\"#3、启动NetworkManager服务\" class=\"headerlink\" title=\"3、启动NetworkManager服务\"></a>3、启动NetworkManager服务</h6><pre><code># service NetworkManager start\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-21dd8cfcd7fc0216.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h6 id=\"4、查看网卡UUID\"><a href=\"#4、查看网卡UUID\" class=\"headerlink\" title=\"4、查看网卡UUID\"></a>4、查看网卡UUID</h6><pre><code># nmcli con\n  tips:如果有发现有报错\n# Error: could not connect to D-Bus.\ntips:查看/var/log/messages日志\n# vi /var/log/messages\ntips:按两下大写的G跳到最后一页\n</code></pre><p>报错：</p>\n<pre><code>...\nApr 20 14:53:05 localhost NetworkManager[2013]: &lt;info&gt; NetworkManager (version 0.8.1-113.el6) is starting...\nApr 20 14:53:05 localhost NetworkManager[2013]: &lt;info&gt; Read config file /etc/NetworkManager/NetworkManager.conf\nApr 20 14:53:05 localhost NetworkManager[2013]: &lt;error&gt; [1492671185.606620] [nm-dbus-manager.c:278] nm_dbus_manager_init_bus(): Could not get the system bus.  Make sure the message bus daemon is running!  Message: Failed to connect to socket /var/run/dbus/system_bus_socket: Connection refused\n...\n</code></pre><p>需要先启动messagebus，再启动NetworkManager</p>\n<pre><code># /etc/init.d/messagebus start\ntips:重新启动\n# service NetworkManager start\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1d945ece865909ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h6 id=\"运行nmcli\"><a href=\"#运行nmcli\" class=\"headerlink\" title=\"运行nmcli\"></a>运行nmcli</h6><pre><code># nmcli con\n</code></pre><p>报错:<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-77a46ad27ca920e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<pre><code>查看/var/log/messages日志\n# vi /var/log/messages\n</code></pre><p>发现有报错<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-8e47a7a12aeb9e68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h6 id=\"g-slist-free-full-属于glist-的一个方法，缺少glist\"><a href=\"#g-slist-free-full-属于glist-的一个方法，缺少glist\" class=\"headerlink\" title=\"g_slist_free_full 属于glist 的一个方法，缺少glist\"></a>g_slist_free_full 属于glist 的一个方法，缺少glist</h6><h6 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法:\"></a>解决方法:</h6><pre><code># yum -y install glib2-devel\n</code></pre><h6 id=\"3、此时再运行nmcli即可查看网卡UUID\"><a href=\"#3、此时再运行nmcli即可查看网卡UUID\" class=\"headerlink\" title=\"3、此时再运行nmcli即可查看网卡UUID\"></a>3、此时再运行nmcli即可查看网卡UUID</h6><pre><code># service NetworkManager start\n# nmcli con\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-ad3b6fb7812e01d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"Linux-查看网卡UUID\"><a href=\"#Linux-查看网卡UUID\" class=\"headerlink\" title=\"Linux 查看网卡UUID\"></a>Linux 查看网卡UUID</h4><h6 id=\"1、首先我们查看一下nmcli是哪个软件包提供的\"><a href=\"#1、首先我们查看一下nmcli是哪个软件包提供的\" class=\"headerlink\" title=\"1、首先我们查看一下nmcli是哪个软件包提供的\"></a>1、首先我们查看一下nmcli是哪个软件包提供的</h6><pre><code># yum provides &quot;*/nmcli&quot;\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a42d314368eebd8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"><br>","more":"</p>\n<h6 id=\"2、安装NetworkManager服务\"><a href=\"#2、安装NetworkManager服务\" class=\"headerlink\" title=\"2、安装NetworkManager服务\"></a>2、安装NetworkManager服务</h6><pre><code># yum -y install NetworkManager\n</code></pre><h6 id=\"3、启动NetworkManager服务\"><a href=\"#3、启动NetworkManager服务\" class=\"headerlink\" title=\"3、启动NetworkManager服务\"></a>3、启动NetworkManager服务</h6><pre><code># service NetworkManager start\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-21dd8cfcd7fc0216.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h6 id=\"4、查看网卡UUID\"><a href=\"#4、查看网卡UUID\" class=\"headerlink\" title=\"4、查看网卡UUID\"></a>4、查看网卡UUID</h6><pre><code># nmcli con\n  tips:如果有发现有报错\n# Error: could not connect to D-Bus.\ntips:查看/var/log/messages日志\n# vi /var/log/messages\ntips:按两下大写的G跳到最后一页\n</code></pre><p>报错：</p>\n<pre><code>...\nApr 20 14:53:05 localhost NetworkManager[2013]: &lt;info&gt; NetworkManager (version 0.8.1-113.el6) is starting...\nApr 20 14:53:05 localhost NetworkManager[2013]: &lt;info&gt; Read config file /etc/NetworkManager/NetworkManager.conf\nApr 20 14:53:05 localhost NetworkManager[2013]: &lt;error&gt; [1492671185.606620] [nm-dbus-manager.c:278] nm_dbus_manager_init_bus(): Could not get the system bus.  Make sure the message bus daemon is running!  Message: Failed to connect to socket /var/run/dbus/system_bus_socket: Connection refused\n...\n</code></pre><p>需要先启动messagebus，再启动NetworkManager</p>\n<pre><code># /etc/init.d/messagebus start\ntips:重新启动\n# service NetworkManager start\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1d945ece865909ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h6 id=\"运行nmcli\"><a href=\"#运行nmcli\" class=\"headerlink\" title=\"运行nmcli\"></a>运行nmcli</h6><pre><code># nmcli con\n</code></pre><p>报错:<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-77a46ad27ca920e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<pre><code>查看/var/log/messages日志\n# vi /var/log/messages\n</code></pre><p>发现有报错<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-8e47a7a12aeb9e68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h6 id=\"g-slist-free-full-属于glist-的一个方法，缺少glist\"><a href=\"#g-slist-free-full-属于glist-的一个方法，缺少glist\" class=\"headerlink\" title=\"g_slist_free_full 属于glist 的一个方法，缺少glist\"></a>g_slist_free_full 属于glist 的一个方法，缺少glist</h6><h6 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法:\"></a>解决方法:</h6><pre><code># yum -y install glib2-devel\n</code></pre><h6 id=\"3、此时再运行nmcli即可查看网卡UUID\"><a href=\"#3、此时再运行nmcli即可查看网卡UUID\" class=\"headerlink\" title=\"3、此时再运行nmcli即可查看网卡UUID\"></a>3、此时再运行nmcli即可查看网卡UUID</h6><pre><code># service NetworkManager start\n# nmcli con\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-ad3b6fb7812e01d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>"},{"title":"Linux上安装node和npm","date":"2018-04-20T07:31:00.000Z","description":"Linux上安装node和npm","_content":"#### 一、下载Node\n\n  官网下载链接：https://nodejs.org/zh-cn/download/\n![](https://upload-images.jianshu.io/upload_images/2743275-497a8e6f4e7c11d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!--more-->\n解压目录\n```\n# yum install -y xz\n# xz -d node-v8.11.1-linux-x64.tar.xz\n# tar -xf node-v8.11.1-linux-x64.tar\n```\n\n这里想要全局使用npm 和 node,就需要做相关软链，如下！\n```\n# cd /usr/local/bin\n# ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/npm\n# ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/node\n```\n\n然后即可在任意位置执行 node  -v   npm  -v  查看相应的版本，则安装完成！\n\n#### 二、使用淘宝镜像\n```\n# npm config get registry // https://registry.npmjs.org/\n# npm config set registry https://registry.npm.taobao.org\n```\n","source":"_posts/Linux上安装node和npm.md","raw":"---\ntitle: Linux上安装node和npm\ndate: 2018-04-20 15:31\ntags: Linux\ndescription: Linux上安装node和npm\n---\n#### 一、下载Node\n\n  官网下载链接：https://nodejs.org/zh-cn/download/\n![](https://upload-images.jianshu.io/upload_images/2743275-497a8e6f4e7c11d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!--more-->\n解压目录\n```\n# yum install -y xz\n# xz -d node-v8.11.1-linux-x64.tar.xz\n# tar -xf node-v8.11.1-linux-x64.tar\n```\n\n这里想要全局使用npm 和 node,就需要做相关软链，如下！\n```\n# cd /usr/local/bin\n# ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/npm\n# ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/node\n```\n\n然后即可在任意位置执行 node  -v   npm  -v  查看相应的版本，则安装完成！\n\n#### 二、使用淘宝镜像\n```\n# npm config get registry // https://registry.npmjs.org/\n# npm config set registry https://registry.npm.taobao.org\n```\n","slug":"Linux上安装node和npm","published":1,"updated":"2019-03-12T01:33:31.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpg000p48dk5mgkie82","content":"<h4 id=\"一、下载Node\"><a href=\"#一、下载Node\" class=\"headerlink\" title=\"一、下载Node\"></a>一、下载Node</h4><p>  官网下载链接：<a href=\"https://nodejs.org/zh-cn/download/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/zh-cn/download/</a><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-497a8e6f4e7c11d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>解压目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># yum install -y xz</span><br><span class=\"line\"># xz -d node-v8.11.1-linux-x64.tar.xz</span><br><span class=\"line\"># tar -xf node-v8.11.1-linux-x64.tar</span><br></pre></td></tr></table></figure></p>\n<p>这里想要全局使用npm 和 node,就需要做相关软链，如下！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd /usr/local/bin</span><br><span class=\"line\"># ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/npm</span><br><span class=\"line\"># ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/node</span><br></pre></td></tr></table></figure></p>\n<p>然后即可在任意位置执行 node  -v   npm  -v  查看相应的版本，则安装完成！</p>\n<h4 id=\"二、使用淘宝镜像\"><a href=\"#二、使用淘宝镜像\" class=\"headerlink\" title=\"二、使用淘宝镜像\"></a>二、使用淘宝镜像</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># npm config get registry // https://registry.npmjs.org/</span><br><span class=\"line\"># npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"一、下载Node\"><a href=\"#一、下载Node\" class=\"headerlink\" title=\"一、下载Node\"></a>一、下载Node</h4><p>  官网下载链接：<a href=\"https://nodejs.org/zh-cn/download/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/zh-cn/download/</a><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-497a8e6f4e7c11d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>","more":"<p>解压目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># yum install -y xz</span><br><span class=\"line\"># xz -d node-v8.11.1-linux-x64.tar.xz</span><br><span class=\"line\"># tar -xf node-v8.11.1-linux-x64.tar</span><br></pre></td></tr></table></figure></p>\n<p>这里想要全局使用npm 和 node,就需要做相关软链，如下！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cd /usr/local/bin</span><br><span class=\"line\"># ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/npm</span><br><span class=\"line\"># ln -s /usr/local/src/node-v8.10.0-linux-x64/bin/node</span><br></pre></td></tr></table></figure></p>\n<p>然后即可在任意位置执行 node  -v   npm  -v  查看相应的版本，则安装完成！</p>\n<h4 id=\"二、使用淘宝镜像\"><a href=\"#二、使用淘宝镜像\" class=\"headerlink\" title=\"二、使用淘宝镜像\"></a>二、使用淘宝镜像</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># npm config get registry // https://registry.npmjs.org/</span><br><span class=\"line\"># npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>"},{"title":"Linux下Tomcat指定JDK和设置内存大小","date":"2018-08-06T09:57:00.000Z","description":"Linux下Tomcat指定JDK和设置内存大小","_content":"##### 一、Linux下Tomcat指定JDK\n```shell\n# vim bin/setclasspath.sh\n```\n在脚本开头的地方指定JAVA_HOME和JRE_HOME\n```shell\nexport JAVA_HOME=/usr/local/jdk1.8.0_40\nexport JRE_HOME=/usr/local/jdk1.8.0_40/jre\n```\n<!--more-->\n##### 二、Linux下Tomcat设置内存大小\n```shell\n# vim bin/catalina.sh\n```\n###### Tomcat设置内存为8G:JAVA_OPTS=\"-server -Xms8192M -Xmx8192M -XX:PermSize=256M -XX:MaxPermSize=256M\"\n\n###### Tomcat设置内存为4G:JAVA_OPTS=\"-server -Xms4096M -Xmx4096M -XX:PermSize=256M -XX:MaxPermSize=256M\"\n![](https://upload-images.jianshu.io/upload_images/2743275-af5bcc478597a94a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/Linux下Tomcat指定JDK和设置内存大小.md","raw":"---\ntitle: Linux下Tomcat指定JDK和设置内存大小\ndate: 2018-08-06 17:57\ntags: Linux\ndescription: Linux下Tomcat指定JDK和设置内存大小\n---\n##### 一、Linux下Tomcat指定JDK\n```shell\n# vim bin/setclasspath.sh\n```\n在脚本开头的地方指定JAVA_HOME和JRE_HOME\n```shell\nexport JAVA_HOME=/usr/local/jdk1.8.0_40\nexport JRE_HOME=/usr/local/jdk1.8.0_40/jre\n```\n<!--more-->\n##### 二、Linux下Tomcat设置内存大小\n```shell\n# vim bin/catalina.sh\n```\n###### Tomcat设置内存为8G:JAVA_OPTS=\"-server -Xms8192M -Xmx8192M -XX:PermSize=256M -XX:MaxPermSize=256M\"\n\n###### Tomcat设置内存为4G:JAVA_OPTS=\"-server -Xms4096M -Xmx4096M -XX:PermSize=256M -XX:MaxPermSize=256M\"\n![](https://upload-images.jianshu.io/upload_images/2743275-af5bcc478597a94a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"Linux下Tomcat指定JDK和设置内存大小","published":1,"updated":"2019-02-25T17:35:10.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpi000r48dkygaw7jt5","content":"<h5 id=\"一、Linux下Tomcat指定JDK\"><a href=\"#一、Linux下Tomcat指定JDK\" class=\"headerlink\" title=\"一、Linux下Tomcat指定JDK\"></a>一、Linux下Tomcat指定JDK</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim bin/setclasspath.sh</span><br></pre></td></tr></table></figure>\n<p>在脚本开头的地方指定JAVA_HOME和JRE_HOME<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/local/jdk1.8.0_40</span><br><span class=\"line\">export JRE_HOME=/usr/local/jdk1.8.0_40/jre</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h5 id=\"二、Linux下Tomcat设置内存大小\"><a href=\"#二、Linux下Tomcat设置内存大小\" class=\"headerlink\" title=\"二、Linux下Tomcat设置内存大小\"></a>二、Linux下Tomcat设置内存大小</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim bin/catalina.sh</span><br></pre></td></tr></table></figure>\n<h6 id=\"Tomcat设置内存为8G-JAVA-OPTS-”-server-Xms8192M-Xmx8192M-XX-PermSize-256M-XX-MaxPermSize-256M”\"><a href=\"#Tomcat设置内存为8G-JAVA-OPTS-”-server-Xms8192M-Xmx8192M-XX-PermSize-256M-XX-MaxPermSize-256M”\" class=\"headerlink\" title=\"Tomcat设置内存为8G:JAVA_OPTS=”-server -Xms8192M -Xmx8192M -XX:PermSize=256M -XX:MaxPermSize=256M”\"></a>Tomcat设置内存为8G:JAVA_OPTS=”-server -Xms8192M -Xmx8192M -XX:PermSize=256M -XX:MaxPermSize=256M”</h6><h6 id=\"Tomcat设置内存为4G-JAVA-OPTS-”-server-Xms4096M-Xmx4096M-XX-PermSize-256M-XX-MaxPermSize-256M”\"><a href=\"#Tomcat设置内存为4G-JAVA-OPTS-”-server-Xms4096M-Xmx4096M-XX-PermSize-256M-XX-MaxPermSize-256M”\" class=\"headerlink\" title=\"Tomcat设置内存为4G:JAVA_OPTS=”-server -Xms4096M -Xmx4096M -XX:PermSize=256M -XX:MaxPermSize=256M”\"></a>Tomcat设置内存为4G:JAVA_OPTS=”-server -Xms4096M -Xmx4096M -XX:PermSize=256M -XX:MaxPermSize=256M”</h6><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-af5bcc478597a94a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h5 id=\"一、Linux下Tomcat指定JDK\"><a href=\"#一、Linux下Tomcat指定JDK\" class=\"headerlink\" title=\"一、Linux下Tomcat指定JDK\"></a>一、Linux下Tomcat指定JDK</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim bin/setclasspath.sh</span><br></pre></td></tr></table></figure>\n<p>在脚本开头的地方指定JAVA_HOME和JRE_HOME<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=/usr/local/jdk1.8.0_40</span><br><span class=\"line\">export JRE_HOME=/usr/local/jdk1.8.0_40/jre</span><br></pre></td></tr></table></figure></p>","more":"<h5 id=\"二、Linux下Tomcat设置内存大小\"><a href=\"#二、Linux下Tomcat设置内存大小\" class=\"headerlink\" title=\"二、Linux下Tomcat设置内存大小\"></a>二、Linux下Tomcat设置内存大小</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim bin/catalina.sh</span><br></pre></td></tr></table></figure>\n<h6 id=\"Tomcat设置内存为8G-JAVA-OPTS-”-server-Xms8192M-Xmx8192M-XX-PermSize-256M-XX-MaxPermSize-256M”\"><a href=\"#Tomcat设置内存为8G-JAVA-OPTS-”-server-Xms8192M-Xmx8192M-XX-PermSize-256M-XX-MaxPermSize-256M”\" class=\"headerlink\" title=\"Tomcat设置内存为8G:JAVA_OPTS=”-server -Xms8192M -Xmx8192M -XX:PermSize=256M -XX:MaxPermSize=256M”\"></a>Tomcat设置内存为8G:JAVA_OPTS=”-server -Xms8192M -Xmx8192M -XX:PermSize=256M -XX:MaxPermSize=256M”</h6><h6 id=\"Tomcat设置内存为4G-JAVA-OPTS-”-server-Xms4096M-Xmx4096M-XX-PermSize-256M-XX-MaxPermSize-256M”\"><a href=\"#Tomcat设置内存为4G-JAVA-OPTS-”-server-Xms4096M-Xmx4096M-XX-PermSize-256M-XX-MaxPermSize-256M”\" class=\"headerlink\" title=\"Tomcat设置内存为4G:JAVA_OPTS=”-server -Xms4096M -Xmx4096M -XX:PermSize=256M -XX:MaxPermSize=256M”\"></a>Tomcat设置内存为4G:JAVA_OPTS=”-server -Xms4096M -Xmx4096M -XX:PermSize=256M -XX:MaxPermSize=256M”</h6><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-af5bcc478597a94a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"Linux下同步网络时间","date":"2018-08-01T07:24:00.000Z","description":"Linux下同步网络时间","_content":"#### 一、安装ntp\n```shell\n# yum install -y ntpdate\n```\n#### 二、同步时间\n```shell\n# 方式一、使用域名连接，要经过DNS解析，速度慢。\n# ntpdate pool.ntp.org\n# 方式二、使用IP连接，超级快。\n# ntpdate 120.24.81.91\n```","source":"_posts/Linux下同步网络时间.md","raw":"---\ntitle: Linux下同步网络时间\ndate: 2018-08-01 15:24\ntags: Linux\ndescription: Linux下同步网络时间\n---\n#### 一、安装ntp\n```shell\n# yum install -y ntpdate\n```\n#### 二、同步时间\n```shell\n# 方式一、使用域名连接，要经过DNS解析，速度慢。\n# ntpdate pool.ntp.org\n# 方式二、使用IP连接，超级快。\n# ntpdate 120.24.81.91\n```","slug":"Linux下同步网络时间","published":1,"updated":"2019-02-26T11:47:57.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpl000u48dkt682fsp5","content":"<h4 id=\"一、安装ntp\"><a href=\"#一、安装ntp\" class=\"headerlink\" title=\"一、安装ntp\"></a>一、安装ntp</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y ntpdate</span><br></pre></td></tr></table></figure>\n<h4 id=\"二、同步时间\"><a href=\"#二、同步时间\" class=\"headerlink\" title=\"二、同步时间\"></a>二、同步时间</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 方式一、使用域名连接，要经过DNS解析，速度慢。</span><br><span class=\"line\"><span class=\"meta\">#</span> ntpdate pool.ntp.org</span><br><span class=\"line\"><span class=\"meta\">#</span> 方式二、使用IP连接，超级快。</span><br><span class=\"line\"><span class=\"meta\">#</span> ntpdate 120.24.81.91</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一、安装ntp\"><a href=\"#一、安装ntp\" class=\"headerlink\" title=\"一、安装ntp\"></a>一、安装ntp</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y ntpdate</span><br></pre></td></tr></table></figure>\n<h4 id=\"二、同步时间\"><a href=\"#二、同步时间\" class=\"headerlink\" title=\"二、同步时间\"></a>二、同步时间</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 方式一、使用域名连接，要经过DNS解析，速度慢。</span><br><span class=\"line\"><span class=\"meta\">#</span> ntpdate pool.ntp.org</span><br><span class=\"line\"><span class=\"meta\">#</span> 方式二、使用IP连接，超级快。</span><br><span class=\"line\"><span class=\"meta\">#</span> ntpdate 120.24.81.91</span><br></pre></td></tr></table></figure>"},{"title":"Linux下安装Erlang","date":"2019-03-01T08:51:00.000Z","description":"Linux下安装Erlang","_content":"### Linux下安装Erlang\n##### 一、升级openssl\n```shell\n# cd /usr/local/\n# wget http://www.openssl.org/source/openssl-1.0.1s.tar.gz\n# tar -zxvf openssl-1.0.1s.tar.gz\n# cd openssl-1.0.1s\n# ./config --prefix=/usr/local/openssl\n# vim Makefile\n--修改CFLAG= -DOPENSSL_THREADS 修改成 CFLAG= -fPIC -DOPENSSL_THREADS\n--也就是添加 -fPIC\n# make && make install\n```\n<!--more-->\n![](https://upload-images.jianshu.io/upload_images/2743275-dfbc236a0a6fc515.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##### 二、安装Erlang\n```shell\n# cd /usr/local/\n# wget http://erlang.org/download/otp_src_18.3.tar.gz\n# tar -zxvf otp_src_18.3.tar.gz\n# cd otp_src_18.3\n--创建Erlang安装目录\n# mkdir /usr/local/erlang\n--ErLang安装依赖\n# yum install -y gcc gcc-c++ unixODBC-devel openssl-devel ncurses-devel\n# ./configure --prefix=/usr/local/erlang\n# make && make install\n--配置Erlang环境变量\n# vim /etc/profile\n文件末尾添加 export PATH=$PATH:/usr/local/erlang/bin\n# source /etc/profile\n```\n##### 三、验证erlang是否安装成功\n```shell\n# erl\n# ssl:versions().\n# halt().\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-81a99d09c5fb870d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/Linux下安装Erlang.md","raw":"---\ntitle: Linux下安装Erlang\ndate: 2019.03.01 16:51\ntags: Linux\ndescription: Linux下安装Erlang\n---\n### Linux下安装Erlang\n##### 一、升级openssl\n```shell\n# cd /usr/local/\n# wget http://www.openssl.org/source/openssl-1.0.1s.tar.gz\n# tar -zxvf openssl-1.0.1s.tar.gz\n# cd openssl-1.0.1s\n# ./config --prefix=/usr/local/openssl\n# vim Makefile\n--修改CFLAG= -DOPENSSL_THREADS 修改成 CFLAG= -fPIC -DOPENSSL_THREADS\n--也就是添加 -fPIC\n# make && make install\n```\n<!--more-->\n![](https://upload-images.jianshu.io/upload_images/2743275-dfbc236a0a6fc515.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n##### 二、安装Erlang\n```shell\n# cd /usr/local/\n# wget http://erlang.org/download/otp_src_18.3.tar.gz\n# tar -zxvf otp_src_18.3.tar.gz\n# cd otp_src_18.3\n--创建Erlang安装目录\n# mkdir /usr/local/erlang\n--ErLang安装依赖\n# yum install -y gcc gcc-c++ unixODBC-devel openssl-devel ncurses-devel\n# ./configure --prefix=/usr/local/erlang\n# make && make install\n--配置Erlang环境变量\n# vim /etc/profile\n文件末尾添加 export PATH=$PATH:/usr/local/erlang/bin\n# source /etc/profile\n```\n##### 三、验证erlang是否安装成功\n```shell\n# erl\n# ssl:versions().\n# halt().\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-81a99d09c5fb870d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"Linux下安装Erlang","published":1,"updated":"2019-03-12T01:36:18.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpn000w48dkovvlpirk","content":"<h3 id=\"Linux下安装Erlang\"><a href=\"#Linux下安装Erlang\" class=\"headerlink\" title=\"Linux下安装Erlang\"></a>Linux下安装Erlang</h3><h5 id=\"一、升级openssl\"><a href=\"#一、升级openssl\" class=\"headerlink\" title=\"一、升级openssl\"></a>一、升级openssl</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://www.openssl.org/source/openssl-1.0.1s.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -zxvf openssl-1.0.1s.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> cd openssl-1.0.1s</span><br><span class=\"line\"><span class=\"meta\">#</span> ./config --prefix=/usr/local/openssl</span><br><span class=\"line\"><span class=\"meta\">#</span> vim Makefile</span><br><span class=\"line\">--修改CFLAG= -DOPENSSL_THREADS 修改成 CFLAG= -fPIC -DOPENSSL_THREADS</span><br><span class=\"line\">--也就是添加 -fPIC</span><br><span class=\"line\"><span class=\"meta\">#</span> make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-dfbc236a0a6fc515.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h5 id=\"二、安装Erlang\"><a href=\"#二、安装Erlang\" class=\"headerlink\" title=\"二、安装Erlang\"></a>二、安装Erlang</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://erlang.org/download/otp_src_18.3.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -zxvf otp_src_18.3.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> cd otp_src_18.3</span><br><span class=\"line\">--创建Erlang安装目录</span><br><span class=\"line\"><span class=\"meta\">#</span> mkdir /usr/local/erlang</span><br><span class=\"line\">--ErLang安装依赖</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y gcc gcc-c++ unixODBC-devel openssl-devel ncurses-devel</span><br><span class=\"line\"><span class=\"meta\">#</span> ./configure --prefix=/usr/local/erlang</span><br><span class=\"line\"><span class=\"meta\">#</span> make &amp;&amp; make install</span><br><span class=\"line\">--配置Erlang环境变量</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /etc/profile</span><br><span class=\"line\">文件末尾添加 export PATH=$PATH:/usr/local/erlang/bin</span><br><span class=\"line\"><span class=\"meta\">#</span> source /etc/profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"三、验证erlang是否安装成功\"><a href=\"#三、验证erlang是否安装成功\" class=\"headerlink\" title=\"三、验证erlang是否安装成功\"></a>三、验证erlang是否安装成功</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> erl</span><br><span class=\"line\"><span class=\"meta\">#</span> ssl:versions().</span><br><span class=\"line\"><span class=\"meta\">#</span> halt().</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-81a99d09c5fb870d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"Linux下安装Erlang\"><a href=\"#Linux下安装Erlang\" class=\"headerlink\" title=\"Linux下安装Erlang\"></a>Linux下安装Erlang</h3><h5 id=\"一、升级openssl\"><a href=\"#一、升级openssl\" class=\"headerlink\" title=\"一、升级openssl\"></a>一、升级openssl</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://www.openssl.org/source/openssl-1.0.1s.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -zxvf openssl-1.0.1s.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> cd openssl-1.0.1s</span><br><span class=\"line\"><span class=\"meta\">#</span> ./config --prefix=/usr/local/openssl</span><br><span class=\"line\"><span class=\"meta\">#</span> vim Makefile</span><br><span class=\"line\">--修改CFLAG= -DOPENSSL_THREADS 修改成 CFLAG= -fPIC -DOPENSSL_THREADS</span><br><span class=\"line\">--也就是添加 -fPIC</span><br><span class=\"line\"><span class=\"meta\">#</span> make &amp;&amp; make install</span><br></pre></td></tr></table></figure>","more":"<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-dfbc236a0a6fc515.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h5 id=\"二、安装Erlang\"><a href=\"#二、安装Erlang\" class=\"headerlink\" title=\"二、安装Erlang\"></a>二、安装Erlang</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://erlang.org/download/otp_src_18.3.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -zxvf otp_src_18.3.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> cd otp_src_18.3</span><br><span class=\"line\">--创建Erlang安装目录</span><br><span class=\"line\"><span class=\"meta\">#</span> mkdir /usr/local/erlang</span><br><span class=\"line\">--ErLang安装依赖</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y gcc gcc-c++ unixODBC-devel openssl-devel ncurses-devel</span><br><span class=\"line\"><span class=\"meta\">#</span> ./configure --prefix=/usr/local/erlang</span><br><span class=\"line\"><span class=\"meta\">#</span> make &amp;&amp; make install</span><br><span class=\"line\">--配置Erlang环境变量</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /etc/profile</span><br><span class=\"line\">文件末尾添加 export PATH=$PATH:/usr/local/erlang/bin</span><br><span class=\"line\"><span class=\"meta\">#</span> source /etc/profile</span><br></pre></td></tr></table></figure>\n<h5 id=\"三、验证erlang是否安装成功\"><a href=\"#三、验证erlang是否安装成功\" class=\"headerlink\" title=\"三、验证erlang是否安装成功\"></a>三、验证erlang是否安装成功</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> erl</span><br><span class=\"line\"><span class=\"meta\">#</span> ssl:versions().</span><br><span class=\"line\"><span class=\"meta\">#</span> halt().</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-81a99d09c5fb870d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>"},{"title":"Linux下安装rabbitMq","date":"2019-03-07T01:26:00.000Z","description":"Linux下安装rabbitMq","_content":"### Linux下安装rabbitMq\n**必须有Erlang环境------>>>[Linux下安装Erlang](https://www.jianshu.com/p/998f9f978f57 \"Linux下安装Erlang\")**\n##### 一、安装rabbitMq\n```shell\n# cd /usr/local/\n# yum install -y xz\n# wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.2/rabbitmq-server-generic-unix-3.6.2.tar.xz\n# xz -d rabbitmq-server-generic-unix-3.6.2.tar.xz\n# tar -xvf rabbitmq-server-generic-unix-3.6.2.tar\n--配置rabbitMq环境变量\n# vim /etc/profile\n文件末尾添加 export PATH=$PATH:/usr/local/rabbitmq_server-3.6.2/sbin\n# source /etc/profile\n```\n<!--more-->\n----\n##### 二、配置网页插件\n```shell\n# rabbitmq-plugins enable rabbitmq_management\n--启动rabbitMq\n# rabbitmq-server –detached\nTips:rabbitmq默认会创建guest账号，只能用于localhost登录页面管理员\n--添加admin用户并且密码为admin\n# rabbitmqctl add_user admin admin\n--授权admin用户为管理员\n# rabbitmqctl set_user_tags admin administrator\n--授权访问权限\n# rabbitmqctl set_permissions -p \"/\" admin \".\" \".\" \".*\"\n```\n----\n##### 三、验证rabbitMq是否安装成功\n- 端口：15672 网页管理，  5672 AMQP端口\n- 访问 http://IP:15672\n----\n##### 四、rabbitMq常用命令：\n- 启动：`rabbitmq-server –detached`\n- 查看服务状态：`rabbitmqctl status`\n- 关闭服务：`rabbitmqctl stop`\n- 查看所有用户：`rabbitmqctl list_users`\n- 添加用户：`rabbitmqctl add_user admin admin`\n- 授权用户管理员：`rabbitmqctl set_user_tags admin administrator`\n- 授权访问权限：`rabbitmqctl set_permissions -p \"/\" admin \".\" \".\" \".*\"`\n- 添加虚拟机：`rabbitmqctl add_vhost admin_vhost`\n- 授权用户到虚拟机：`rabbitmqctl set_permissions -p admin_vhost admin \".*\" \".*\" \".*\"`\n","source":"_posts/Linux下安装rabbitMq.md","raw":"---\ntitle: Linux下安装rabbitMq\ndate: 2019.03.07 09:26\ntags: Linux\ndescription: Linux下安装rabbitMq\n---\n### Linux下安装rabbitMq\n**必须有Erlang环境------>>>[Linux下安装Erlang](https://www.jianshu.com/p/998f9f978f57 \"Linux下安装Erlang\")**\n##### 一、安装rabbitMq\n```shell\n# cd /usr/local/\n# yum install -y xz\n# wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.2/rabbitmq-server-generic-unix-3.6.2.tar.xz\n# xz -d rabbitmq-server-generic-unix-3.6.2.tar.xz\n# tar -xvf rabbitmq-server-generic-unix-3.6.2.tar\n--配置rabbitMq环境变量\n# vim /etc/profile\n文件末尾添加 export PATH=$PATH:/usr/local/rabbitmq_server-3.6.2/sbin\n# source /etc/profile\n```\n<!--more-->\n----\n##### 二、配置网页插件\n```shell\n# rabbitmq-plugins enable rabbitmq_management\n--启动rabbitMq\n# rabbitmq-server –detached\nTips:rabbitmq默认会创建guest账号，只能用于localhost登录页面管理员\n--添加admin用户并且密码为admin\n# rabbitmqctl add_user admin admin\n--授权admin用户为管理员\n# rabbitmqctl set_user_tags admin administrator\n--授权访问权限\n# rabbitmqctl set_permissions -p \"/\" admin \".\" \".\" \".*\"\n```\n----\n##### 三、验证rabbitMq是否安装成功\n- 端口：15672 网页管理，  5672 AMQP端口\n- 访问 http://IP:15672\n----\n##### 四、rabbitMq常用命令：\n- 启动：`rabbitmq-server –detached`\n- 查看服务状态：`rabbitmqctl status`\n- 关闭服务：`rabbitmqctl stop`\n- 查看所有用户：`rabbitmqctl list_users`\n- 添加用户：`rabbitmqctl add_user admin admin`\n- 授权用户管理员：`rabbitmqctl set_user_tags admin administrator`\n- 授权访问权限：`rabbitmqctl set_permissions -p \"/\" admin \".\" \".\" \".*\"`\n- 添加虚拟机：`rabbitmqctl add_vhost admin_vhost`\n- 授权用户到虚拟机：`rabbitmqctl set_permissions -p admin_vhost admin \".*\" \".*\" \".*\"`\n","slug":"Linux下安装rabbitMq","published":1,"updated":"2019-03-12T01:38:23.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpp000y48dkf6v365vt","content":"<h3 id=\"Linux下安装rabbitMq\"><a href=\"#Linux下安装rabbitMq\" class=\"headerlink\" title=\"Linux下安装rabbitMq\"></a>Linux下安装rabbitMq</h3><p><strong>必须有Erlang环境——&gt;&gt;&gt;<a href=\"https://www.jianshu.com/p/998f9f978f57\" title=\"Linux下安装Erlang\" target=\"_blank\" rel=\"noopener\">Linux下安装Erlang</a></strong></p>\n<h5 id=\"一、安装rabbitMq\"><a href=\"#一、安装rabbitMq\" class=\"headerlink\" title=\"一、安装rabbitMq\"></a>一、安装rabbitMq</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y xz</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.2/rabbitmq-server-generic-unix-3.6.2.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> xz -d rabbitmq-server-generic-unix-3.6.2.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -xvf rabbitmq-server-generic-unix-3.6.2.tar</span><br><span class=\"line\">--配置rabbitMq环境变量</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /etc/profile</span><br><span class=\"line\">文件末尾添加 export PATH=$PATH:/usr/local/rabbitmq_server-3.6.2/sbin</span><br><span class=\"line\"><span class=\"meta\">#</span> source /etc/profile</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<hr>\n<h5 id=\"二、配置网页插件\"><a href=\"#二、配置网页插件\" class=\"headerlink\" title=\"二、配置网页插件\"></a>二、配置网页插件</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rabbitmq-plugins enable rabbitmq_management</span><br><span class=\"line\">--启动rabbitMq</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmq-server –detached</span><br><span class=\"line\">Tips:rabbitmq默认会创建guest账号，只能用于localhost登录页面管理员</span><br><span class=\"line\">--添加admin用户并且密码为admin</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmqctl add_user admin admin</span><br><span class=\"line\">--授权admin用户为管理员</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmqctl set_user_tags admin administrator</span><br><span class=\"line\">--授权访问权限</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmqctl set_permissions -p \"/\" admin \".\" \".\" \".*\"</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"三、验证rabbitMq是否安装成功\"><a href=\"#三、验证rabbitMq是否安装成功\" class=\"headerlink\" title=\"三、验证rabbitMq是否安装成功\"></a>三、验证rabbitMq是否安装成功</h5><ul>\n<li>端口：15672 网页管理，  5672 AMQP端口</li>\n<li>访问 <a href=\"http://IP:15672\" target=\"_blank\" rel=\"noopener\">http://IP:15672</a></li>\n</ul>\n<hr>\n<h5 id=\"四、rabbitMq常用命令：\"><a href=\"#四、rabbitMq常用命令：\" class=\"headerlink\" title=\"四、rabbitMq常用命令：\"></a>四、rabbitMq常用命令：</h5><ul>\n<li>启动：<code>rabbitmq-server –detached</code></li>\n<li>查看服务状态：<code>rabbitmqctl status</code></li>\n<li>关闭服务：<code>rabbitmqctl stop</code></li>\n<li>查看所有用户：<code>rabbitmqctl list_users</code></li>\n<li>添加用户：<code>rabbitmqctl add_user admin admin</code></li>\n<li>授权用户管理员：<code>rabbitmqctl set_user_tags admin administrator</code></li>\n<li>授权访问权限：<code>rabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.&quot; &quot;.&quot; &quot;.*&quot;</code></li>\n<li>添加虚拟机：<code>rabbitmqctl add_vhost admin_vhost</code></li>\n<li>授权用户到虚拟机：<code>rabbitmqctl set_permissions -p admin_vhost admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"Linux下安装rabbitMq\"><a href=\"#Linux下安装rabbitMq\" class=\"headerlink\" title=\"Linux下安装rabbitMq\"></a>Linux下安装rabbitMq</h3><p><strong>必须有Erlang环境——&gt;&gt;&gt;<a href=\"https://www.jianshu.com/p/998f9f978f57\" title=\"Linux下安装Erlang\" target=\"_blank\" rel=\"noopener\">Linux下安装Erlang</a></strong></p>\n<h5 id=\"一、安装rabbitMq\"><a href=\"#一、安装rabbitMq\" class=\"headerlink\" title=\"一、安装rabbitMq\"></a>一、安装rabbitMq</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> cd /usr/local/</span><br><span class=\"line\"><span class=\"meta\">#</span> yum install -y xz</span><br><span class=\"line\"><span class=\"meta\">#</span> wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.2/rabbitmq-server-generic-unix-3.6.2.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> xz -d rabbitmq-server-generic-unix-3.6.2.tar.xz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -xvf rabbitmq-server-generic-unix-3.6.2.tar</span><br><span class=\"line\">--配置rabbitMq环境变量</span><br><span class=\"line\"><span class=\"meta\">#</span> vim /etc/profile</span><br><span class=\"line\">文件末尾添加 export PATH=$PATH:/usr/local/rabbitmq_server-3.6.2/sbin</span><br><span class=\"line\"><span class=\"meta\">#</span> source /etc/profile</span><br></pre></td></tr></table></figure>","more":"<hr>\n<h5 id=\"二、配置网页插件\"><a href=\"#二、配置网页插件\" class=\"headerlink\" title=\"二、配置网页插件\"></a>二、配置网页插件</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rabbitmq-plugins enable rabbitmq_management</span><br><span class=\"line\">--启动rabbitMq</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmq-server –detached</span><br><span class=\"line\">Tips:rabbitmq默认会创建guest账号，只能用于localhost登录页面管理员</span><br><span class=\"line\">--添加admin用户并且密码为admin</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmqctl add_user admin admin</span><br><span class=\"line\">--授权admin用户为管理员</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmqctl set_user_tags admin administrator</span><br><span class=\"line\">--授权访问权限</span><br><span class=\"line\"><span class=\"meta\">#</span> rabbitmqctl set_permissions -p \"/\" admin \".\" \".\" \".*\"</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"三、验证rabbitMq是否安装成功\"><a href=\"#三、验证rabbitMq是否安装成功\" class=\"headerlink\" title=\"三、验证rabbitMq是否安装成功\"></a>三、验证rabbitMq是否安装成功</h5><ul>\n<li>端口：15672 网页管理，  5672 AMQP端口</li>\n<li>访问 <a href=\"http://IP:15672\" target=\"_blank\" rel=\"noopener\">http://IP:15672</a></li>\n</ul>\n<hr>\n<h5 id=\"四、rabbitMq常用命令：\"><a href=\"#四、rabbitMq常用命令：\" class=\"headerlink\" title=\"四、rabbitMq常用命令：\"></a>四、rabbitMq常用命令：</h5><ul>\n<li>启动：<code>rabbitmq-server –detached</code></li>\n<li>查看服务状态：<code>rabbitmqctl status</code></li>\n<li>关闭服务：<code>rabbitmqctl stop</code></li>\n<li>查看所有用户：<code>rabbitmqctl list_users</code></li>\n<li>添加用户：<code>rabbitmqctl add_user admin admin</code></li>\n<li>授权用户管理员：<code>rabbitmqctl set_user_tags admin administrator</code></li>\n<li>授权访问权限：<code>rabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.&quot; &quot;.&quot; &quot;.*&quot;</code></li>\n<li>添加虚拟机：<code>rabbitmqctl add_vhost admin_vhost</code></li>\n<li>授权用户到虚拟机：<code>rabbitmqctl set_permissions -p admin_vhost admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</code></li>\n</ul>"},{"title":"Linux下更改MySQL的存储目录","date":"2018-08-06T09:06:00.000Z","description":"Linux下更改MySQL的存储目录","_content":"##### 重要步骤：一定要先停止Mysql\n```shell\n# service mysqld stop\n```\n##### 1、创建目标文件夹\n```shell\n# mkdir -p /data/mysql\n# chown -R mysql.mysql /data/mysql/\n```\n##### 2、迁移命令\n```shell\n# mysql_install_db --user=mysql --basedir=/usr --datadir=/data/mysql\n```\n<!--more-->\n##### 3、为避免麻烦，删掉原文件夹/var/lib/mysql\n```shell\n# rm -rf /var/lib/mysql/*\n```\n##### 4、修改/etc/my.cnf配置文件\n```shell\n[mysqld]\ndatadir=/data/mysql\n```\n##### 5、启动mysql\n```shell\n# chkconfig mysqld on\n# service mysqld restart\n```","source":"_posts/Linux下更改MySQL的存储目录.md","raw":"---\ntitle: Linux下更改MySQL的存储目录\ndate: 2018-08-06 17:06\ntags: Linux\ndescription: Linux下更改MySQL的存储目录\n---\n##### 重要步骤：一定要先停止Mysql\n```shell\n# service mysqld stop\n```\n##### 1、创建目标文件夹\n```shell\n# mkdir -p /data/mysql\n# chown -R mysql.mysql /data/mysql/\n```\n##### 2、迁移命令\n```shell\n# mysql_install_db --user=mysql --basedir=/usr --datadir=/data/mysql\n```\n<!--more-->\n##### 3、为避免麻烦，删掉原文件夹/var/lib/mysql\n```shell\n# rm -rf /var/lib/mysql/*\n```\n##### 4、修改/etc/my.cnf配置文件\n```shell\n[mysqld]\ndatadir=/data/mysql\n```\n##### 5、启动mysql\n```shell\n# chkconfig mysqld on\n# service mysqld restart\n```","slug":"Linux下更改MySQL的存储目录","published":1,"updated":"2019-02-25T17:35:10.513Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irps001148dklpzm0w0g","content":"<h5 id=\"重要步骤：一定要先停止Mysql\"><a href=\"#重要步骤：一定要先停止Mysql\" class=\"headerlink\" title=\"重要步骤：一定要先停止Mysql\"></a>重要步骤：一定要先停止Mysql</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> service mysqld stop</span><br></pre></td></tr></table></figure>\n<h5 id=\"1、创建目标文件夹\"><a href=\"#1、创建目标文件夹\" class=\"headerlink\" title=\"1、创建目标文件夹\"></a>1、创建目标文件夹</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> mkdir -p /data/mysql</span><br><span class=\"line\"><span class=\"meta\">#</span> chown -R mysql.mysql /data/mysql/</span><br></pre></td></tr></table></figure>\n<h5 id=\"2、迁移命令\"><a href=\"#2、迁移命令\" class=\"headerlink\" title=\"2、迁移命令\"></a>2、迁移命令</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> mysql_install_db --user=mysql --basedir=/usr --datadir=/data/mysql</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"3、为避免麻烦，删掉原文件夹-var-lib-mysql\"><a href=\"#3、为避免麻烦，删掉原文件夹-var-lib-mysql\" class=\"headerlink\" title=\"3、为避免麻烦，删掉原文件夹/var/lib/mysql\"></a>3、为避免麻烦，删掉原文件夹/var/lib/mysql</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rm -rf /var/lib/mysql/*</span><br></pre></td></tr></table></figure>\n<h5 id=\"4、修改-etc-my-cnf配置文件\"><a href=\"#4、修改-etc-my-cnf配置文件\" class=\"headerlink\" title=\"4、修改/etc/my.cnf配置文件\"></a>4、修改/etc/my.cnf配置文件</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">datadir=/data/mysql</span><br></pre></td></tr></table></figure>\n<h5 id=\"5、启动mysql\"><a href=\"#5、启动mysql\" class=\"headerlink\" title=\"5、启动mysql\"></a>5、启动mysql</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> chkconfig mysqld on</span><br><span class=\"line\"><span class=\"meta\">#</span> service mysqld restart</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h5 id=\"重要步骤：一定要先停止Mysql\"><a href=\"#重要步骤：一定要先停止Mysql\" class=\"headerlink\" title=\"重要步骤：一定要先停止Mysql\"></a>重要步骤：一定要先停止Mysql</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> service mysqld stop</span><br></pre></td></tr></table></figure>\n<h5 id=\"1、创建目标文件夹\"><a href=\"#1、创建目标文件夹\" class=\"headerlink\" title=\"1、创建目标文件夹\"></a>1、创建目标文件夹</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> mkdir -p /data/mysql</span><br><span class=\"line\"><span class=\"meta\">#</span> chown -R mysql.mysql /data/mysql/</span><br></pre></td></tr></table></figure>\n<h5 id=\"2、迁移命令\"><a href=\"#2、迁移命令\" class=\"headerlink\" title=\"2、迁移命令\"></a>2、迁移命令</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> mysql_install_db --user=mysql --basedir=/usr --datadir=/data/mysql</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"3、为避免麻烦，删掉原文件夹-var-lib-mysql\"><a href=\"#3、为避免麻烦，删掉原文件夹-var-lib-mysql\" class=\"headerlink\" title=\"3、为避免麻烦，删掉原文件夹/var/lib/mysql\"></a>3、为避免麻烦，删掉原文件夹/var/lib/mysql</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> rm -rf /var/lib/mysql/*</span><br></pre></td></tr></table></figure>\n<h5 id=\"4、修改-etc-my-cnf配置文件\"><a href=\"#4、修改-etc-my-cnf配置文件\" class=\"headerlink\" title=\"4、修改/etc/my.cnf配置文件\"></a>4、修改/etc/my.cnf配置文件</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">datadir=/data/mysql</span><br></pre></td></tr></table></figure>\n<h5 id=\"5、启动mysql\"><a href=\"#5、启动mysql\" class=\"headerlink\" title=\"5、启动mysql\"></a>5、启动mysql</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> chkconfig mysqld on</span><br><span class=\"line\"><span class=\"meta\">#</span> service mysqld restart</span><br></pre></td></tr></table></figure>"},{"title":"Linux临时和永久关闭selinux","date":"2018-08-02T06:26:00.000Z","description":"Linux临时和永久关闭selinux","_content":"#### 临时关闭：\n```shell\n# setenforce 0\n```\n#### 永久关闭：\n```shell\n# vim /etc/sysconfig/selinux\n```\nSELINUX=enforcing 改为 SELINUX=disabled\n\n重启服务reboot","source":"_posts/Linux临时和永久关闭selinux.md","raw":"---\ntitle: Linux临时和永久关闭selinux\ndate: 2018-08-02 14:26\ntags: Linux\ndescription: Linux临时和永久关闭selinux\n---\n#### 临时关闭：\n```shell\n# setenforce 0\n```\n#### 永久关闭：\n```shell\n# vim /etc/sysconfig/selinux\n```\nSELINUX=enforcing 改为 SELINUX=disabled\n\n重启服务reboot","slug":"Linux临时和永久关闭selinux","published":1,"updated":"2019-02-26T11:47:42.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpv001348dku93g22uq","content":"<h4 id=\"临时关闭：\"><a href=\"#临时关闭：\" class=\"headerlink\" title=\"临时关闭：\"></a>临时关闭：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> setenforce 0</span><br></pre></td></tr></table></figure>\n<h4 id=\"永久关闭：\"><a href=\"#永久关闭：\" class=\"headerlink\" title=\"永久关闭：\"></a>永久关闭：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/sysconfig/selinux</span><br></pre></td></tr></table></figure>\n<p>SELINUX=enforcing 改为 SELINUX=disabled</p>\n<p>重启服务reboot</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"临时关闭：\"><a href=\"#临时关闭：\" class=\"headerlink\" title=\"临时关闭：\"></a>临时关闭：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> setenforce 0</span><br></pre></td></tr></table></figure>\n<h4 id=\"永久关闭：\"><a href=\"#永久关闭：\" class=\"headerlink\" title=\"永久关闭：\"></a>永久关闭：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> vim /etc/sysconfig/selinux</span><br></pre></td></tr></table></figure>\n<p>SELINUX=enforcing 改为 SELINUX=disabled</p>\n<p>重启服务reboot</p>\n"},{"title":"Linux安装OpenResty api 网关 Orange","date":"2018-05-30T08:33:00.000Z","description":"Linux安装OpenResty api 网关 Orange","_content":"#### 1.安装openresty\n```shell\n# yum -y install libuuid-devel pcre-devel openssl-devel gcc-c++ wget\n# mkdir /openresty\n# cd /openresty\n# wget https://openresty.org/download/openresty-1.9.15.1.tar.gz\n# tar -zxf openresty-1.9.15.1.tar.gz\n# cd openresty-1.9.15.1\n# ./configure --with-http_stub_status_module --with-http_v2_module --with-http_ssl_module \n# gmake && gmake install\n# ln -s /usr/local/openresty/nginx/sbin/nginx /usr/sbin/nginx\n# nginx -v\n```\n<!--more-->\n#### 2.创建MySQL数据库并导入数据(脚本在orange/install文件夹下)\n```shell\n# yum -y install mariadb-server\n# mysql -u root\n# CREATE DATABASE orange CHARACTER SET utf8 COLLATE utf8_general_ci;\n# CREATE USER 'orange'@'%' IDENTIFIED BY 'orange';\n# GRANT ALL PRIVILEGES ON orange.* TO 'orange'@'%';\n# FLUSH PRIVILEGES;\n# 最后一定要执行mysql的数据库导入。\n# mysql -u orange -porange -h 10.0.2.15 orange < orange-v0.6.2.sql\n```\n#### 3.安装Orange\n###### 安装之前需要 lor 框架，否则启动有问题。\n```shell\n# yum install -y git\n# git clone https://github.com/sumory/lor.git\n# cd lor\n# make install\n```\n###### 启动并配置 orange 服务\n```shell\n# service iptables stop\n# chkconfig iptables off\n# git clone https://github.com/sumory/orange.git\n# cd orange\n# vim conf/orange.conf\n# sh start.sh\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-2e009409e9d775d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n##### 访问地址: http://IP:9999\n![](https://upload-images.jianshu.io/upload_images/2743275-b87cf50db17bdbf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### Tips:启动不起来查看端口占用情况杀掉其他进程\n```shell\n# netstat -tunlp |grep 80\n```\n","source":"_posts/Linux安装OpenResty api 网关 Orange.md","raw":"---\ntitle: Linux安装OpenResty api 网关 Orange\ndate: 2018-05-30 16:33\ntags: Linux\ndescription: Linux安装OpenResty api 网关 Orange\n---\n#### 1.安装openresty\n```shell\n# yum -y install libuuid-devel pcre-devel openssl-devel gcc-c++ wget\n# mkdir /openresty\n# cd /openresty\n# wget https://openresty.org/download/openresty-1.9.15.1.tar.gz\n# tar -zxf openresty-1.9.15.1.tar.gz\n# cd openresty-1.9.15.1\n# ./configure --with-http_stub_status_module --with-http_v2_module --with-http_ssl_module \n# gmake && gmake install\n# ln -s /usr/local/openresty/nginx/sbin/nginx /usr/sbin/nginx\n# nginx -v\n```\n<!--more-->\n#### 2.创建MySQL数据库并导入数据(脚本在orange/install文件夹下)\n```shell\n# yum -y install mariadb-server\n# mysql -u root\n# CREATE DATABASE orange CHARACTER SET utf8 COLLATE utf8_general_ci;\n# CREATE USER 'orange'@'%' IDENTIFIED BY 'orange';\n# GRANT ALL PRIVILEGES ON orange.* TO 'orange'@'%';\n# FLUSH PRIVILEGES;\n# 最后一定要执行mysql的数据库导入。\n# mysql -u orange -porange -h 10.0.2.15 orange < orange-v0.6.2.sql\n```\n#### 3.安装Orange\n###### 安装之前需要 lor 框架，否则启动有问题。\n```shell\n# yum install -y git\n# git clone https://github.com/sumory/lor.git\n# cd lor\n# make install\n```\n###### 启动并配置 orange 服务\n```shell\n# service iptables stop\n# chkconfig iptables off\n# git clone https://github.com/sumory/orange.git\n# cd orange\n# vim conf/orange.conf\n# sh start.sh\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-2e009409e9d775d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n##### 访问地址: http://IP:9999\n![](https://upload-images.jianshu.io/upload_images/2743275-b87cf50db17bdbf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### Tips:启动不起来查看端口占用情况杀掉其他进程\n```shell\n# netstat -tunlp |grep 80\n```\n","slug":"Linux安装OpenResty api 网关 Orange","published":1,"updated":"2019-02-26T11:47:53.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irpx001648dkld32txy2","content":"<h4 id=\"1-安装openresty\"><a href=\"#1-安装openresty\" class=\"headerlink\" title=\"1.安装openresty\"></a>1.安装openresty</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum -y install libuuid-devel pcre-devel openssl-devel gcc-c++ wget</span><br><span class=\"line\"><span class=\"meta\">#</span> mkdir /openresty</span><br><span class=\"line\"><span class=\"meta\">#</span> cd /openresty</span><br><span class=\"line\"><span class=\"meta\">#</span> wget https://openresty.org/download/openresty-1.9.15.1.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -zxf openresty-1.9.15.1.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> cd openresty-1.9.15.1</span><br><span class=\"line\"><span class=\"meta\">#</span> ./configure --with-http_stub_status_module --with-http_v2_module --with-http_ssl_module </span><br><span class=\"line\"><span class=\"meta\">#</span> gmake &amp;&amp; gmake install</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/openresty/nginx/sbin/nginx /usr/sbin/nginx</span><br><span class=\"line\"><span class=\"meta\">#</span> nginx -v</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"2-创建MySQL数据库并导入数据-脚本在orange-install文件夹下\"><a href=\"#2-创建MySQL数据库并导入数据-脚本在orange-install文件夹下\" class=\"headerlink\" title=\"2.创建MySQL数据库并导入数据(脚本在orange/install文件夹下)\"></a>2.创建MySQL数据库并导入数据(脚本在orange/install文件夹下)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum -y install mariadb-server</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -u root</span><br><span class=\"line\"><span class=\"meta\">#</span> CREATE DATABASE orange CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"><span class=\"meta\">#</span> CREATE USER 'orange'@'%' IDENTIFIED BY 'orange';</span><br><span class=\"line\"><span class=\"meta\">#</span> GRANT ALL PRIVILEGES ON orange.* TO 'orange'@'%';</span><br><span class=\"line\"><span class=\"meta\">#</span> FLUSH PRIVILEGES;</span><br><span class=\"line\"><span class=\"meta\">#</span> 最后一定要执行mysql的数据库导入。</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -u orange -porange -h 10.0.2.15 orange &lt; orange-v0.6.2.sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-安装Orange\"><a href=\"#3-安装Orange\" class=\"headerlink\" title=\"3.安装Orange\"></a>3.安装Orange</h4><h6 id=\"安装之前需要-lor-框架，否则启动有问题。\"><a href=\"#安装之前需要-lor-框架，否则启动有问题。\" class=\"headerlink\" title=\"安装之前需要 lor 框架，否则启动有问题。\"></a>安装之前需要 lor 框架，否则启动有问题。</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y git</span><br><span class=\"line\"><span class=\"meta\">#</span> git clone https://github.com/sumory/lor.git</span><br><span class=\"line\"><span class=\"meta\">#</span> cd lor</span><br><span class=\"line\"><span class=\"meta\">#</span> make install</span><br></pre></td></tr></table></figure>\n<h6 id=\"启动并配置-orange-服务\"><a href=\"#启动并配置-orange-服务\" class=\"headerlink\" title=\"启动并配置 orange 服务\"></a>启动并配置 orange 服务</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> service iptables stop</span><br><span class=\"line\"><span class=\"meta\">#</span> chkconfig iptables off</span><br><span class=\"line\"><span class=\"meta\">#</span> git clone https://github.com/sumory/orange.git</span><br><span class=\"line\"><span class=\"meta\">#</span> cd orange</span><br><span class=\"line\"><span class=\"meta\">#</span> vim conf/orange.conf</span><br><span class=\"line\"><span class=\"meta\">#</span> sh start.sh</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-2e009409e9d775d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h5 id=\"访问地址-http-IP-9999\"><a href=\"#访问地址-http-IP-9999\" class=\"headerlink\" title=\"访问地址: http://IP:9999\"></a>访问地址: <a href=\"http://IP:9999\" target=\"_blank\" rel=\"noopener\">http://IP:9999</a></h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-b87cf50db17bdbf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"Tips-启动不起来查看端口占用情况杀掉其他进程\"><a href=\"#Tips-启动不起来查看端口占用情况杀掉其他进程\" class=\"headerlink\" title=\"Tips:启动不起来查看端口占用情况杀掉其他进程\"></a>Tips:启动不起来查看端口占用情况杀掉其他进程</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> netstat -tunlp |grep 80</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"1-安装openresty\"><a href=\"#1-安装openresty\" class=\"headerlink\" title=\"1.安装openresty\"></a>1.安装openresty</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum -y install libuuid-devel pcre-devel openssl-devel gcc-c++ wget</span><br><span class=\"line\"><span class=\"meta\">#</span> mkdir /openresty</span><br><span class=\"line\"><span class=\"meta\">#</span> cd /openresty</span><br><span class=\"line\"><span class=\"meta\">#</span> wget https://openresty.org/download/openresty-1.9.15.1.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> tar -zxf openresty-1.9.15.1.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> cd openresty-1.9.15.1</span><br><span class=\"line\"><span class=\"meta\">#</span> ./configure --with-http_stub_status_module --with-http_v2_module --with-http_ssl_module </span><br><span class=\"line\"><span class=\"meta\">#</span> gmake &amp;&amp; gmake install</span><br><span class=\"line\"><span class=\"meta\">#</span> ln -s /usr/local/openresty/nginx/sbin/nginx /usr/sbin/nginx</span><br><span class=\"line\"><span class=\"meta\">#</span> nginx -v</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"2-创建MySQL数据库并导入数据-脚本在orange-install文件夹下\"><a href=\"#2-创建MySQL数据库并导入数据-脚本在orange-install文件夹下\" class=\"headerlink\" title=\"2.创建MySQL数据库并导入数据(脚本在orange/install文件夹下)\"></a>2.创建MySQL数据库并导入数据(脚本在orange/install文件夹下)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum -y install mariadb-server</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -u root</span><br><span class=\"line\"><span class=\"meta\">#</span> CREATE DATABASE orange CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"><span class=\"meta\">#</span> CREATE USER 'orange'@'%' IDENTIFIED BY 'orange';</span><br><span class=\"line\"><span class=\"meta\">#</span> GRANT ALL PRIVILEGES ON orange.* TO 'orange'@'%';</span><br><span class=\"line\"><span class=\"meta\">#</span> FLUSH PRIVILEGES;</span><br><span class=\"line\"><span class=\"meta\">#</span> 最后一定要执行mysql的数据库导入。</span><br><span class=\"line\"><span class=\"meta\">#</span> mysql -u orange -porange -h 10.0.2.15 orange &lt; orange-v0.6.2.sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-安装Orange\"><a href=\"#3-安装Orange\" class=\"headerlink\" title=\"3.安装Orange\"></a>3.安装Orange</h4><h6 id=\"安装之前需要-lor-框架，否则启动有问题。\"><a href=\"#安装之前需要-lor-框架，否则启动有问题。\" class=\"headerlink\" title=\"安装之前需要 lor 框架，否则启动有问题。\"></a>安装之前需要 lor 框架，否则启动有问题。</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> yum install -y git</span><br><span class=\"line\"><span class=\"meta\">#</span> git clone https://github.com/sumory/lor.git</span><br><span class=\"line\"><span class=\"meta\">#</span> cd lor</span><br><span class=\"line\"><span class=\"meta\">#</span> make install</span><br></pre></td></tr></table></figure>\n<h6 id=\"启动并配置-orange-服务\"><a href=\"#启动并配置-orange-服务\" class=\"headerlink\" title=\"启动并配置 orange 服务\"></a>启动并配置 orange 服务</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> service iptables stop</span><br><span class=\"line\"><span class=\"meta\">#</span> chkconfig iptables off</span><br><span class=\"line\"><span class=\"meta\">#</span> git clone https://github.com/sumory/orange.git</span><br><span class=\"line\"><span class=\"meta\">#</span> cd orange</span><br><span class=\"line\"><span class=\"meta\">#</span> vim conf/orange.conf</span><br><span class=\"line\"><span class=\"meta\">#</span> sh start.sh</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-2e009409e9d775d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h5 id=\"访问地址-http-IP-9999\"><a href=\"#访问地址-http-IP-9999\" class=\"headerlink\" title=\"访问地址: http://IP:9999\"></a>访问地址: <a href=\"http://IP:9999\" target=\"_blank\" rel=\"noopener\">http://IP:9999</a></h5><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-b87cf50db17bdbf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"Tips-启动不起来查看端口占用情况杀掉其他进程\"><a href=\"#Tips-启动不起来查看端口占用情况杀掉其他进程\" class=\"headerlink\" title=\"Tips:启动不起来查看端口占用情况杀掉其他进程\"></a>Tips:启动不起来查看端口占用情况杀掉其他进程</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> netstat -tunlp |grep 80</span><br></pre></td></tr></table></figure>"},{"title":"Linux搭建GitLab并汉化","description":"Linux搭建GitLab并汉化","date":"2018-06-04T08:59:52.000Z","_content":"### 一、环境准备\n##### 1.1 下载wget\n\t# yum install -y vim\n\t# yum install -y wget\n\t# cd /usr/local\n\t# wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n##### 1.2 关闭防火墙\n\t# service iptables stop\n\t# chkconfig iptables off\n<!--more-->\n### 二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\n##### 2.1 安装Git\n\t# yum install -y git\n ##### 2.2 克隆获取汉化版本库\n\t# cd /usr/local\n\t# git clone https://gitlab.com/xhang/gitlab.git\n### 三、部署社区版GitLab\n##### 3.1 安装GitLab的依赖项\n\t# yum -y install policycoreutils openssh-server openssh-clients postfix cronie policycoreutils-python\n##### 3.2 启动postfix，并设置为开机启动 \n\t# service postfix start\n\t# chkconfig postfix on\n##### 3.3 安装rpm包\n\t# cd /usr/local\n\t# rpm -ivh gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n##### 3.4 修改配置文件gitlab.rb\n\t# vim /etc/gitlab/gitlab.rb\n将external_url变量的地址修改为gitlab所在centos的ip地址\n修改GitLab默认端口\n\n\tunicorn['port'] = '9092'\n![](https://upload-images.jianshu.io/upload_images/2743275-a0a401f33c7b08e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t因为修改了配置文件，故需要重新加载配置内容。\n\t# gitlab-ctl reconfigure\n\t# gitlab-ctl restart\n### 四、覆盖汉化包\n##### 4.1 停止GitLab服务\n\t# gitlab-ctl stop\n##### 4.2 比较汉化标签和原标签，导出 patch 用的 diff 文件到/root下 \n\t# cd /usr/local/gitlab\n\t# git diff v10.0.2 v10.0.2-zh > ../10.0.2-zh.diff\n##### 4.3 将10.0.2-zh.diff作为补丁更新到GitLab中 \n\t# cd /usr/local\n\t# yum install patch -y\n\t# patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 < 10.0.2-zh.diff\n\tTips:重启GitLab\n\t# gitlab-ctl reconfigure\n\t# gitlab-ctl restart","source":"_posts/Linux搭建GitLab并汉化.md","raw":"title: Linux搭建GitLab并汉化\ntags: \n  - Linux\ndescription: Linux搭建GitLab并汉化\ndate: 2018-06-04 16:59:52\n---\n### 一、环境准备\n##### 1.1 下载wget\n\t# yum install -y vim\n\t# yum install -y wget\n\t# cd /usr/local\n\t# wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n##### 1.2 关闭防火墙\n\t# service iptables stop\n\t# chkconfig iptables off\n<!--more-->\n### 二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\n##### 2.1 安装Git\n\t# yum install -y git\n ##### 2.2 克隆获取汉化版本库\n\t# cd /usr/local\n\t# git clone https://gitlab.com/xhang/gitlab.git\n### 三、部署社区版GitLab\n##### 3.1 安装GitLab的依赖项\n\t# yum -y install policycoreutils openssh-server openssh-clients postfix cronie policycoreutils-python\n##### 3.2 启动postfix，并设置为开机启动 \n\t# service postfix start\n\t# chkconfig postfix on\n##### 3.3 安装rpm包\n\t# cd /usr/local\n\t# rpm -ivh gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n##### 3.4 修改配置文件gitlab.rb\n\t# vim /etc/gitlab/gitlab.rb\n将external_url变量的地址修改为gitlab所在centos的ip地址\n修改GitLab默认端口\n\n\tunicorn['port'] = '9092'\n![](https://upload-images.jianshu.io/upload_images/2743275-a0a401f33c7b08e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t因为修改了配置文件，故需要重新加载配置内容。\n\t# gitlab-ctl reconfigure\n\t# gitlab-ctl restart\n### 四、覆盖汉化包\n##### 4.1 停止GitLab服务\n\t# gitlab-ctl stop\n##### 4.2 比较汉化标签和原标签，导出 patch 用的 diff 文件到/root下 \n\t# cd /usr/local/gitlab\n\t# git diff v10.0.2 v10.0.2-zh > ../10.0.2-zh.diff\n##### 4.3 将10.0.2-zh.diff作为补丁更新到GitLab中 \n\t# cd /usr/local\n\t# yum install patch -y\n\t# patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 < 10.0.2-zh.diff\n\tTips:重启GitLab\n\t# gitlab-ctl reconfigure\n\t# gitlab-ctl restart","slug":"Linux搭建GitLab并汉化","published":1,"updated":"2018-06-05T11:40:32.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irq0001848dkvejq8mhe","content":"<h3 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h3><h5 id=\"1-1-下载wget\"><a href=\"#1-1-下载wget\" class=\"headerlink\" title=\"1.1 下载wget\"></a>1.1 下载wget</h5><pre><code># yum install -y vim\n# yum install -y wget\n# cd /usr/local\n# wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n</code></pre><h5 id=\"1-2-关闭防火墙\"><a href=\"#1-2-关闭防火墙\" class=\"headerlink\" title=\"1.2 关闭防火墙\"></a>1.2 关闭防火墙</h5><pre><code># service iptables stop\n# chkconfig iptables off\n</code></pre><a id=\"more\"></a>\n<h3 id=\"二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\"><a href=\"#二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\" class=\"headerlink\" title=\"二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\"></a>二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）</h3><h5 id=\"2-1-安装Git\"><a href=\"#2-1-安装Git\" class=\"headerlink\" title=\"2.1 安装Git\"></a>2.1 安装Git</h5><pre><code># yum install -y git\n</code></pre><h5 id=\"2-2-克隆获取汉化版本库\"><a href=\"#2-2-克隆获取汉化版本库\" class=\"headerlink\" title=\"2.2 克隆获取汉化版本库\"></a>2.2 克隆获取汉化版本库</h5><pre><code># cd /usr/local\n# git clone https://gitlab.com/xhang/gitlab.git\n</code></pre><h3 id=\"三、部署社区版GitLab\"><a href=\"#三、部署社区版GitLab\" class=\"headerlink\" title=\"三、部署社区版GitLab\"></a>三、部署社区版GitLab</h3><h5 id=\"3-1-安装GitLab的依赖项\"><a href=\"#3-1-安装GitLab的依赖项\" class=\"headerlink\" title=\"3.1 安装GitLab的依赖项\"></a>3.1 安装GitLab的依赖项</h5><pre><code># yum -y install policycoreutils openssh-server openssh-clients postfix cronie policycoreutils-python\n</code></pre><h5 id=\"3-2-启动postfix，并设置为开机启动\"><a href=\"#3-2-启动postfix，并设置为开机启动\" class=\"headerlink\" title=\"3.2 启动postfix，并设置为开机启动\"></a>3.2 启动postfix，并设置为开机启动</h5><pre><code># service postfix start\n# chkconfig postfix on\n</code></pre><h5 id=\"3-3-安装rpm包\"><a href=\"#3-3-安装rpm包\" class=\"headerlink\" title=\"3.3 安装rpm包\"></a>3.3 安装rpm包</h5><pre><code># cd /usr/local\n# rpm -ivh gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n</code></pre><h5 id=\"3-4-修改配置文件gitlab-rb\"><a href=\"#3-4-修改配置文件gitlab-rb\" class=\"headerlink\" title=\"3.4 修改配置文件gitlab.rb\"></a>3.4 修改配置文件gitlab.rb</h5><pre><code># vim /etc/gitlab/gitlab.rb\n</code></pre><p>将external_url变量的地址修改为gitlab所在centos的ip地址<br>修改GitLab默认端口</p>\n<pre><code>unicorn[&apos;port&apos;] = &apos;9092&apos;\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a0a401f33c7b08e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code>因为修改了配置文件，故需要重新加载配置内容。\n# gitlab-ctl reconfigure\n# gitlab-ctl restart\n</code></pre><h3 id=\"四、覆盖汉化包\"><a href=\"#四、覆盖汉化包\" class=\"headerlink\" title=\"四、覆盖汉化包\"></a>四、覆盖汉化包</h3><h5 id=\"4-1-停止GitLab服务\"><a href=\"#4-1-停止GitLab服务\" class=\"headerlink\" title=\"4.1 停止GitLab服务\"></a>4.1 停止GitLab服务</h5><pre><code># gitlab-ctl stop\n</code></pre><h5 id=\"4-2-比较汉化标签和原标签，导出-patch-用的-diff-文件到-root下\"><a href=\"#4-2-比较汉化标签和原标签，导出-patch-用的-diff-文件到-root下\" class=\"headerlink\" title=\"4.2 比较汉化标签和原标签，导出 patch 用的 diff 文件到/root下\"></a>4.2 比较汉化标签和原标签，导出 patch 用的 diff 文件到/root下</h5><pre><code># cd /usr/local/gitlab\n# git diff v10.0.2 v10.0.2-zh &gt; ../10.0.2-zh.diff\n</code></pre><h5 id=\"4-3-将10-0-2-zh-diff作为补丁更新到GitLab中\"><a href=\"#4-3-将10-0-2-zh-diff作为补丁更新到GitLab中\" class=\"headerlink\" title=\"4.3 将10.0.2-zh.diff作为补丁更新到GitLab中\"></a>4.3 将10.0.2-zh.diff作为补丁更新到GitLab中</h5><pre><code># cd /usr/local\n# yum install patch -y\n# patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 &lt; 10.0.2-zh.diff\nTips:重启GitLab\n# gitlab-ctl reconfigure\n# gitlab-ctl restart\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h3><h5 id=\"1-1-下载wget\"><a href=\"#1-1-下载wget\" class=\"headerlink\" title=\"1.1 下载wget\"></a>1.1 下载wget</h5><pre><code># yum install -y vim\n# yum install -y wget\n# cd /usr/local\n# wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el6/gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n</code></pre><h5 id=\"1-2-关闭防火墙\"><a href=\"#1-2-关闭防火墙\" class=\"headerlink\" title=\"1.2 关闭防火墙\"></a>1.2 关闭防火墙</h5><pre><code># service iptables stop\n# chkconfig iptables off\n</code></pre>","more":"<h3 id=\"二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\"><a href=\"#二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\" class=\"headerlink\" title=\"二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）\"></a>二、获取GitLab汉化包（要部署非汉化版，可以跳过这一块内容）</h3><h5 id=\"2-1-安装Git\"><a href=\"#2-1-安装Git\" class=\"headerlink\" title=\"2.1 安装Git\"></a>2.1 安装Git</h5><pre><code># yum install -y git\n</code></pre><h5 id=\"2-2-克隆获取汉化版本库\"><a href=\"#2-2-克隆获取汉化版本库\" class=\"headerlink\" title=\"2.2 克隆获取汉化版本库\"></a>2.2 克隆获取汉化版本库</h5><pre><code># cd /usr/local\n# git clone https://gitlab.com/xhang/gitlab.git\n</code></pre><h3 id=\"三、部署社区版GitLab\"><a href=\"#三、部署社区版GitLab\" class=\"headerlink\" title=\"三、部署社区版GitLab\"></a>三、部署社区版GitLab</h3><h5 id=\"3-1-安装GitLab的依赖项\"><a href=\"#3-1-安装GitLab的依赖项\" class=\"headerlink\" title=\"3.1 安装GitLab的依赖项\"></a>3.1 安装GitLab的依赖项</h5><pre><code># yum -y install policycoreutils openssh-server openssh-clients postfix cronie policycoreutils-python\n</code></pre><h5 id=\"3-2-启动postfix，并设置为开机启动\"><a href=\"#3-2-启动postfix，并设置为开机启动\" class=\"headerlink\" title=\"3.2 启动postfix，并设置为开机启动\"></a>3.2 启动postfix，并设置为开机启动</h5><pre><code># service postfix start\n# chkconfig postfix on\n</code></pre><h5 id=\"3-3-安装rpm包\"><a href=\"#3-3-安装rpm包\" class=\"headerlink\" title=\"3.3 安装rpm包\"></a>3.3 安装rpm包</h5><pre><code># cd /usr/local\n# rpm -ivh gitlab-ce-10.0.2-ce.0.el6.x86_64.rpm\n</code></pre><h5 id=\"3-4-修改配置文件gitlab-rb\"><a href=\"#3-4-修改配置文件gitlab-rb\" class=\"headerlink\" title=\"3.4 修改配置文件gitlab.rb\"></a>3.4 修改配置文件gitlab.rb</h5><pre><code># vim /etc/gitlab/gitlab.rb\n</code></pre><p>将external_url变量的地址修改为gitlab所在centos的ip地址<br>修改GitLab默认端口</p>\n<pre><code>unicorn[&apos;port&apos;] = &apos;9092&apos;\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-a0a401f33c7b08e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<pre><code>因为修改了配置文件，故需要重新加载配置内容。\n# gitlab-ctl reconfigure\n# gitlab-ctl restart\n</code></pre><h3 id=\"四、覆盖汉化包\"><a href=\"#四、覆盖汉化包\" class=\"headerlink\" title=\"四、覆盖汉化包\"></a>四、覆盖汉化包</h3><h5 id=\"4-1-停止GitLab服务\"><a href=\"#4-1-停止GitLab服务\" class=\"headerlink\" title=\"4.1 停止GitLab服务\"></a>4.1 停止GitLab服务</h5><pre><code># gitlab-ctl stop\n</code></pre><h5 id=\"4-2-比较汉化标签和原标签，导出-patch-用的-diff-文件到-root下\"><a href=\"#4-2-比较汉化标签和原标签，导出-patch-用的-diff-文件到-root下\" class=\"headerlink\" title=\"4.2 比较汉化标签和原标签，导出 patch 用的 diff 文件到/root下\"></a>4.2 比较汉化标签和原标签，导出 patch 用的 diff 文件到/root下</h5><pre><code># cd /usr/local/gitlab\n# git diff v10.0.2 v10.0.2-zh &gt; ../10.0.2-zh.diff\n</code></pre><h5 id=\"4-3-将10-0-2-zh-diff作为补丁更新到GitLab中\"><a href=\"#4-3-将10-0-2-zh-diff作为补丁更新到GitLab中\" class=\"headerlink\" title=\"4.3 将10.0.2-zh.diff作为补丁更新到GitLab中\"></a>4.3 将10.0.2-zh.diff作为补丁更新到GitLab中</h5><pre><code># cd /usr/local\n# yum install patch -y\n# patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 &lt; 10.0.2-zh.diff\nTips:重启GitLab\n# gitlab-ctl reconfigure\n# gitlab-ctl restart\n</code></pre>"},{"title":"Linux查看硬件信息","date":"2018-03-17T08:06:43.000Z","comments":1,"top":1,"description":"Linux查看硬件信息","_content":"##### 系统\n\n\t# uname -a               # 查看内核/操作系统/CPU信息\n\t# head -n 1 /etc/issue   # 查看操作系统版本\n\t# cat /proc/cpuinfo      # 查看CPU信息\n\t# hostname               # 查看计算机名\n\t# lspci -tv              # 列出所有PCI设备（yum install pciutils）\n\t# lsusb -tv              # 列出所有USB设备\n\t# lsmod                  # 列出加载的内核模块\n\t# env                    # 查看环境变量  \n<!--more-->\n##### 资源\n\n\t# free -m                # 查看内存使用量和交换区使用量\n\t# df -h                  # 查看各分区使用情况\n\t# du -sh <目录名>        # 查看指定目录的大小\n\t# grep MemTotal /proc/meminfo   # 查看内存总量\n\t# grep MemFree /proc/meminfo    # 查看空闲内存量\n\t# uptime                 # 查看系统运行时间、用户数、负载\n\t# cat /proc/loadavg      # 查看系统负载\n\n##### 磁盘和分区  \n\t# mount | column -t      # 查看挂接的分区状态\n\t# fdisk -l               # 查看所有分区\n\t# swapon -s              # 查看所有交换分区\n\t# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)\n\t# dmesg | grep IDE       # 查看启动时IDE设备检测状况\n\n\n#####   网络\n\t# ifconfig               # 查看所有网络接口的属性\n\t# iptables -L            # 查看防火墙设置\n\t# route -n               # 查看路由表\n\t# netstat -lntp          # 查看所有监听端口\n\t# netstat -antp          # 查看所有已经建立的连接\n\t# netstat -s             # 查看网络统计信息\n\n#####   进程\n\t# ps -ef                 # 查看所有进程\n\t# top                    # 实时显示进程状态\n\n#####   用户  \n\t# w                      # 查看活动用户\n\t# id <用户名>            # 查看指定用户信息\n\t# last                   # 查看用户登录日志\n\t# cut -d: -f1 /etc/passwd   # 查看系统所有用户\n\t# cut -d: -f1 /etc/group    # 查看系统所有组\n\t# crontab -l             # 查看当前用户的计划任务  \n#####   服务  \n\t# chkconfig --list       # 列出所有系统服务\n\t# chkconfig --list | grep on    # 列出所有启动的系统服务  \n#####   程序  \n\t# rpm -qa                # 查看所有安装的软件包  \n#####   查看网卡型号  \n\t# lspci | grep Ethernet  \n#####   查看内存和cpu最直接最常用的命令\n\t# free\n\t# cat /proc/cpuinfo   \n#####\t查看硬盘信息（查看硬盘型号和硬盘序列号）  \n\t# df -h  \n","source":"_posts/Linux查看硬件信息.md","raw":"---\ntitle: \"Linux查看硬件信息\"\ndate: 2018-03-17 16:06:43\ntags: Linux\ncomments: true\ntop: 1\ndescription: \"Linux查看硬件信息\"\n---\n##### 系统\n\n\t# uname -a               # 查看内核/操作系统/CPU信息\n\t# head -n 1 /etc/issue   # 查看操作系统版本\n\t# cat /proc/cpuinfo      # 查看CPU信息\n\t# hostname               # 查看计算机名\n\t# lspci -tv              # 列出所有PCI设备（yum install pciutils）\n\t# lsusb -tv              # 列出所有USB设备\n\t# lsmod                  # 列出加载的内核模块\n\t# env                    # 查看环境变量  \n<!--more-->\n##### 资源\n\n\t# free -m                # 查看内存使用量和交换区使用量\n\t# df -h                  # 查看各分区使用情况\n\t# du -sh <目录名>        # 查看指定目录的大小\n\t# grep MemTotal /proc/meminfo   # 查看内存总量\n\t# grep MemFree /proc/meminfo    # 查看空闲内存量\n\t# uptime                 # 查看系统运行时间、用户数、负载\n\t# cat /proc/loadavg      # 查看系统负载\n\n##### 磁盘和分区  \n\t# mount | column -t      # 查看挂接的分区状态\n\t# fdisk -l               # 查看所有分区\n\t# swapon -s              # 查看所有交换分区\n\t# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)\n\t# dmesg | grep IDE       # 查看启动时IDE设备检测状况\n\n\n#####   网络\n\t# ifconfig               # 查看所有网络接口的属性\n\t# iptables -L            # 查看防火墙设置\n\t# route -n               # 查看路由表\n\t# netstat -lntp          # 查看所有监听端口\n\t# netstat -antp          # 查看所有已经建立的连接\n\t# netstat -s             # 查看网络统计信息\n\n#####   进程\n\t# ps -ef                 # 查看所有进程\n\t# top                    # 实时显示进程状态\n\n#####   用户  \n\t# w                      # 查看活动用户\n\t# id <用户名>            # 查看指定用户信息\n\t# last                   # 查看用户登录日志\n\t# cut -d: -f1 /etc/passwd   # 查看系统所有用户\n\t# cut -d: -f1 /etc/group    # 查看系统所有组\n\t# crontab -l             # 查看当前用户的计划任务  \n#####   服务  \n\t# chkconfig --list       # 列出所有系统服务\n\t# chkconfig --list | grep on    # 列出所有启动的系统服务  \n#####   程序  \n\t# rpm -qa                # 查看所有安装的软件包  \n#####   查看网卡型号  \n\t# lspci | grep Ethernet  \n#####   查看内存和cpu最直接最常用的命令\n\t# free\n\t# cat /proc/cpuinfo   \n#####\t查看硬盘信息（查看硬盘型号和硬盘序列号）  \n\t# df -h  \n","slug":"Linux查看硬件信息","published":1,"updated":"2019-03-14T02:32:09.027Z","_id":"cjt58irq3001a48dkuvcxscyx","layout":"post","photos":[],"link":"","content":"<h5 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h5><pre><code># uname -a               # 查看内核/操作系统/CPU信息\n# head -n 1 /etc/issue   # 查看操作系统版本\n# cat /proc/cpuinfo      # 查看CPU信息\n# hostname               # 查看计算机名\n# lspci -tv              # 列出所有PCI设备（yum install pciutils）\n# lsusb -tv              # 列出所有USB设备\n# lsmod                  # 列出加载的内核模块\n# env                    # 查看环境变量  \n</code></pre><a id=\"more\"></a>\n<h5 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h5><pre><code># free -m                # 查看内存使用量和交换区使用量\n# df -h                  # 查看各分区使用情况\n# du -sh &lt;目录名&gt;        # 查看指定目录的大小\n# grep MemTotal /proc/meminfo   # 查看内存总量\n# grep MemFree /proc/meminfo    # 查看空闲内存量\n# uptime                 # 查看系统运行时间、用户数、负载\n# cat /proc/loadavg      # 查看系统负载\n</code></pre><h5 id=\"磁盘和分区\"><a href=\"#磁盘和分区\" class=\"headerlink\" title=\"磁盘和分区\"></a>磁盘和分区</h5><pre><code># mount | column -t      # 查看挂接的分区状态\n# fdisk -l               # 查看所有分区\n# swapon -s              # 查看所有交换分区\n# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)\n# dmesg | grep IDE       # 查看启动时IDE设备检测状况\n</code></pre><h5 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h5><pre><code># ifconfig               # 查看所有网络接口的属性\n# iptables -L            # 查看防火墙设置\n# route -n               # 查看路由表\n# netstat -lntp          # 查看所有监听端口\n# netstat -antp          # 查看所有已经建立的连接\n# netstat -s             # 查看网络统计信息\n</code></pre><h5 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h5><pre><code># ps -ef                 # 查看所有进程\n# top                    # 实时显示进程状态\n</code></pre><h5 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h5><pre><code># w                      # 查看活动用户\n# id &lt;用户名&gt;            # 查看指定用户信息\n# last                   # 查看用户登录日志\n# cut -d: -f1 /etc/passwd   # 查看系统所有用户\n# cut -d: -f1 /etc/group    # 查看系统所有组\n# crontab -l             # 查看当前用户的计划任务  \n</code></pre><h5 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h5><pre><code># chkconfig --list       # 列出所有系统服务\n# chkconfig --list | grep on    # 列出所有启动的系统服务  \n</code></pre><h5 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h5><pre><code># rpm -qa                # 查看所有安装的软件包  \n</code></pre><h5 id=\"查看网卡型号\"><a href=\"#查看网卡型号\" class=\"headerlink\" title=\"查看网卡型号\"></a>查看网卡型号</h5><pre><code># lspci | grep Ethernet  \n</code></pre><h5 id=\"查看内存和cpu最直接最常用的命令\"><a href=\"#查看内存和cpu最直接最常用的命令\" class=\"headerlink\" title=\"查看内存和cpu最直接最常用的命令\"></a>查看内存和cpu最直接最常用的命令</h5><pre><code># free\n# cat /proc/cpuinfo   \n</code></pre><h5 id=\"查看硬盘信息（查看硬盘型号和硬盘序列号）\"><a href=\"#查看硬盘信息（查看硬盘型号和硬盘序列号）\" class=\"headerlink\" title=\"查看硬盘信息（查看硬盘型号和硬盘序列号）\"></a>查看硬盘信息（查看硬盘型号和硬盘序列号）</h5><pre><code># df -h  \n</code></pre>","site":{"data":{}},"excerpt":"<h5 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h5><pre><code># uname -a               # 查看内核/操作系统/CPU信息\n# head -n 1 /etc/issue   # 查看操作系统版本\n# cat /proc/cpuinfo      # 查看CPU信息\n# hostname               # 查看计算机名\n# lspci -tv              # 列出所有PCI设备（yum install pciutils）\n# lsusb -tv              # 列出所有USB设备\n# lsmod                  # 列出加载的内核模块\n# env                    # 查看环境变量  \n</code></pre>","more":"<h5 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h5><pre><code># free -m                # 查看内存使用量和交换区使用量\n# df -h                  # 查看各分区使用情况\n# du -sh &lt;目录名&gt;        # 查看指定目录的大小\n# grep MemTotal /proc/meminfo   # 查看内存总量\n# grep MemFree /proc/meminfo    # 查看空闲内存量\n# uptime                 # 查看系统运行时间、用户数、负载\n# cat /proc/loadavg      # 查看系统负载\n</code></pre><h5 id=\"磁盘和分区\"><a href=\"#磁盘和分区\" class=\"headerlink\" title=\"磁盘和分区\"></a>磁盘和分区</h5><pre><code># mount | column -t      # 查看挂接的分区状态\n# fdisk -l               # 查看所有分区\n# swapon -s              # 查看所有交换分区\n# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)\n# dmesg | grep IDE       # 查看启动时IDE设备检测状况\n</code></pre><h5 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h5><pre><code># ifconfig               # 查看所有网络接口的属性\n# iptables -L            # 查看防火墙设置\n# route -n               # 查看路由表\n# netstat -lntp          # 查看所有监听端口\n# netstat -antp          # 查看所有已经建立的连接\n# netstat -s             # 查看网络统计信息\n</code></pre><h5 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h5><pre><code># ps -ef                 # 查看所有进程\n# top                    # 实时显示进程状态\n</code></pre><h5 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h5><pre><code># w                      # 查看活动用户\n# id &lt;用户名&gt;            # 查看指定用户信息\n# last                   # 查看用户登录日志\n# cut -d: -f1 /etc/passwd   # 查看系统所有用户\n# cut -d: -f1 /etc/group    # 查看系统所有组\n# crontab -l             # 查看当前用户的计划任务  \n</code></pre><h5 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h5><pre><code># chkconfig --list       # 列出所有系统服务\n# chkconfig --list | grep on    # 列出所有启动的系统服务  \n</code></pre><h5 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h5><pre><code># rpm -qa                # 查看所有安装的软件包  \n</code></pre><h5 id=\"查看网卡型号\"><a href=\"#查看网卡型号\" class=\"headerlink\" title=\"查看网卡型号\"></a>查看网卡型号</h5><pre><code># lspci | grep Ethernet  \n</code></pre><h5 id=\"查看内存和cpu最直接最常用的命令\"><a href=\"#查看内存和cpu最直接最常用的命令\" class=\"headerlink\" title=\"查看内存和cpu最直接最常用的命令\"></a>查看内存和cpu最直接最常用的命令</h5><pre><code># free\n# cat /proc/cpuinfo   \n</code></pre><h5 id=\"查看硬盘信息（查看硬盘型号和硬盘序列号）\"><a href=\"#查看硬盘信息（查看硬盘型号和硬盘序列号）\" class=\"headerlink\" title=\"查看硬盘信息（查看硬盘型号和硬盘序列号）\"></a>查看硬盘信息（查看硬盘型号和硬盘序列号）</h5><pre><code># df -h  \n</code></pre>"},{"title":"Linux配置SSH Key到GitHub","date":"2018-04-17T06:48:40.000Z","_content":"#### 1.生成SSH Key\n首先检查下本机是否已经安装了SSH，在终端输入ssh即可： \n![](https://upload-images.jianshu.io/upload_images/2743275-d5ee041fc6a3b53e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n如果没有安装进行yum安装\n\n<!--more-->\n\n\t# yum -y install openssh-clients\n\n###### 接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\n![](https://upload-images.jianshu.io/upload_images/2743275-7398d3f9f1eef72c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\nid_rsa.pub为公钥，id_rsa为私钥，它们都是隐藏文件。\n那么如何查看它们的内容呢？只需要继续执行以下两条命令即可。\n\n\t# cd .ssh/\n\t# cat id_rsa.pub\n![](https://upload-images.jianshu.io/upload_images/2743275-2c142d50f896e48b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n#### 2.添加SSH Key到GitHub上\n![](https://upload-images.jianshu.io/upload_images/2743275-062ea02946eb9af5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n接着执行下面操作： \n![](https://upload-images.jianshu.io/upload_images/2743275-d2a6a8697131e8d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n点击New SSH Key按钮后进行Key的填写操作，完成SSH Key的添加。如下图： \n![](https://upload-images.jianshu.io/upload_images/2743275-1a8f4cd790d9d667.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-cdbdf7fd81c8ac11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n添加SSH Key成功之后，继续输入命令进行测试。\n\n\t# ssh -T git@github.com\n![](https://upload-images.jianshu.io/upload_images/2743275-5310d1ab738cb79a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n出现上图结果则说明添加SSH Key成功。","source":"_posts/Linux配置SSH-Key到GitHub.md","raw":"title: Linux配置SSH Key到GitHub\ntags: Linux\ndate: 2018-04-17 14:48:40\n---\n#### 1.生成SSH Key\n首先检查下本机是否已经安装了SSH，在终端输入ssh即可： \n![](https://upload-images.jianshu.io/upload_images/2743275-d5ee041fc6a3b53e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n如果没有安装进行yum安装\n\n<!--more-->\n\n\t# yum -y install openssh-clients\n\n###### 接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\n![](https://upload-images.jianshu.io/upload_images/2743275-7398d3f9f1eef72c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\nid_rsa.pub为公钥，id_rsa为私钥，它们都是隐藏文件。\n那么如何查看它们的内容呢？只需要继续执行以下两条命令即可。\n\n\t# cd .ssh/\n\t# cat id_rsa.pub\n![](https://upload-images.jianshu.io/upload_images/2743275-2c142d50f896e48b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n#### 2.添加SSH Key到GitHub上\n![](https://upload-images.jianshu.io/upload_images/2743275-062ea02946eb9af5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n接着执行下面操作： \n![](https://upload-images.jianshu.io/upload_images/2743275-d2a6a8697131e8d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n点击New SSH Key按钮后进行Key的填写操作，完成SSH Key的添加。如下图： \n![](https://upload-images.jianshu.io/upload_images/2743275-1a8f4cd790d9d667.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![](https://upload-images.jianshu.io/upload_images/2743275-cdbdf7fd81c8ac11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n添加SSH Key成功之后，继续输入命令进行测试。\n\n\t# ssh -T git@github.com\n![](https://upload-images.jianshu.io/upload_images/2743275-5310d1ab738cb79a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n出现上图结果则说明添加SSH Key成功。","slug":"Linux配置SSH-Key到GitHub","published":1,"updated":"2018-06-05T11:40:32.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irq5001c48dk0frpv841","content":"<h4 id=\"1-生成SSH-Key\"><a href=\"#1-生成SSH-Key\" class=\"headerlink\" title=\"1.生成SSH Key\"></a>1.生成SSH Key</h4><p>首先检查下本机是否已经安装了SSH，在终端输入ssh即可：<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d5ee041fc6a3b53e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>如果没有安装进行yum安装</p>\n<a id=\"more\"></a>\n<pre><code># yum -y install openssh-clients\n</code></pre><h6 id=\"接下来就是生成ssh-key了，输入ssh-keygen-t-rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\"><a href=\"#接下来就是生成ssh-key了，输入ssh-keygen-t-rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\" class=\"headerlink\" title=\"接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\"></a>接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。</h6><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-7398d3f9f1eef72c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>id_rsa.pub为公钥，id_rsa为私钥，它们都是隐藏文件。<br>那么如何查看它们的内容呢？只需要继续执行以下两条命令即可。</p>\n<pre><code># cd .ssh/\n# cat id_rsa.pub\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-2c142d50f896e48b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"2-添加SSH-Key到GitHub上\"><a href=\"#2-添加SSH-Key到GitHub上\" class=\"headerlink\" title=\"2.添加SSH Key到GitHub上\"></a>2.添加SSH Key到GitHub上</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-062ea02946eb9af5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>接着执行下面操作：<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d2a6a8697131e8d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>点击New SSH Key按钮后进行Key的填写操作，完成SSH Key的添加。如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1a8f4cd790d9d667.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-cdbdf7fd81c8ac11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>添加SSH Key成功之后，继续输入命令进行测试。</p>\n<pre><code># ssh -T git@github.com\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5310d1ab738cb79a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>出现上图结果则说明添加SSH Key成功。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"1-生成SSH-Key\"><a href=\"#1-生成SSH-Key\" class=\"headerlink\" title=\"1.生成SSH Key\"></a>1.生成SSH Key</h4><p>首先检查下本机是否已经安装了SSH，在终端输入ssh即可：<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d5ee041fc6a3b53e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>如果没有安装进行yum安装</p>","more":"<pre><code># yum -y install openssh-clients\n</code></pre><h6 id=\"接下来就是生成ssh-key了，输入ssh-keygen-t-rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\"><a href=\"#接下来就是生成ssh-key了，输入ssh-keygen-t-rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\" class=\"headerlink\" title=\"接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。\"></a>接下来就是生成ssh key了，输入ssh-keygen -t rsa，然后连续按回车键三次（注意：千万不要输入密码！）。</h6><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-7398d3f9f1eef72c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>id_rsa.pub为公钥，id_rsa为私钥，它们都是隐藏文件。<br>那么如何查看它们的内容呢？只需要继续执行以下两条命令即可。</p>\n<pre><code># cd .ssh/\n# cat id_rsa.pub\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-2c142d50f896e48b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h4 id=\"2-添加SSH-Key到GitHub上\"><a href=\"#2-添加SSH-Key到GitHub上\" class=\"headerlink\" title=\"2.添加SSH Key到GitHub上\"></a>2.添加SSH Key到GitHub上</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-062ea02946eb9af5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>接着执行下面操作：<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-d2a6a8697131e8d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>点击New SSH Key按钮后进行Key的填写操作，完成SSH Key的添加。如下图：<br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-1a8f4cd790d9d667.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br><img src=\"https://upload-images.jianshu.io/upload_images/2743275-cdbdf7fd81c8ac11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"><br>添加SSH Key成功之后，继续输入命令进行测试。</p>\n<pre><code># ssh -T git@github.com\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5310d1ab738cb79a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>出现上图结果则说明添加SSH Key成功。</p>"},{"title":"SpringBoot 2.0 更新记录","date":"2018-08-21T02:43:00.000Z","description":"SpringBoot 2.0 更新记录","_content":"#### 1、Spring Boot 2.0 要求Java 版本必须8以上\n#### 2、配置属性的重定位\n| Old property | New property |\n| ------------ | ------------ |\n| server.context-path | server.servlet.context-path |\n| server.context-parameters.* | server.servlet.context-parameters.* |\n| server.jsp.class-name | server.servlet.jsp.class-name |\n| server.jsp.init-parameters.* | server.servlet.jsp.init-parameters.* |\n| server.jsp.registered | server.servlet.jsp.registered |\n| server.servlet-path | server.servlet.path |\n","source":"_posts/SpringBoot 2.0 更新记录.md","raw":"---\ntitle: SpringBoot 2.0 更新记录\ndate: 2018-08-21 10:43\ntags: Java\ndescription: SpringBoot 2.0 更新记录\n---\n#### 1、Spring Boot 2.0 要求Java 版本必须8以上\n#### 2、配置属性的重定位\n| Old property | New property |\n| ------------ | ------------ |\n| server.context-path | server.servlet.context-path |\n| server.context-parameters.* | server.servlet.context-parameters.* |\n| server.jsp.class-name | server.servlet.jsp.class-name |\n| server.jsp.init-parameters.* | server.servlet.jsp.init-parameters.* |\n| server.jsp.registered | server.servlet.jsp.registered |\n| server.servlet-path | server.servlet.path |\n","slug":"SpringBoot 2.0 更新记录","published":1,"updated":"2019-02-25T17:29:17.324Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irqa001e48dkq24wjgdi","content":"<h4 id=\"1、Spring-Boot-2-0-要求Java-版本必须8以上\"><a href=\"#1、Spring-Boot-2-0-要求Java-版本必须8以上\" class=\"headerlink\" title=\"1、Spring Boot 2.0 要求Java 版本必须8以上\"></a>1、Spring Boot 2.0 要求Java 版本必须8以上</h4><h4 id=\"2、配置属性的重定位\"><a href=\"#2、配置属性的重定位\" class=\"headerlink\" title=\"2、配置属性的重定位\"></a>2、配置属性的重定位</h4><table>\n<thead>\n<tr>\n<th>Old property</th>\n<th>New property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>server.context-path</td>\n<td>server.servlet.context-path</td>\n</tr>\n<tr>\n<td>server.context-parameters.*</td>\n<td>server.servlet.context-parameters.*</td>\n</tr>\n<tr>\n<td>server.jsp.class-name</td>\n<td>server.servlet.jsp.class-name</td>\n</tr>\n<tr>\n<td>server.jsp.init-parameters.*</td>\n<td>server.servlet.jsp.init-parameters.*</td>\n</tr>\n<tr>\n<td>server.jsp.registered</td>\n<td>server.servlet.jsp.registered</td>\n</tr>\n<tr>\n<td>server.servlet-path</td>\n<td>server.servlet.path</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1、Spring-Boot-2-0-要求Java-版本必须8以上\"><a href=\"#1、Spring-Boot-2-0-要求Java-版本必须8以上\" class=\"headerlink\" title=\"1、Spring Boot 2.0 要求Java 版本必须8以上\"></a>1、Spring Boot 2.0 要求Java 版本必须8以上</h4><h4 id=\"2、配置属性的重定位\"><a href=\"#2、配置属性的重定位\" class=\"headerlink\" title=\"2、配置属性的重定位\"></a>2、配置属性的重定位</h4><table>\n<thead>\n<tr>\n<th>Old property</th>\n<th>New property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>server.context-path</td>\n<td>server.servlet.context-path</td>\n</tr>\n<tr>\n<td>server.context-parameters.*</td>\n<td>server.servlet.context-parameters.*</td>\n</tr>\n<tr>\n<td>server.jsp.class-name</td>\n<td>server.servlet.jsp.class-name</td>\n</tr>\n<tr>\n<td>server.jsp.init-parameters.*</td>\n<td>server.servlet.jsp.init-parameters.*</td>\n</tr>\n<tr>\n<td>server.jsp.registered</td>\n<td>server.servlet.jsp.registered</td>\n</tr>\n<tr>\n<td>server.servlet-path</td>\n<td>server.servlet.path</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"SpringBoot设置默认首页","date":"2018-04-26T07:46:00.000Z","description":"SpringBoot设置默认首页","_content":"```java\n@Configuration\npublic class DefaultView extends WebMvcConfigurerAdapter{\n\n\t@Override\n\tpublic void addViewControllers(ViewControllerRegistry registry) {\n\t\tsuper.addViewControllers(registry);\n\t\t//主页\n\t\tregistry.addViewController(\"/\").setViewName(\"forward:/index\");\n\t} \n\n}\n```","source":"_posts/SpringBoot设置默认首页.md","raw":"---\ntitle: SpringBoot设置默认首页\ndate: 2018-04-26 15:46\ntags: Java\ndescription: SpringBoot设置默认首页\n---\n```java\n@Configuration\npublic class DefaultView extends WebMvcConfigurerAdapter{\n\n\t@Override\n\tpublic void addViewControllers(ViewControllerRegistry registry) {\n\t\tsuper.addViewControllers(registry);\n\t\t//主页\n\t\tregistry.addViewController(\"/\").setViewName(\"forward:/index\");\n\t} \n\n}\n```","slug":"SpringBoot设置默认首页","published":1,"updated":"2019-02-26T11:58:47.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irqc001g48dk4nwdjwdt","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultView</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebMvcConfigurerAdapter</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addViewControllers</span><span class=\"params\">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.addViewControllers(registry);</span><br><span class=\"line\">\t\t<span class=\"comment\">//主页</span></span><br><span class=\"line\">\t\tregistry.addViewController(<span class=\"string\">\"/\"</span>).setViewName(<span class=\"string\">\"forward:/index\"</span>);</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultView</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebMvcConfigurerAdapter</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addViewControllers</span><span class=\"params\">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.addViewControllers(registry);</span><br><span class=\"line\">\t\t<span class=\"comment\">//主页</span></span><br><span class=\"line\">\t\tregistry.addViewController(<span class=\"string\">\"/\"</span>).setViewName(<span class=\"string\">\"forward:/index\"</span>);</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"SpringBoot配置文件中context-path不起作用","date":"2018-08-17T07:29:00.000Z","description":"SpringBoot配置文件中context-path不起作用","_content":"#### SpringBoot 2.0.0.RELEASE版本后更新\n- yml写法：\n```java\nserver:\n    servlet:\n        context-path: /example\n```\n\n- properties写法：\n```java\nserver.servlet.context-path=/example\n```","source":"_posts/SpringBoot配置文件中context-path不起作用.md","raw":"---\ntitle: SpringBoot配置文件中context-path不起作用\ndate: 2018-08-17 15:29\ntags: Java\ndescription: SpringBoot配置文件中context-path不起作用\n---\n#### SpringBoot 2.0.0.RELEASE版本后更新\n- yml写法：\n```java\nserver:\n    servlet:\n        context-path: /example\n```\n\n- properties写法：\n```java\nserver.servlet.context-path=/example\n```","slug":"SpringBoot配置文件中context-path不起作用","published":1,"updated":"2019-02-25T17:35:10.493Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irqe001i48dksaq4dslf","content":"<h4 id=\"SpringBoot-2-0-0-RELEASE版本后更新\"><a href=\"#SpringBoot-2-0-0-RELEASE版本后更新\" class=\"headerlink\" title=\"SpringBoot 2.0.0.RELEASE版本后更新\"></a>SpringBoot 2.0.0.RELEASE版本后更新</h4><ul>\n<li><p>yml写法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server:</span><br><span class=\"line\">    servlet:</span><br><span class=\"line\">        context-path: /example</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>properties写法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.servlet.context-path=/example</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"SpringBoot-2-0-0-RELEASE版本后更新\"><a href=\"#SpringBoot-2-0-0-RELEASE版本后更新\" class=\"headerlink\" title=\"SpringBoot 2.0.0.RELEASE版本后更新\"></a>SpringBoot 2.0.0.RELEASE版本后更新</h4><ul>\n<li><p>yml写法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server:</span><br><span class=\"line\">    servlet:</span><br><span class=\"line\">        context-path: /example</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>properties写法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.servlet.context-path=/example</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"SpringBoot集成Druid不支持多条SQL","date":"2018-04-17T07:49:55.000Z","description":"SpringBoot集成Druid不支持多条SQL","_content":"在DataSource 初始化Bean 添加 \n \n    List<Filter> proxyFilters = new ArrayList<Filter>();\n    WallFilter statFilter = new WallFilter();\n    WallConfig config = new WallConfig();\n    config.setMultiStatementAllow(true); // 批量操作\n    statFilter.setConfig(config);\n    proxyFilters.add(statFilter);\n    druidDataSource.setProxyFilters(proxyFilters);\n\n贴上自己的Config\n\n    package com.wstro.config;\n\n    import java.sql.SQLException;\n    import java.util.ArrayList;\n    import java.util.HashMap;\n    import java.util.List;\n    import java.util.Map;\n\n    import javax.sql.DataSource;\n\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n    import org.springframework.beans.factory.annotation.Value;\n    import org.springframework.boot.web.servlet.FilterRegistrationBean;\n    import org.springframework.boot.web.servlet.ServletRegistrationBean;\n    import org.springframework.context.annotation.Bean;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.context.annotation.Primary;\n    import org.springframework.transaction.annotation.EnableTransactionManagement;\n\n    import com.alibaba.druid.filter.Filter;\n    import com.alibaba.druid.pool.DruidDataSource;\n    import com.alibaba.druid.support.http.StatViewServlet;\n    import com.alibaba.druid.support.http.WebStatFilter;\n    import com.alibaba.druid.wall.WallConfig;\n    import com.alibaba.druid.wall.WallFilter;\n\n<!--more-->\n    /**\n     * Druid数据源配置\n     * \n     * @author Joey\n     * @Email 2434387555@qq.com\n     *\n     */\n    @Configuration\n    @EnableTransactionManagement // 启注解事务管理\n    public class DataSourceConfig {\n\t  private Logger logger = LoggerFactory.getLogger(DataSourceConfig.class);\n\n\t@Value(\"${spring.datasource.url}\")\n\tprivate String dbUrl;\n\n\t@Value(\"${spring.datasource.username}\")\n\tprivate String username;\n\n\t@Value(\"${spring.datasource.password}\")\n\tprivate String password;\n\n\t@Value(\"${spring.datasource.driverClassName}\")\n\tprivate String driverClassName;\n\n\t@Value(\"${spring.datasource.initialSize}\")\n\tprivate int initialSize;\n\n\t@Value(\"${spring.datasource.minIdle}\")\n\tprivate int minIdle;\n\n\t@Value(\"${spring.datasource.maxActive}\")\n\tprivate int maxActive;\n\n\t@Value(\"${spring.datasource.maxWait}\")\n\tprivate int maxWait;\n\n\t@Value(\"${spring.datasource.timeBetweenEvictionRunsMillis}\")\n\tprivate int timeBetweenEvictionRunsMillis;\n\n\t@Value(\"${spring.datasource.minEvictableIdleTimeMillis}\")\n\tprivate int minEvictableIdleTimeMillis;\n\n\t@Value(\"${spring.datasource.validationQuery}\")\n\tprivate String validationQuery;\n\n\t@Value(\"${spring.datasource.testWhileIdle}\")\n\tprivate boolean testWhileIdle;\n\n\t@Value(\"${spring.datasource.testOnBorrow}\")\n\tprivate boolean testOnBorrow;\n\n\t@Value(\"${spring.datasource.testOnReturn}\")\n\tprivate boolean testOnReturn;\n\n\t@Value(\"${spring.datasource.poolPreparedStatements}\")\n\tprivate boolean poolPreparedStatements;\n\n\t@Value(\"${spring.datasource.maxPoolPreparedStatementPerConnectionSize}\")\n\tprivate int maxPoolPreparedStatementPerConnectionSize;\n\n\t@Value(\"${spring.datasource.filters}\")\n\tprivate String filters;\n\n\t@Value(\"${spring.datasource.connectionProperties}\")\n\tprivate String connectionProperties;\n\n\t/**\n\t * 注册DruidServlet\n\t * \n\t * @return ServletRegistrationBean\n\t */\n\t@Bean\n\tpublic ServletRegistrationBean druidServletRegistrationBean() {\n\t\tServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean();\n\t\tservletRegistrationBean.setServlet(new StatViewServlet());\n\t\tservletRegistrationBean.addUrlMappings(\"/druid/*\");\n\t\t// 白名单：\n\t\tservletRegistrationBean.addInitParameter(\"allow\", \"127.0.0.1\");\n\t\t// IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not\n\t\t// permitted to view this page.\n\t\t// 登录查看信息的账号密码.\n\t\tservletRegistrationBean.addInitParameter(\"loginUsername\", \"joey\");\n\t\tservletRegistrationBean.addInitParameter(\"loginPassword\", \"jay\");\n\t\t// 是否能够重置数据.\n\t\tservletRegistrationBean.addInitParameter(\"resetEnable\", \"false\");\n\t\treturn servletRegistrationBean;\n\t}\n\n\t/**\n\t * 注册DruidFilter拦截\n\t * \n\t * @return FilterRegistrationBean\n\t */\n\t@Bean\n\tpublic FilterRegistrationBean druidFilterRegistrationBean() {\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\n\t\tfilterRegistrationBean.setFilter(new WebStatFilter());\n\t\tMap<String, String> initParams = new HashMap<String, String>();\n\t\t// 设置忽略请求\n\t\tinitParams.put(\"exclusions\", \"*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*\");\n\t\tfilterRegistrationBean.setInitParameters(initParams);\n\t\tfilterRegistrationBean.addUrlPatterns(\"/*\");\n\t\treturn filterRegistrationBean;\n\t}\n\n\t/**\n\t * 配置DataSource\n\t * \n\t * @return DataSource\n\t * @throws SQLException\n\t */\n\t@Bean(initMethod = \"init\", destroyMethod = \"close\")\n\t@Primary\n\tpublic DataSource dataSource() throws SQLException {\n\t\tDruidDataSource druidDataSource = new DruidDataSource();\n\t\tdruidDataSource.setUrl(dbUrl);\n\t\tdruidDataSource.setUsername(username);\n\t\tdruidDataSource.setPassword(password);\n\t\tdruidDataSource.setDriverClassName(driverClassName);\n\t\t// configuration\n\t\tdruidDataSource.setInitialSize(initialSize);\n\t\tdruidDataSource.setMinIdle(minIdle);\n\t\tdruidDataSource.setMaxActive(maxActive);\n\t\tdruidDataSource.setMaxWait(maxWait);\n\t\tdruidDataSource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n\t\tdruidDataSource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n\t\tdruidDataSource.setValidationQuery(validationQuery);\n\t\tdruidDataSource.setTestWhileIdle(testWhileIdle);\n\t\tdruidDataSource.setTestOnBorrow(testOnBorrow);\n\t\tdruidDataSource.setTestOnReturn(testOnReturn);\n\t\tdruidDataSource.setPoolPreparedStatements(poolPreparedStatements);\n\t\tdruidDataSource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);\n\t\ttry {\n\t\t\tList<Filter> proxyFilters = new ArrayList<Filter>();\n\t\t\tWallFilter statFilter = new WallFilter();\n\t\t\tWallConfig config = new WallConfig();\n\t\t\tconfig.setMultiStatementAllow(true); // 批量操作\n\t\t\tstatFilter.setConfig(config);\n\t\t\tproxyFilters.add(statFilter);\n\t\t\tdruidDataSource.setProxyFilters(proxyFilters);\n\t\t\tdruidDataSource.setFilters(filters);\n\t\t} catch (SQLException e) {\n\t\t\tlogger.error(\"druid configuration initialization filter\", e);\n\t\t}\n\t\tdruidDataSource.setConnectionProperties(connectionProperties);\n\t\treturn druidDataSource;\n\t}\n\n}\n\nproperties\n\n    #JDBC\n    # \\u6570\\u636E\\u5E93\\u8BBF\\u95EE\\u914D\\u7F6E\n    # \\u4E3B\\u6570\\u636E\\u6E90\\uFF0C\\u9ED8\\u8BA4\\u7684\n    spring.datasource.type=com.alibaba.druid.pool.DruidDataSource\n    spring.datasource.driverClassName=com.mysql.jdbc.Driver\n    spring.datasource.url=jdbc:mysql://192.168.1.88:3306/wstro?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8\n    spring.datasource.username=root\n    spring.datasource.password=root\n\n    # \\u4E0B\\u9762\\u4E3A\\u8FDE\\u63A5\\u6C60\\u7684\\u8865\\u5145\\u8BBE\\u7F6E\\uFF0C\\u5E94\\u7528\\u5230\\u4E0A\\u9762\\u6240\\u6709\\u6570\\u636E\\u6E90\\u4E2D\n    # \\u521D\\u59CB\\u5316\\u5927\\u5C0F\\uFF0C\\u6700\\u5C0F\\uFF0C\\u6700\\u5927\n    spring.datasource.initialSize=5\n    spring.datasource.minIdle=5\n    spring.datasource.maxActive=20\n\n    # \\u914D\\u7F6E\\u83B7\\u53D6\\u8FDE\\u63A5\\u7B49\\u5F85\\u8D85\\u65F6\\u7684\\u65F6\\u95F4\n    spring.datasource.maxWait=60000\n\n    # \\u914D\\u7F6E\\u95F4\\u9694\\u591A\\u4E45\\u624D\\u8FDB\\u884C\\u4E00\\u6B21\\u68C0\\u6D4B\\uFF0C\\u68C0\\u6D4B\\u9700\\u8981\\u5173\\u95ED\\u7684\\u7A7A\\u95F2\\u8FDE\\u63A5\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\n    spring.datasource.timeBetweenEvictionRunsMillis=60000\n\n    # \\u914D\\u7F6E\\u4E00\\u4E2A\\u8FDE\\u63A5\\u5728\\u6C60\\u4E2D\\u6700\\u5C0F\\u751F\\u5B58\\u7684\\u65F6\\u95F4\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\n    spring.datasource.minEvictableIdleTimeMillis=300000\n    spring.datasource.validationQuery=SELECT 1 FROM DUAL\n    spring.datasource.testWhileIdle=true\n    spring.datasource.testOnBorrow=false\n    spring.datasource.testOnReturn=false\n\n    # \\u6253\\u5F00PSCache\\uFF0C\\u5E76\\u4E14\\u6307\\u5B9A\\u6BCF\\u4E2A\\u8FDE\\u63A5\\u4E0APSCache\\u7684\\u5927\\u5C0F\n    spring.datasource.poolPreparedStatements=true\n    spring.datasource.maxPoolPreparedStatementPerConnectionSize=20\n\n    # \\u914D\\u7F6E\\u76D1\\u63A7\\u7EDF\\u8BA1\\u62E6\\u622A\\u7684filters\\uFF0C\\u53BB\\u6389\\u540E\\u76D1\\u63A7\\u754C\\u9762sql\\u65E0\\u6CD5\\u7EDF\\u8BA1\\uFF0C'wall'\\u7528\\u4E8E\\u9632\\u706B\\u5899\n    spring.datasource.filters=stat,wall,log4j\n\n    # \\u901A\\u8FC7connectProperties\\u5C5E\\u6027\\u6765\\u6253\\u5F00mergeSql\\u529F\\u80FD\\uFF1B\\u6162SQL\\u8BB0\\u5F55\n    spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true;\n\n    # \\u5408\\u5E76\\u591A\\u4E2ADruidDataSource\\u7684\\u76D1\\u63A7\\u6570\\u636E\n      #spring.datasource.useGlobalDataSourceStat=true\n  \n","source":"_posts/SpringBoot集成Druid不支持多条SQL.md","raw":"---\ntitle: SpringBoot集成Druid不支持多条SQL\ndate: 2018-04-17 15:49:55\ntags: Java\ndescription: SpringBoot集成Druid不支持多条SQL\n---\n在DataSource 初始化Bean 添加 \n \n    List<Filter> proxyFilters = new ArrayList<Filter>();\n    WallFilter statFilter = new WallFilter();\n    WallConfig config = new WallConfig();\n    config.setMultiStatementAllow(true); // 批量操作\n    statFilter.setConfig(config);\n    proxyFilters.add(statFilter);\n    druidDataSource.setProxyFilters(proxyFilters);\n\n贴上自己的Config\n\n    package com.wstro.config;\n\n    import java.sql.SQLException;\n    import java.util.ArrayList;\n    import java.util.HashMap;\n    import java.util.List;\n    import java.util.Map;\n\n    import javax.sql.DataSource;\n\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n    import org.springframework.beans.factory.annotation.Value;\n    import org.springframework.boot.web.servlet.FilterRegistrationBean;\n    import org.springframework.boot.web.servlet.ServletRegistrationBean;\n    import org.springframework.context.annotation.Bean;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.context.annotation.Primary;\n    import org.springframework.transaction.annotation.EnableTransactionManagement;\n\n    import com.alibaba.druid.filter.Filter;\n    import com.alibaba.druid.pool.DruidDataSource;\n    import com.alibaba.druid.support.http.StatViewServlet;\n    import com.alibaba.druid.support.http.WebStatFilter;\n    import com.alibaba.druid.wall.WallConfig;\n    import com.alibaba.druid.wall.WallFilter;\n\n<!--more-->\n    /**\n     * Druid数据源配置\n     * \n     * @author Joey\n     * @Email 2434387555@qq.com\n     *\n     */\n    @Configuration\n    @EnableTransactionManagement // 启注解事务管理\n    public class DataSourceConfig {\n\t  private Logger logger = LoggerFactory.getLogger(DataSourceConfig.class);\n\n\t@Value(\"${spring.datasource.url}\")\n\tprivate String dbUrl;\n\n\t@Value(\"${spring.datasource.username}\")\n\tprivate String username;\n\n\t@Value(\"${spring.datasource.password}\")\n\tprivate String password;\n\n\t@Value(\"${spring.datasource.driverClassName}\")\n\tprivate String driverClassName;\n\n\t@Value(\"${spring.datasource.initialSize}\")\n\tprivate int initialSize;\n\n\t@Value(\"${spring.datasource.minIdle}\")\n\tprivate int minIdle;\n\n\t@Value(\"${spring.datasource.maxActive}\")\n\tprivate int maxActive;\n\n\t@Value(\"${spring.datasource.maxWait}\")\n\tprivate int maxWait;\n\n\t@Value(\"${spring.datasource.timeBetweenEvictionRunsMillis}\")\n\tprivate int timeBetweenEvictionRunsMillis;\n\n\t@Value(\"${spring.datasource.minEvictableIdleTimeMillis}\")\n\tprivate int minEvictableIdleTimeMillis;\n\n\t@Value(\"${spring.datasource.validationQuery}\")\n\tprivate String validationQuery;\n\n\t@Value(\"${spring.datasource.testWhileIdle}\")\n\tprivate boolean testWhileIdle;\n\n\t@Value(\"${spring.datasource.testOnBorrow}\")\n\tprivate boolean testOnBorrow;\n\n\t@Value(\"${spring.datasource.testOnReturn}\")\n\tprivate boolean testOnReturn;\n\n\t@Value(\"${spring.datasource.poolPreparedStatements}\")\n\tprivate boolean poolPreparedStatements;\n\n\t@Value(\"${spring.datasource.maxPoolPreparedStatementPerConnectionSize}\")\n\tprivate int maxPoolPreparedStatementPerConnectionSize;\n\n\t@Value(\"${spring.datasource.filters}\")\n\tprivate String filters;\n\n\t@Value(\"${spring.datasource.connectionProperties}\")\n\tprivate String connectionProperties;\n\n\t/**\n\t * 注册DruidServlet\n\t * \n\t * @return ServletRegistrationBean\n\t */\n\t@Bean\n\tpublic ServletRegistrationBean druidServletRegistrationBean() {\n\t\tServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean();\n\t\tservletRegistrationBean.setServlet(new StatViewServlet());\n\t\tservletRegistrationBean.addUrlMappings(\"/druid/*\");\n\t\t// 白名单：\n\t\tservletRegistrationBean.addInitParameter(\"allow\", \"127.0.0.1\");\n\t\t// IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not\n\t\t// permitted to view this page.\n\t\t// 登录查看信息的账号密码.\n\t\tservletRegistrationBean.addInitParameter(\"loginUsername\", \"joey\");\n\t\tservletRegistrationBean.addInitParameter(\"loginPassword\", \"jay\");\n\t\t// 是否能够重置数据.\n\t\tservletRegistrationBean.addInitParameter(\"resetEnable\", \"false\");\n\t\treturn servletRegistrationBean;\n\t}\n\n\t/**\n\t * 注册DruidFilter拦截\n\t * \n\t * @return FilterRegistrationBean\n\t */\n\t@Bean\n\tpublic FilterRegistrationBean druidFilterRegistrationBean() {\n\t\tFilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\n\t\tfilterRegistrationBean.setFilter(new WebStatFilter());\n\t\tMap<String, String> initParams = new HashMap<String, String>();\n\t\t// 设置忽略请求\n\t\tinitParams.put(\"exclusions\", \"*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*\");\n\t\tfilterRegistrationBean.setInitParameters(initParams);\n\t\tfilterRegistrationBean.addUrlPatterns(\"/*\");\n\t\treturn filterRegistrationBean;\n\t}\n\n\t/**\n\t * 配置DataSource\n\t * \n\t * @return DataSource\n\t * @throws SQLException\n\t */\n\t@Bean(initMethod = \"init\", destroyMethod = \"close\")\n\t@Primary\n\tpublic DataSource dataSource() throws SQLException {\n\t\tDruidDataSource druidDataSource = new DruidDataSource();\n\t\tdruidDataSource.setUrl(dbUrl);\n\t\tdruidDataSource.setUsername(username);\n\t\tdruidDataSource.setPassword(password);\n\t\tdruidDataSource.setDriverClassName(driverClassName);\n\t\t// configuration\n\t\tdruidDataSource.setInitialSize(initialSize);\n\t\tdruidDataSource.setMinIdle(minIdle);\n\t\tdruidDataSource.setMaxActive(maxActive);\n\t\tdruidDataSource.setMaxWait(maxWait);\n\t\tdruidDataSource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n\t\tdruidDataSource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n\t\tdruidDataSource.setValidationQuery(validationQuery);\n\t\tdruidDataSource.setTestWhileIdle(testWhileIdle);\n\t\tdruidDataSource.setTestOnBorrow(testOnBorrow);\n\t\tdruidDataSource.setTestOnReturn(testOnReturn);\n\t\tdruidDataSource.setPoolPreparedStatements(poolPreparedStatements);\n\t\tdruidDataSource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);\n\t\ttry {\n\t\t\tList<Filter> proxyFilters = new ArrayList<Filter>();\n\t\t\tWallFilter statFilter = new WallFilter();\n\t\t\tWallConfig config = new WallConfig();\n\t\t\tconfig.setMultiStatementAllow(true); // 批量操作\n\t\t\tstatFilter.setConfig(config);\n\t\t\tproxyFilters.add(statFilter);\n\t\t\tdruidDataSource.setProxyFilters(proxyFilters);\n\t\t\tdruidDataSource.setFilters(filters);\n\t\t} catch (SQLException e) {\n\t\t\tlogger.error(\"druid configuration initialization filter\", e);\n\t\t}\n\t\tdruidDataSource.setConnectionProperties(connectionProperties);\n\t\treturn druidDataSource;\n\t}\n\n}\n\nproperties\n\n    #JDBC\n    # \\u6570\\u636E\\u5E93\\u8BBF\\u95EE\\u914D\\u7F6E\n    # \\u4E3B\\u6570\\u636E\\u6E90\\uFF0C\\u9ED8\\u8BA4\\u7684\n    spring.datasource.type=com.alibaba.druid.pool.DruidDataSource\n    spring.datasource.driverClassName=com.mysql.jdbc.Driver\n    spring.datasource.url=jdbc:mysql://192.168.1.88:3306/wstro?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8\n    spring.datasource.username=root\n    spring.datasource.password=root\n\n    # \\u4E0B\\u9762\\u4E3A\\u8FDE\\u63A5\\u6C60\\u7684\\u8865\\u5145\\u8BBE\\u7F6E\\uFF0C\\u5E94\\u7528\\u5230\\u4E0A\\u9762\\u6240\\u6709\\u6570\\u636E\\u6E90\\u4E2D\n    # \\u521D\\u59CB\\u5316\\u5927\\u5C0F\\uFF0C\\u6700\\u5C0F\\uFF0C\\u6700\\u5927\n    spring.datasource.initialSize=5\n    spring.datasource.minIdle=5\n    spring.datasource.maxActive=20\n\n    # \\u914D\\u7F6E\\u83B7\\u53D6\\u8FDE\\u63A5\\u7B49\\u5F85\\u8D85\\u65F6\\u7684\\u65F6\\u95F4\n    spring.datasource.maxWait=60000\n\n    # \\u914D\\u7F6E\\u95F4\\u9694\\u591A\\u4E45\\u624D\\u8FDB\\u884C\\u4E00\\u6B21\\u68C0\\u6D4B\\uFF0C\\u68C0\\u6D4B\\u9700\\u8981\\u5173\\u95ED\\u7684\\u7A7A\\u95F2\\u8FDE\\u63A5\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\n    spring.datasource.timeBetweenEvictionRunsMillis=60000\n\n    # \\u914D\\u7F6E\\u4E00\\u4E2A\\u8FDE\\u63A5\\u5728\\u6C60\\u4E2D\\u6700\\u5C0F\\u751F\\u5B58\\u7684\\u65F6\\u95F4\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\n    spring.datasource.minEvictableIdleTimeMillis=300000\n    spring.datasource.validationQuery=SELECT 1 FROM DUAL\n    spring.datasource.testWhileIdle=true\n    spring.datasource.testOnBorrow=false\n    spring.datasource.testOnReturn=false\n\n    # \\u6253\\u5F00PSCache\\uFF0C\\u5E76\\u4E14\\u6307\\u5B9A\\u6BCF\\u4E2A\\u8FDE\\u63A5\\u4E0APSCache\\u7684\\u5927\\u5C0F\n    spring.datasource.poolPreparedStatements=true\n    spring.datasource.maxPoolPreparedStatementPerConnectionSize=20\n\n    # \\u914D\\u7F6E\\u76D1\\u63A7\\u7EDF\\u8BA1\\u62E6\\u622A\\u7684filters\\uFF0C\\u53BB\\u6389\\u540E\\u76D1\\u63A7\\u754C\\u9762sql\\u65E0\\u6CD5\\u7EDF\\u8BA1\\uFF0C'wall'\\u7528\\u4E8E\\u9632\\u706B\\u5899\n    spring.datasource.filters=stat,wall,log4j\n\n    # \\u901A\\u8FC7connectProperties\\u5C5E\\u6027\\u6765\\u6253\\u5F00mergeSql\\u529F\\u80FD\\uFF1B\\u6162SQL\\u8BB0\\u5F55\n    spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true;\n\n    # \\u5408\\u5E76\\u591A\\u4E2ADruidDataSource\\u7684\\u76D1\\u63A7\\u6570\\u636E\n      #spring.datasource.useGlobalDataSourceStat=true\n  \n","slug":"SpringBoot集成Druid不支持多条SQL","published":1,"updated":"2018-06-05T11:40:32.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irqf001k48dknyvb9evn","content":"<p>在DataSource 初始化Bean 添加 </p>\n<pre><code>List&lt;Filter&gt; proxyFilters = new ArrayList&lt;Filter&gt;();\nWallFilter statFilter = new WallFilter();\nWallConfig config = new WallConfig();\nconfig.setMultiStatementAllow(true); // 批量操作\nstatFilter.setConfig(config);\nproxyFilters.add(statFilter);\ndruidDataSource.setProxyFilters(proxyFilters);\n</code></pre><p>贴上自己的Config</p>\n<pre><code>package com.wstro.config;\n\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.sql.DataSource;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\nimport org.springframework.boot.web.servlet.ServletRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\nimport com.alibaba.druid.filter.Filter;\nimport com.alibaba.druid.pool.DruidDataSource;\nimport com.alibaba.druid.support.http.StatViewServlet;\nimport com.alibaba.druid.support.http.WebStatFilter;\nimport com.alibaba.druid.wall.WallConfig;\nimport com.alibaba.druid.wall.WallFilter;\n</code></pre><a id=\"more\"></a>\n<pre><code>/**\n * Druid数据源配置\n * \n * @author Joey\n * @Email 2434387555@qq.com\n *\n */\n@Configuration\n@EnableTransactionManagement // 启注解事务管理\npublic class DataSourceConfig {\n  private Logger logger = LoggerFactory.getLogger(DataSourceConfig.class);\n\n@Value(&quot;${spring.datasource.url}&quot;)\nprivate String dbUrl;\n\n@Value(&quot;${spring.datasource.username}&quot;)\nprivate String username;\n\n@Value(&quot;${spring.datasource.password}&quot;)\nprivate String password;\n\n@Value(&quot;${spring.datasource.driverClassName}&quot;)\nprivate String driverClassName;\n\n@Value(&quot;${spring.datasource.initialSize}&quot;)\nprivate int initialSize;\n\n@Value(&quot;${spring.datasource.minIdle}&quot;)\nprivate int minIdle;\n\n@Value(&quot;${spring.datasource.maxActive}&quot;)\nprivate int maxActive;\n\n@Value(&quot;${spring.datasource.maxWait}&quot;)\nprivate int maxWait;\n\n@Value(&quot;${spring.datasource.timeBetweenEvictionRunsMillis}&quot;)\nprivate int timeBetweenEvictionRunsMillis;\n\n@Value(&quot;${spring.datasource.minEvictableIdleTimeMillis}&quot;)\nprivate int minEvictableIdleTimeMillis;\n\n@Value(&quot;${spring.datasource.validationQuery}&quot;)\nprivate String validationQuery;\n\n@Value(&quot;${spring.datasource.testWhileIdle}&quot;)\nprivate boolean testWhileIdle;\n\n@Value(&quot;${spring.datasource.testOnBorrow}&quot;)\nprivate boolean testOnBorrow;\n\n@Value(&quot;${spring.datasource.testOnReturn}&quot;)\nprivate boolean testOnReturn;\n\n@Value(&quot;${spring.datasource.poolPreparedStatements}&quot;)\nprivate boolean poolPreparedStatements;\n\n@Value(&quot;${spring.datasource.maxPoolPreparedStatementPerConnectionSize}&quot;)\nprivate int maxPoolPreparedStatementPerConnectionSize;\n\n@Value(&quot;${spring.datasource.filters}&quot;)\nprivate String filters;\n\n@Value(&quot;${spring.datasource.connectionProperties}&quot;)\nprivate String connectionProperties;\n\n/**\n * 注册DruidServlet\n * \n * @return ServletRegistrationBean\n */\n@Bean\npublic ServletRegistrationBean druidServletRegistrationBean() {\n    ServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean();\n    servletRegistrationBean.setServlet(new StatViewServlet());\n    servletRegistrationBean.addUrlMappings(&quot;/druid/*&quot;);\n    // 白名单：\n    servletRegistrationBean.addInitParameter(&quot;allow&quot;, &quot;127.0.0.1&quot;);\n    // IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not\n    // permitted to view this page.\n    // 登录查看信息的账号密码.\n    servletRegistrationBean.addInitParameter(&quot;loginUsername&quot;, &quot;joey&quot;);\n    servletRegistrationBean.addInitParameter(&quot;loginPassword&quot;, &quot;jay&quot;);\n    // 是否能够重置数据.\n    servletRegistrationBean.addInitParameter(&quot;resetEnable&quot;, &quot;false&quot;);\n    return servletRegistrationBean;\n}\n\n/**\n * 注册DruidFilter拦截\n * \n * @return FilterRegistrationBean\n */\n@Bean\npublic FilterRegistrationBean druidFilterRegistrationBean() {\n    FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\n    filterRegistrationBean.setFilter(new WebStatFilter());\n    Map&lt;String, String&gt; initParams = new HashMap&lt;String, String&gt;();\n    // 设置忽略请求\n    initParams.put(&quot;exclusions&quot;, &quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;);\n    filterRegistrationBean.setInitParameters(initParams);\n    filterRegistrationBean.addUrlPatterns(&quot;/*&quot;);\n    return filterRegistrationBean;\n}\n\n/**\n * 配置DataSource\n * \n * @return DataSource\n * @throws SQLException\n */\n@Bean(initMethod = &quot;init&quot;, destroyMethod = &quot;close&quot;)\n@Primary\npublic DataSource dataSource() throws SQLException {\n    DruidDataSource druidDataSource = new DruidDataSource();\n    druidDataSource.setUrl(dbUrl);\n    druidDataSource.setUsername(username);\n    druidDataSource.setPassword(password);\n    druidDataSource.setDriverClassName(driverClassName);\n    // configuration\n    druidDataSource.setInitialSize(initialSize);\n    druidDataSource.setMinIdle(minIdle);\n    druidDataSource.setMaxActive(maxActive);\n    druidDataSource.setMaxWait(maxWait);\n    druidDataSource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n    druidDataSource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n    druidDataSource.setValidationQuery(validationQuery);\n    druidDataSource.setTestWhileIdle(testWhileIdle);\n    druidDataSource.setTestOnBorrow(testOnBorrow);\n    druidDataSource.setTestOnReturn(testOnReturn);\n    druidDataSource.setPoolPreparedStatements(poolPreparedStatements);\n    druidDataSource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);\n    try {\n        List&lt;Filter&gt; proxyFilters = new ArrayList&lt;Filter&gt;();\n        WallFilter statFilter = new WallFilter();\n        WallConfig config = new WallConfig();\n        config.setMultiStatementAllow(true); // 批量操作\n        statFilter.setConfig(config);\n        proxyFilters.add(statFilter);\n        druidDataSource.setProxyFilters(proxyFilters);\n        druidDataSource.setFilters(filters);\n    } catch (SQLException e) {\n        logger.error(&quot;druid configuration initialization filter&quot;, e);\n    }\n    druidDataSource.setConnectionProperties(connectionProperties);\n    return druidDataSource;\n}\n</code></pre><p>}</p>\n<p>properties</p>\n<pre><code>#JDBC\n# \\u6570\\u636E\\u5E93\\u8BBF\\u95EE\\u914D\\u7F6E\n# \\u4E3B\\u6570\\u636E\\u6E90\\uFF0C\\u9ED8\\u8BA4\\u7684\nspring.datasource.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.driverClassName=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://192.168.1.88:3306/wstro?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8\nspring.datasource.username=root\nspring.datasource.password=root\n\n# \\u4E0B\\u9762\\u4E3A\\u8FDE\\u63A5\\u6C60\\u7684\\u8865\\u5145\\u8BBE\\u7F6E\\uFF0C\\u5E94\\u7528\\u5230\\u4E0A\\u9762\\u6240\\u6709\\u6570\\u636E\\u6E90\\u4E2D\n# \\u521D\\u59CB\\u5316\\u5927\\u5C0F\\uFF0C\\u6700\\u5C0F\\uFF0C\\u6700\\u5927\nspring.datasource.initialSize=5\nspring.datasource.minIdle=5\nspring.datasource.maxActive=20\n\n# \\u914D\\u7F6E\\u83B7\\u53D6\\u8FDE\\u63A5\\u7B49\\u5F85\\u8D85\\u65F6\\u7684\\u65F6\\u95F4\nspring.datasource.maxWait=60000\n\n# \\u914D\\u7F6E\\u95F4\\u9694\\u591A\\u4E45\\u624D\\u8FDB\\u884C\\u4E00\\u6B21\\u68C0\\u6D4B\\uFF0C\\u68C0\\u6D4B\\u9700\\u8981\\u5173\\u95ED\\u7684\\u7A7A\\u95F2\\u8FDE\\u63A5\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\nspring.datasource.timeBetweenEvictionRunsMillis=60000\n\n# \\u914D\\u7F6E\\u4E00\\u4E2A\\u8FDE\\u63A5\\u5728\\u6C60\\u4E2D\\u6700\\u5C0F\\u751F\\u5B58\\u7684\\u65F6\\u95F4\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\nspring.datasource.minEvictableIdleTimeMillis=300000\nspring.datasource.validationQuery=SELECT 1 FROM DUAL\nspring.datasource.testWhileIdle=true\nspring.datasource.testOnBorrow=false\nspring.datasource.testOnReturn=false\n\n# \\u6253\\u5F00PSCache\\uFF0C\\u5E76\\u4E14\\u6307\\u5B9A\\u6BCF\\u4E2A\\u8FDE\\u63A5\\u4E0APSCache\\u7684\\u5927\\u5C0F\nspring.datasource.poolPreparedStatements=true\nspring.datasource.maxPoolPreparedStatementPerConnectionSize=20\n\n# \\u914D\\u7F6E\\u76D1\\u63A7\\u7EDF\\u8BA1\\u62E6\\u622A\\u7684filters\\uFF0C\\u53BB\\u6389\\u540E\\u76D1\\u63A7\\u754C\\u9762sql\\u65E0\\u6CD5\\u7EDF\\u8BA1\\uFF0C&apos;wall&apos;\\u7528\\u4E8E\\u9632\\u706B\\u5899\nspring.datasource.filters=stat,wall,log4j\n\n# \\u901A\\u8FC7connectProperties\\u5C5E\\u6027\\u6765\\u6253\\u5F00mergeSql\\u529F\\u80FD\\uFF1B\\u6162SQL\\u8BB0\\u5F55\nspring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true;\n\n# \\u5408\\u5E76\\u591A\\u4E2ADruidDataSource\\u7684\\u76D1\\u63A7\\u6570\\u636E\n  #spring.datasource.useGlobalDataSourceStat=true\n</code></pre>","site":{"data":{}},"excerpt":"<p>在DataSource 初始化Bean 添加 </p>\n<pre><code>List&lt;Filter&gt; proxyFilters = new ArrayList&lt;Filter&gt;();\nWallFilter statFilter = new WallFilter();\nWallConfig config = new WallConfig();\nconfig.setMultiStatementAllow(true); // 批量操作\nstatFilter.setConfig(config);\nproxyFilters.add(statFilter);\ndruidDataSource.setProxyFilters(proxyFilters);\n</code></pre><p>贴上自己的Config</p>\n<pre><code>package com.wstro.config;\n\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport javax.sql.DataSource;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.web.servlet.FilterRegistrationBean;\nimport org.springframework.boot.web.servlet.ServletRegistrationBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\nimport com.alibaba.druid.filter.Filter;\nimport com.alibaba.druid.pool.DruidDataSource;\nimport com.alibaba.druid.support.http.StatViewServlet;\nimport com.alibaba.druid.support.http.WebStatFilter;\nimport com.alibaba.druid.wall.WallConfig;\nimport com.alibaba.druid.wall.WallFilter;\n</code></pre>","more":"<pre><code>/**\n * Druid数据源配置\n * \n * @author Joey\n * @Email 2434387555@qq.com\n *\n */\n@Configuration\n@EnableTransactionManagement // 启注解事务管理\npublic class DataSourceConfig {\n  private Logger logger = LoggerFactory.getLogger(DataSourceConfig.class);\n\n@Value(&quot;${spring.datasource.url}&quot;)\nprivate String dbUrl;\n\n@Value(&quot;${spring.datasource.username}&quot;)\nprivate String username;\n\n@Value(&quot;${spring.datasource.password}&quot;)\nprivate String password;\n\n@Value(&quot;${spring.datasource.driverClassName}&quot;)\nprivate String driverClassName;\n\n@Value(&quot;${spring.datasource.initialSize}&quot;)\nprivate int initialSize;\n\n@Value(&quot;${spring.datasource.minIdle}&quot;)\nprivate int minIdle;\n\n@Value(&quot;${spring.datasource.maxActive}&quot;)\nprivate int maxActive;\n\n@Value(&quot;${spring.datasource.maxWait}&quot;)\nprivate int maxWait;\n\n@Value(&quot;${spring.datasource.timeBetweenEvictionRunsMillis}&quot;)\nprivate int timeBetweenEvictionRunsMillis;\n\n@Value(&quot;${spring.datasource.minEvictableIdleTimeMillis}&quot;)\nprivate int minEvictableIdleTimeMillis;\n\n@Value(&quot;${spring.datasource.validationQuery}&quot;)\nprivate String validationQuery;\n\n@Value(&quot;${spring.datasource.testWhileIdle}&quot;)\nprivate boolean testWhileIdle;\n\n@Value(&quot;${spring.datasource.testOnBorrow}&quot;)\nprivate boolean testOnBorrow;\n\n@Value(&quot;${spring.datasource.testOnReturn}&quot;)\nprivate boolean testOnReturn;\n\n@Value(&quot;${spring.datasource.poolPreparedStatements}&quot;)\nprivate boolean poolPreparedStatements;\n\n@Value(&quot;${spring.datasource.maxPoolPreparedStatementPerConnectionSize}&quot;)\nprivate int maxPoolPreparedStatementPerConnectionSize;\n\n@Value(&quot;${spring.datasource.filters}&quot;)\nprivate String filters;\n\n@Value(&quot;${spring.datasource.connectionProperties}&quot;)\nprivate String connectionProperties;\n\n/**\n * 注册DruidServlet\n * \n * @return ServletRegistrationBean\n */\n@Bean\npublic ServletRegistrationBean druidServletRegistrationBean() {\n    ServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean();\n    servletRegistrationBean.setServlet(new StatViewServlet());\n    servletRegistrationBean.addUrlMappings(&quot;/druid/*&quot;);\n    // 白名单：\n    servletRegistrationBean.addInitParameter(&quot;allow&quot;, &quot;127.0.0.1&quot;);\n    // IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not\n    // permitted to view this page.\n    // 登录查看信息的账号密码.\n    servletRegistrationBean.addInitParameter(&quot;loginUsername&quot;, &quot;joey&quot;);\n    servletRegistrationBean.addInitParameter(&quot;loginPassword&quot;, &quot;jay&quot;);\n    // 是否能够重置数据.\n    servletRegistrationBean.addInitParameter(&quot;resetEnable&quot;, &quot;false&quot;);\n    return servletRegistrationBean;\n}\n\n/**\n * 注册DruidFilter拦截\n * \n * @return FilterRegistrationBean\n */\n@Bean\npublic FilterRegistrationBean druidFilterRegistrationBean() {\n    FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\n    filterRegistrationBean.setFilter(new WebStatFilter());\n    Map&lt;String, String&gt; initParams = new HashMap&lt;String, String&gt;();\n    // 设置忽略请求\n    initParams.put(&quot;exclusions&quot;, &quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;);\n    filterRegistrationBean.setInitParameters(initParams);\n    filterRegistrationBean.addUrlPatterns(&quot;/*&quot;);\n    return filterRegistrationBean;\n}\n\n/**\n * 配置DataSource\n * \n * @return DataSource\n * @throws SQLException\n */\n@Bean(initMethod = &quot;init&quot;, destroyMethod = &quot;close&quot;)\n@Primary\npublic DataSource dataSource() throws SQLException {\n    DruidDataSource druidDataSource = new DruidDataSource();\n    druidDataSource.setUrl(dbUrl);\n    druidDataSource.setUsername(username);\n    druidDataSource.setPassword(password);\n    druidDataSource.setDriverClassName(driverClassName);\n    // configuration\n    druidDataSource.setInitialSize(initialSize);\n    druidDataSource.setMinIdle(minIdle);\n    druidDataSource.setMaxActive(maxActive);\n    druidDataSource.setMaxWait(maxWait);\n    druidDataSource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n    druidDataSource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n    druidDataSource.setValidationQuery(validationQuery);\n    druidDataSource.setTestWhileIdle(testWhileIdle);\n    druidDataSource.setTestOnBorrow(testOnBorrow);\n    druidDataSource.setTestOnReturn(testOnReturn);\n    druidDataSource.setPoolPreparedStatements(poolPreparedStatements);\n    druidDataSource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);\n    try {\n        List&lt;Filter&gt; proxyFilters = new ArrayList&lt;Filter&gt;();\n        WallFilter statFilter = new WallFilter();\n        WallConfig config = new WallConfig();\n        config.setMultiStatementAllow(true); // 批量操作\n        statFilter.setConfig(config);\n        proxyFilters.add(statFilter);\n        druidDataSource.setProxyFilters(proxyFilters);\n        druidDataSource.setFilters(filters);\n    } catch (SQLException e) {\n        logger.error(&quot;druid configuration initialization filter&quot;, e);\n    }\n    druidDataSource.setConnectionProperties(connectionProperties);\n    return druidDataSource;\n}\n</code></pre><p>}</p>\n<p>properties</p>\n<pre><code>#JDBC\n# \\u6570\\u636E\\u5E93\\u8BBF\\u95EE\\u914D\\u7F6E\n# \\u4E3B\\u6570\\u636E\\u6E90\\uFF0C\\u9ED8\\u8BA4\\u7684\nspring.datasource.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.driverClassName=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://192.168.1.88:3306/wstro?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8\nspring.datasource.username=root\nspring.datasource.password=root\n\n# \\u4E0B\\u9762\\u4E3A\\u8FDE\\u63A5\\u6C60\\u7684\\u8865\\u5145\\u8BBE\\u7F6E\\uFF0C\\u5E94\\u7528\\u5230\\u4E0A\\u9762\\u6240\\u6709\\u6570\\u636E\\u6E90\\u4E2D\n# \\u521D\\u59CB\\u5316\\u5927\\u5C0F\\uFF0C\\u6700\\u5C0F\\uFF0C\\u6700\\u5927\nspring.datasource.initialSize=5\nspring.datasource.minIdle=5\nspring.datasource.maxActive=20\n\n# \\u914D\\u7F6E\\u83B7\\u53D6\\u8FDE\\u63A5\\u7B49\\u5F85\\u8D85\\u65F6\\u7684\\u65F6\\u95F4\nspring.datasource.maxWait=60000\n\n# \\u914D\\u7F6E\\u95F4\\u9694\\u591A\\u4E45\\u624D\\u8FDB\\u884C\\u4E00\\u6B21\\u68C0\\u6D4B\\uFF0C\\u68C0\\u6D4B\\u9700\\u8981\\u5173\\u95ED\\u7684\\u7A7A\\u95F2\\u8FDE\\u63A5\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\nspring.datasource.timeBetweenEvictionRunsMillis=60000\n\n# \\u914D\\u7F6E\\u4E00\\u4E2A\\u8FDE\\u63A5\\u5728\\u6C60\\u4E2D\\u6700\\u5C0F\\u751F\\u5B58\\u7684\\u65F6\\u95F4\\uFF0C\\u5355\\u4F4D\\u662F\\u6BEB\\u79D2\nspring.datasource.minEvictableIdleTimeMillis=300000\nspring.datasource.validationQuery=SELECT 1 FROM DUAL\nspring.datasource.testWhileIdle=true\nspring.datasource.testOnBorrow=false\nspring.datasource.testOnReturn=false\n\n# \\u6253\\u5F00PSCache\\uFF0C\\u5E76\\u4E14\\u6307\\u5B9A\\u6BCF\\u4E2A\\u8FDE\\u63A5\\u4E0APSCache\\u7684\\u5927\\u5C0F\nspring.datasource.poolPreparedStatements=true\nspring.datasource.maxPoolPreparedStatementPerConnectionSize=20\n\n# \\u914D\\u7F6E\\u76D1\\u63A7\\u7EDF\\u8BA1\\u62E6\\u622A\\u7684filters\\uFF0C\\u53BB\\u6389\\u540E\\u76D1\\u63A7\\u754C\\u9762sql\\u65E0\\u6CD5\\u7EDF\\u8BA1\\uFF0C&apos;wall&apos;\\u7528\\u4E8E\\u9632\\u706B\\u5899\nspring.datasource.filters=stat,wall,log4j\n\n# \\u901A\\u8FC7connectProperties\\u5C5E\\u6027\\u6765\\u6253\\u5F00mergeSql\\u529F\\u80FD\\uFF1B\\u6162SQL\\u8BB0\\u5F55\nspring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;druid.stat.logSlowSql=true;\n\n# \\u5408\\u5E76\\u591A\\u4E2ADruidDataSource\\u7684\\u76D1\\u63A7\\u6570\\u636E\n  #spring.datasource.useGlobalDataSourceStat=true\n</code></pre>"},{"title":"nohup 和>/dev/null 2>&1","description":"nohup 和>/dev/null 2>&1","date":"2018-08-10T17:46:24.000Z","_content":"#### 一、用途：nohup表示永久运行。&表示后台运行\n\n在应用Unix/Linux时，我们一般想让某个程序在后台运行\n\n\t# nohup ./start-mysql.sh &\n\n该命令的一般形式为：\n\n\t# nohup command &\n<!--more-->\n\n在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中,除非另外指定了输出文件：\n\n\t# nohup command > myout.file 2>&1 &\n\n在上面的例子中，输出被重定向到myout.file文件中。\n\n#### 二、>/dev/null 2>&1\n\n/dev/null 代表空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。\n\n\t# nohup command 1>/dev/null 2>&1 &\n","source":"_posts/nohup-和-dev-null-2-1.md","raw":"---\ntitle: nohup 和>/dev/null 2>&1\ntags: Linux\ndescription: nohup 和>/dev/null 2>&1\ndate: 2018-08-11 01:46:24\n---\n#### 一、用途：nohup表示永久运行。&表示后台运行\n\n在应用Unix/Linux时，我们一般想让某个程序在后台运行\n\n\t# nohup ./start-mysql.sh &\n\n该命令的一般形式为：\n\n\t# nohup command &\n<!--more-->\n\n在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中,除非另外指定了输出文件：\n\n\t# nohup command > myout.file 2>&1 &\n\n在上面的例子中，输出被重定向到myout.file文件中。\n\n#### 二、>/dev/null 2>&1\n\n/dev/null 代表空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。\n\n\t# nohup command 1>/dev/null 2>&1 &\n","slug":"nohup-和-dev-null-2-1","published":1,"updated":"2018-08-10T17:49:04.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irqh001m48dkaymi8f26","content":"<h4 id=\"一、用途：nohup表示永久运行。-amp-表示后台运行\"><a href=\"#一、用途：nohup表示永久运行。-amp-表示后台运行\" class=\"headerlink\" title=\"一、用途：nohup表示永久运行。&amp;表示后台运行\"></a>一、用途：nohup表示永久运行。&amp;表示后台运行</h4><p>在应用Unix/Linux时，我们一般想让某个程序在后台运行</p>\n<pre><code># nohup ./start-mysql.sh &amp;\n</code></pre><p>该命令的一般形式为：</p>\n<pre><code># nohup command &amp;\n</code></pre><a id=\"more\"></a>\n<p>在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中,除非另外指定了输出文件：</p>\n<pre><code># nohup command &gt; myout.file 2&gt;&amp;1 &amp;\n</code></pre><p>在上面的例子中，输出被重定向到myout.file文件中。</p>\n<h4 id=\"二、-gt-dev-null-2-gt-amp-1\"><a href=\"#二、-gt-dev-null-2-gt-amp-1\" class=\"headerlink\" title=\"二、&gt;/dev/null 2&gt;&amp;1\"></a>二、&gt;/dev/null 2&gt;&amp;1</h4><p>/dev/null 代表空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。</p>\n<pre><code># nohup command 1&gt;/dev/null 2&gt;&amp;1 &amp;\n</code></pre>","site":{"data":{}},"excerpt":"<h4 id=\"一、用途：nohup表示永久运行。-amp-表示后台运行\"><a href=\"#一、用途：nohup表示永久运行。-amp-表示后台运行\" class=\"headerlink\" title=\"一、用途：nohup表示永久运行。&amp;表示后台运行\"></a>一、用途：nohup表示永久运行。&amp;表示后台运行</h4><p>在应用Unix/Linux时，我们一般想让某个程序在后台运行</p>\n<pre><code># nohup ./start-mysql.sh &amp;\n</code></pre><p>该命令的一般形式为：</p>\n<pre><code># nohup command &amp;\n</code></pre>","more":"<p>在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中,除非另外指定了输出文件：</p>\n<pre><code># nohup command &gt; myout.file 2&gt;&amp;1 &amp;\n</code></pre><p>在上面的例子中，输出被重定向到myout.file文件中。</p>\n<h4 id=\"二、-gt-dev-null-2-gt-amp-1\"><a href=\"#二、-gt-dev-null-2-gt-amp-1\" class=\"headerlink\" title=\"二、&gt;/dev/null 2&gt;&amp;1\"></a>二、&gt;/dev/null 2&gt;&amp;1</h4><p>/dev/null 代表空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。</p>\n<pre><code># nohup command 1&gt;/dev/null 2&gt;&amp;1 &amp;\n</code></pre>"},{"title":"我听说","date":"2017-01-01T08:57:03.000Z","_content":"![](https://upload-images.jianshu.io/upload_images/2743275-9bfadb628569fe76.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n　　我听说，有一种猫叫做雨猫。天气温暖时，它就变得蓬松毛绒绒的，像白云一样上浮，你可以拴着它，像放风筝一样走，它会变透明，阳光透得过它的身体。天气晦暗时它会变黑，坠在地上，满地乱跑，毛变得硬硬的，像刚刮过的胡茬一样。你得抱着它，等天气晴朗时，再把它放出去，就像风筝末梢放着一团棉花糖。\n\n------------\n\n\n\n　　我听说，有种青蛙，透明洁白，只吃茶叶。吃多之后，吐气如兰。冬天它便僵卧，张着大嘴，眠去一个季节。你往它肚里倒热水，水便成茶，馥郁芳香，可以倒在杯子里喝，香沁肺腑。有个女孩子，手头没有杯子，于是捧起青蛙，嘴对着嘴，把青蛙嘴当茶杯口。结果青蛙醒了，变成一白衣少年：“哪个公主吻了我？”\n\n------------\n\n<!--more-->\n　　我听说，有一种驯鹿，很爱长颈鹿的斑纹和气味，但是太矮，又碍于长颈鹿是哑巴，所以没法谈恋爱。于是它们就长起了杉树一样直拔云天的角，然后到处找一个人，在角的顶端造一个房子住着。每天，那个人负责在高树摘果子，送给长颈鹿吃，以促成驯鹿和长颈鹿的爱情——虽然见不到面，但灵魂相通的爱情。\n\n------------\n\n\n　　我听说，北方有一种松鼠，特别大，毛茸茸的，睡觉时喜欢摊开四肢，露出软绵绵的肚皮。你抓住一只，混熟了，就可以把它当床，睡在它的肚子上，用它的尾巴做被子。但它喜欢梦游，到处爬，所以你睡着前眼睛明明看见天花板的花纹，醒来时就可能看见松树枝、杉树枝、云、麻雀和松毛虫。\n\n------------\n\n\n　　我听说，有一种猫，特别怕冷，一遇到冷环境就全身长起蓬松松软绵绵的长毛，并且开始冬眠，怎么叫都不醒。冬天你把它挂在脖子上出门，就好像穿了件毛大衣。到了温暖的室内，它暖醒了，就喵一声跳下来，自己到炉子旁边去接着睡了。因为冬天很长，它在冬天基本是裘状，所以叫冬裘夏猫。\n\n------------\n\n\n　　我听说，有种野猪，睡一觉就长一层脂肪，起来跑一跑就练出一层肌肉，所以他身上肥瘦肥瘦，像夹心饼干。他爱去南方的海边泡澡，泡一身大粒子盐味，吹风，然后哼唧哼唧去温泉，一边蒸自己一边吃树叶子。你埋伏在温泉边，射倒它，能吃到现成的蒸火腿。你最好带蜂蜜，敷一遍再蒸，更好吃。\n\n------------\n\n\n　　我听说，以前有人喜欢在海蚌上写故事写诗。你走在海边，海蚌会跟你说：我身上有字，可以给你看噢，但有个条件，我不识字，你得念给我听。你答应了，海蚌就张开壳来，让你给它念故事。如果你看入神忘了继续念，或者企图摘抄剽窃，海蚌就会夹你一下；如果你念得好，海蚌就送你颗珍珠。\n\n------------\n\n\n　　我听说，南方有一种鸟，身材纤瘦，尾羽很长，善吟诗，平时看上去盈盈一握，却筋骨健壮。如果你和它混熟了，它就会把身体绷直，你可以握着它的腰，用它的嘴蘸墨、写字，画梅花、打印章时，还可以用它印个浅爪痕。可是它挑剔得很，墨质差，纸脏，字写得难看，或者句子毫无文采，它就会破口大骂：“居然用老娘写这么烂的文章！”\n\n------------\n\n\n我听说有种雪狐，极妩媚，皮毛柔滑。善学声音，爱恶作剧，喜在窗外学男主人女同学、女同事等声音，引女主人疑心吵架，引以为乐。被抓住后会要求：给你雪狐裘，放我走吧。若男主人不允，她便媚笑：原来是你舍不得我走啊嗯……女主人遂朝男主人双目圆睁：你留她干嘛，还不放走？心思又活络了嗯？！\n\n------------\n\n\n　　我听说，有种熊叫做云熊，其白如雪，其大若垂天之云。春天开始浮游，夏天吸取阳光。冬天，它随风在天空飘荡，到一个寒冷的地方，就开始下一团团的熊绒毛。熊绒可做大衣，闻得到夏天阳光的味道。熊绒落完，它也就飘下地来。你闻以蜂蜜，冬眠。到春天它长起了毛，就又变成云浮起来了。\n\n------------\n\n\n　　我听说有种蜗牛，寿命很长，以八千岁为春，以八千岁为秋。丈夫对妻子说，我要吻你一下，然后出门去买报纸。妻子就闭上眼，等了八天，吻到了，于是丈夫出门了。等他回来，妻子抱怨说：你这一走就是六百年，我好担心。丈夫说：哎呀，我是怕又过时了，站在那里花二百年把新闻看了嘛。\n\n------------\n\n\n　　我听说有种章鱼，善于下厨。你坐柜台后面，问它要三明治寿司刺身铁板烧咖啡茶涮锅烤串回锅肉，它舞起手臂们，切剔炒烹翻炸调撒料颠勺，又快又好，还能剩出三只手，一只负责收钱，两只和你打扑克解闷。但它开不起玩笑，偶尔它不小心手臂被铁板烫到，你可不能说“那我要这条章鱼烧！” 不然它就会舞起锅铲，任你是三头六臂也挡不住它四面八方朝你扔鱼丸。\n\n------------\n\n\n　　我听说有种虎鲸，很温柔，喜欢光，不潜游，但又怕晒。你在它背上铺沙子，张阳伞，它便喜欢你，任你在它背上住下，钓鱼、睡午觉、接吻、喝果汁。每天它张嘴吞许多小鱼，自己吃些，剩下的喷水送给你，于是你天天有新鲜刺身吃。偶然它也馋，愿意吃熟的，就会张嘴，要你抛给吃章鱼烧。\n","source":"_posts/我听说.md","raw":"---\ntitle: 我听说\ndate: 2017-01-01 16:57:03\ntags:\n---\n![](https://upload-images.jianshu.io/upload_images/2743275-9bfadb628569fe76.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n　　我听说，有一种猫叫做雨猫。天气温暖时，它就变得蓬松毛绒绒的，像白云一样上浮，你可以拴着它，像放风筝一样走，它会变透明，阳光透得过它的身体。天气晦暗时它会变黑，坠在地上，满地乱跑，毛变得硬硬的，像刚刮过的胡茬一样。你得抱着它，等天气晴朗时，再把它放出去，就像风筝末梢放着一团棉花糖。\n\n------------\n\n\n\n　　我听说，有种青蛙，透明洁白，只吃茶叶。吃多之后，吐气如兰。冬天它便僵卧，张着大嘴，眠去一个季节。你往它肚里倒热水，水便成茶，馥郁芳香，可以倒在杯子里喝，香沁肺腑。有个女孩子，手头没有杯子，于是捧起青蛙，嘴对着嘴，把青蛙嘴当茶杯口。结果青蛙醒了，变成一白衣少年：“哪个公主吻了我？”\n\n------------\n\n<!--more-->\n　　我听说，有一种驯鹿，很爱长颈鹿的斑纹和气味，但是太矮，又碍于长颈鹿是哑巴，所以没法谈恋爱。于是它们就长起了杉树一样直拔云天的角，然后到处找一个人，在角的顶端造一个房子住着。每天，那个人负责在高树摘果子，送给长颈鹿吃，以促成驯鹿和长颈鹿的爱情——虽然见不到面，但灵魂相通的爱情。\n\n------------\n\n\n　　我听说，北方有一种松鼠，特别大，毛茸茸的，睡觉时喜欢摊开四肢，露出软绵绵的肚皮。你抓住一只，混熟了，就可以把它当床，睡在它的肚子上，用它的尾巴做被子。但它喜欢梦游，到处爬，所以你睡着前眼睛明明看见天花板的花纹，醒来时就可能看见松树枝、杉树枝、云、麻雀和松毛虫。\n\n------------\n\n\n　　我听说，有一种猫，特别怕冷，一遇到冷环境就全身长起蓬松松软绵绵的长毛，并且开始冬眠，怎么叫都不醒。冬天你把它挂在脖子上出门，就好像穿了件毛大衣。到了温暖的室内，它暖醒了，就喵一声跳下来，自己到炉子旁边去接着睡了。因为冬天很长，它在冬天基本是裘状，所以叫冬裘夏猫。\n\n------------\n\n\n　　我听说，有种野猪，睡一觉就长一层脂肪，起来跑一跑就练出一层肌肉，所以他身上肥瘦肥瘦，像夹心饼干。他爱去南方的海边泡澡，泡一身大粒子盐味，吹风，然后哼唧哼唧去温泉，一边蒸自己一边吃树叶子。你埋伏在温泉边，射倒它，能吃到现成的蒸火腿。你最好带蜂蜜，敷一遍再蒸，更好吃。\n\n------------\n\n\n　　我听说，以前有人喜欢在海蚌上写故事写诗。你走在海边，海蚌会跟你说：我身上有字，可以给你看噢，但有个条件，我不识字，你得念给我听。你答应了，海蚌就张开壳来，让你给它念故事。如果你看入神忘了继续念，或者企图摘抄剽窃，海蚌就会夹你一下；如果你念得好，海蚌就送你颗珍珠。\n\n------------\n\n\n　　我听说，南方有一种鸟，身材纤瘦，尾羽很长，善吟诗，平时看上去盈盈一握，却筋骨健壮。如果你和它混熟了，它就会把身体绷直，你可以握着它的腰，用它的嘴蘸墨、写字，画梅花、打印章时，还可以用它印个浅爪痕。可是它挑剔得很，墨质差，纸脏，字写得难看，或者句子毫无文采，它就会破口大骂：“居然用老娘写这么烂的文章！”\n\n------------\n\n\n我听说有种雪狐，极妩媚，皮毛柔滑。善学声音，爱恶作剧，喜在窗外学男主人女同学、女同事等声音，引女主人疑心吵架，引以为乐。被抓住后会要求：给你雪狐裘，放我走吧。若男主人不允，她便媚笑：原来是你舍不得我走啊嗯……女主人遂朝男主人双目圆睁：你留她干嘛，还不放走？心思又活络了嗯？！\n\n------------\n\n\n　　我听说，有种熊叫做云熊，其白如雪，其大若垂天之云。春天开始浮游，夏天吸取阳光。冬天，它随风在天空飘荡，到一个寒冷的地方，就开始下一团团的熊绒毛。熊绒可做大衣，闻得到夏天阳光的味道。熊绒落完，它也就飘下地来。你闻以蜂蜜，冬眠。到春天它长起了毛，就又变成云浮起来了。\n\n------------\n\n\n　　我听说有种蜗牛，寿命很长，以八千岁为春，以八千岁为秋。丈夫对妻子说，我要吻你一下，然后出门去买报纸。妻子就闭上眼，等了八天，吻到了，于是丈夫出门了。等他回来，妻子抱怨说：你这一走就是六百年，我好担心。丈夫说：哎呀，我是怕又过时了，站在那里花二百年把新闻看了嘛。\n\n------------\n\n\n　　我听说有种章鱼，善于下厨。你坐柜台后面，问它要三明治寿司刺身铁板烧咖啡茶涮锅烤串回锅肉，它舞起手臂们，切剔炒烹翻炸调撒料颠勺，又快又好，还能剩出三只手，一只负责收钱，两只和你打扑克解闷。但它开不起玩笑，偶尔它不小心手臂被铁板烫到，你可不能说“那我要这条章鱼烧！” 不然它就会舞起锅铲，任你是三头六臂也挡不住它四面八方朝你扔鱼丸。\n\n------------\n\n\n　　我听说有种虎鲸，很温柔，喜欢光，不潜游，但又怕晒。你在它背上铺沙子，张阳伞，它便喜欢你，任你在它背上住下，钓鱼、睡午觉、接吻、喝果汁。每天它张嘴吞许多小鱼，自己吃些，剩下的喷水送给你，于是你天天有新鲜刺身吃。偶然它也馋，愿意吃熟的，就会张嘴，要你抛给吃章鱼烧。\n","slug":"我听说","published":1,"updated":"2019-02-25T11:52:38.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irqw001o48dkjcmqmfdl","content":"<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-9bfadb628569fe76.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>　　我听说，有一种猫叫做雨猫。天气温暖时，它就变得蓬松毛绒绒的，像白云一样上浮，你可以拴着它，像放风筝一样走，它会变透明，阳光透得过它的身体。天气晦暗时它会变黑，坠在地上，满地乱跑，毛变得硬硬的，像刚刮过的胡茬一样。你得抱着它，等天气晴朗时，再把它放出去，就像风筝末梢放着一团棉花糖。</p>\n<hr>\n<p>　　我听说，有种青蛙，透明洁白，只吃茶叶。吃多之后，吐气如兰。冬天它便僵卧，张着大嘴，眠去一个季节。你往它肚里倒热水，水便成茶，馥郁芳香，可以倒在杯子里喝，香沁肺腑。有个女孩子，手头没有杯子，于是捧起青蛙，嘴对着嘴，把青蛙嘴当茶杯口。结果青蛙醒了，变成一白衣少年：“哪个公主吻了我？”</p>\n<hr>\n<a id=\"more\"></a>\n<p>　　我听说，有一种驯鹿，很爱长颈鹿的斑纹和气味，但是太矮，又碍于长颈鹿是哑巴，所以没法谈恋爱。于是它们就长起了杉树一样直拔云天的角，然后到处找一个人，在角的顶端造一个房子住着。每天，那个人负责在高树摘果子，送给长颈鹿吃，以促成驯鹿和长颈鹿的爱情——虽然见不到面，但灵魂相通的爱情。</p>\n<hr>\n<p>　　我听说，北方有一种松鼠，特别大，毛茸茸的，睡觉时喜欢摊开四肢，露出软绵绵的肚皮。你抓住一只，混熟了，就可以把它当床，睡在它的肚子上，用它的尾巴做被子。但它喜欢梦游，到处爬，所以你睡着前眼睛明明看见天花板的花纹，醒来时就可能看见松树枝、杉树枝、云、麻雀和松毛虫。</p>\n<hr>\n<p>　　我听说，有一种猫，特别怕冷，一遇到冷环境就全身长起蓬松松软绵绵的长毛，并且开始冬眠，怎么叫都不醒。冬天你把它挂在脖子上出门，就好像穿了件毛大衣。到了温暖的室内，它暖醒了，就喵一声跳下来，自己到炉子旁边去接着睡了。因为冬天很长，它在冬天基本是裘状，所以叫冬裘夏猫。</p>\n<hr>\n<p>　　我听说，有种野猪，睡一觉就长一层脂肪，起来跑一跑就练出一层肌肉，所以他身上肥瘦肥瘦，像夹心饼干。他爱去南方的海边泡澡，泡一身大粒子盐味，吹风，然后哼唧哼唧去温泉，一边蒸自己一边吃树叶子。你埋伏在温泉边，射倒它，能吃到现成的蒸火腿。你最好带蜂蜜，敷一遍再蒸，更好吃。</p>\n<hr>\n<p>　　我听说，以前有人喜欢在海蚌上写故事写诗。你走在海边，海蚌会跟你说：我身上有字，可以给你看噢，但有个条件，我不识字，你得念给我听。你答应了，海蚌就张开壳来，让你给它念故事。如果你看入神忘了继续念，或者企图摘抄剽窃，海蚌就会夹你一下；如果你念得好，海蚌就送你颗珍珠。</p>\n<hr>\n<p>　　我听说，南方有一种鸟，身材纤瘦，尾羽很长，善吟诗，平时看上去盈盈一握，却筋骨健壮。如果你和它混熟了，它就会把身体绷直，你可以握着它的腰，用它的嘴蘸墨、写字，画梅花、打印章时，还可以用它印个浅爪痕。可是它挑剔得很，墨质差，纸脏，字写得难看，或者句子毫无文采，它就会破口大骂：“居然用老娘写这么烂的文章！”</p>\n<hr>\n<p>我听说有种雪狐，极妩媚，皮毛柔滑。善学声音，爱恶作剧，喜在窗外学男主人女同学、女同事等声音，引女主人疑心吵架，引以为乐。被抓住后会要求：给你雪狐裘，放我走吧。若男主人不允，她便媚笑：原来是你舍不得我走啊嗯……女主人遂朝男主人双目圆睁：你留她干嘛，还不放走？心思又活络了嗯？！</p>\n<hr>\n<p>　　我听说，有种熊叫做云熊，其白如雪，其大若垂天之云。春天开始浮游，夏天吸取阳光。冬天，它随风在天空飘荡，到一个寒冷的地方，就开始下一团团的熊绒毛。熊绒可做大衣，闻得到夏天阳光的味道。熊绒落完，它也就飘下地来。你闻以蜂蜜，冬眠。到春天它长起了毛，就又变成云浮起来了。</p>\n<hr>\n<p>　　我听说有种蜗牛，寿命很长，以八千岁为春，以八千岁为秋。丈夫对妻子说，我要吻你一下，然后出门去买报纸。妻子就闭上眼，等了八天，吻到了，于是丈夫出门了。等他回来，妻子抱怨说：你这一走就是六百年，我好担心。丈夫说：哎呀，我是怕又过时了，站在那里花二百年把新闻看了嘛。</p>\n<hr>\n<p>　　我听说有种章鱼，善于下厨。你坐柜台后面，问它要三明治寿司刺身铁板烧咖啡茶涮锅烤串回锅肉，它舞起手臂们，切剔炒烹翻炸调撒料颠勺，又快又好，还能剩出三只手，一只负责收钱，两只和你打扑克解闷。但它开不起玩笑，偶尔它不小心手臂被铁板烫到，你可不能说“那我要这条章鱼烧！” 不然它就会舞起锅铲，任你是三头六臂也挡不住它四面八方朝你扔鱼丸。</p>\n<hr>\n<p>　　我听说有种虎鲸，很温柔，喜欢光，不潜游，但又怕晒。你在它背上铺沙子，张阳伞，它便喜欢你，任你在它背上住下，钓鱼、睡午觉、接吻、喝果汁。每天它张嘴吞许多小鱼，自己吃些，剩下的喷水送给你，于是你天天有新鲜刺身吃。偶然它也馋，愿意吃熟的，就会张嘴，要你抛给吃章鱼烧。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-9bfadb628569fe76.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<p>　　我听说，有一种猫叫做雨猫。天气温暖时，它就变得蓬松毛绒绒的，像白云一样上浮，你可以拴着它，像放风筝一样走，它会变透明，阳光透得过它的身体。天气晦暗时它会变黑，坠在地上，满地乱跑，毛变得硬硬的，像刚刮过的胡茬一样。你得抱着它，等天气晴朗时，再把它放出去，就像风筝末梢放着一团棉花糖。</p>\n<hr>\n<p>　　我听说，有种青蛙，透明洁白，只吃茶叶。吃多之后，吐气如兰。冬天它便僵卧，张着大嘴，眠去一个季节。你往它肚里倒热水，水便成茶，馥郁芳香，可以倒在杯子里喝，香沁肺腑。有个女孩子，手头没有杯子，于是捧起青蛙，嘴对着嘴，把青蛙嘴当茶杯口。结果青蛙醒了，变成一白衣少年：“哪个公主吻了我？”</p>\n<hr>","more":"<p>　　我听说，有一种驯鹿，很爱长颈鹿的斑纹和气味，但是太矮，又碍于长颈鹿是哑巴，所以没法谈恋爱。于是它们就长起了杉树一样直拔云天的角，然后到处找一个人，在角的顶端造一个房子住着。每天，那个人负责在高树摘果子，送给长颈鹿吃，以促成驯鹿和长颈鹿的爱情——虽然见不到面，但灵魂相通的爱情。</p>\n<hr>\n<p>　　我听说，北方有一种松鼠，特别大，毛茸茸的，睡觉时喜欢摊开四肢，露出软绵绵的肚皮。你抓住一只，混熟了，就可以把它当床，睡在它的肚子上，用它的尾巴做被子。但它喜欢梦游，到处爬，所以你睡着前眼睛明明看见天花板的花纹，醒来时就可能看见松树枝、杉树枝、云、麻雀和松毛虫。</p>\n<hr>\n<p>　　我听说，有一种猫，特别怕冷，一遇到冷环境就全身长起蓬松松软绵绵的长毛，并且开始冬眠，怎么叫都不醒。冬天你把它挂在脖子上出门，就好像穿了件毛大衣。到了温暖的室内，它暖醒了，就喵一声跳下来，自己到炉子旁边去接着睡了。因为冬天很长，它在冬天基本是裘状，所以叫冬裘夏猫。</p>\n<hr>\n<p>　　我听说，有种野猪，睡一觉就长一层脂肪，起来跑一跑就练出一层肌肉，所以他身上肥瘦肥瘦，像夹心饼干。他爱去南方的海边泡澡，泡一身大粒子盐味，吹风，然后哼唧哼唧去温泉，一边蒸自己一边吃树叶子。你埋伏在温泉边，射倒它，能吃到现成的蒸火腿。你最好带蜂蜜，敷一遍再蒸，更好吃。</p>\n<hr>\n<p>　　我听说，以前有人喜欢在海蚌上写故事写诗。你走在海边，海蚌会跟你说：我身上有字，可以给你看噢，但有个条件，我不识字，你得念给我听。你答应了，海蚌就张开壳来，让你给它念故事。如果你看入神忘了继续念，或者企图摘抄剽窃，海蚌就会夹你一下；如果你念得好，海蚌就送你颗珍珠。</p>\n<hr>\n<p>　　我听说，南方有一种鸟，身材纤瘦，尾羽很长，善吟诗，平时看上去盈盈一握，却筋骨健壮。如果你和它混熟了，它就会把身体绷直，你可以握着它的腰，用它的嘴蘸墨、写字，画梅花、打印章时，还可以用它印个浅爪痕。可是它挑剔得很，墨质差，纸脏，字写得难看，或者句子毫无文采，它就会破口大骂：“居然用老娘写这么烂的文章！”</p>\n<hr>\n<p>我听说有种雪狐，极妩媚，皮毛柔滑。善学声音，爱恶作剧，喜在窗外学男主人女同学、女同事等声音，引女主人疑心吵架，引以为乐。被抓住后会要求：给你雪狐裘，放我走吧。若男主人不允，她便媚笑：原来是你舍不得我走啊嗯……女主人遂朝男主人双目圆睁：你留她干嘛，还不放走？心思又活络了嗯？！</p>\n<hr>\n<p>　　我听说，有种熊叫做云熊，其白如雪，其大若垂天之云。春天开始浮游，夏天吸取阳光。冬天，它随风在天空飘荡，到一个寒冷的地方，就开始下一团团的熊绒毛。熊绒可做大衣，闻得到夏天阳光的味道。熊绒落完，它也就飘下地来。你闻以蜂蜜，冬眠。到春天它长起了毛，就又变成云浮起来了。</p>\n<hr>\n<p>　　我听说有种蜗牛，寿命很长，以八千岁为春，以八千岁为秋。丈夫对妻子说，我要吻你一下，然后出门去买报纸。妻子就闭上眼，等了八天，吻到了，于是丈夫出门了。等他回来，妻子抱怨说：你这一走就是六百年，我好担心。丈夫说：哎呀，我是怕又过时了，站在那里花二百年把新闻看了嘛。</p>\n<hr>\n<p>　　我听说有种章鱼，善于下厨。你坐柜台后面，问它要三明治寿司刺身铁板烧咖啡茶涮锅烤串回锅肉，它舞起手臂们，切剔炒烹翻炸调撒料颠勺，又快又好，还能剩出三只手，一只负责收钱，两只和你打扑克解闷。但它开不起玩笑，偶尔它不小心手臂被铁板烫到，你可不能说“那我要这条章鱼烧！” 不然它就会舞起锅铲，任你是三头六臂也挡不住它四面八方朝你扔鱼丸。</p>\n<hr>\n<p>　　我听说有种虎鲸，很温柔，喜欢光，不潜游，但又怕晒。你在它背上铺沙子，张阳伞，它便喜欢你，任你在它背上住下，钓鱼、睡午觉、接吻、喝果汁。每天它张嘴吞许多小鱼，自己吃些，剩下的喷水送给你，于是你天天有新鲜刺身吃。偶然它也馋，愿意吃熟的，就会张嘴，要你抛给吃章鱼烧。</p>"},{"title":"搭建 ElasticSearch 6.1.3分布式集群","description":"搭建 ElasticSearch 6.1.3分布式集群","date":"2018-04-17T07:57:03.000Z","_content":"#### ELasticsearch 6.1.3要求JDK版本最低为1.8\n\nmac上的本机ip为192.168.1.111,设为master节点，配置如下：\n\n\tcluster.name: my-application\n\tnode.name: node-111\n\n\tnetwork.host: 192.168.1.111\n\thttp.port: 9200\n\n\thttp.cors.enabled: true\n\thttp.cors.allow-origin: \"*\"\n\n\tnode.master: true\n\tnode.data: true\n\tdiscovery.zen.ping.unicast.hosts: [\"192.168.1.111\"]\n<!--more-->\nUbuntu机器的ip位192.168.1.102，配置如下：\n\t\n\tcluster.name: my-application\n\tnode.name: node-102\n\n\tnetwork.host: 192.168.1.102\n\thttp.port: 9200\n\n\thttp.cors.enabled: true\n\thttp.cors.allow-origin: \"*\"\n\n\tnode.master: false\n\tnode.data: true\n\tdiscovery.zen.ping.unicast.hosts: [\"192.168.1.111\"]\n\n先启动mac上的master，再启动Ubuntu上的slave节点，观察输出，会有一个node-102探测到master节点的提示：\n\n\t2017-06-07T11:33:39,369][INFO ][o.e.c.s.ClusterService   ] [node-102] detected_master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300}, added {{node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300},}, reason: zen-disco-receive(from master [master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300} committed version [8]])'\n\n\n访问head，一个master一个slave组成集群，界面如下：\n\n![这里写图片描述](http://upload-images.jianshu.io/upload_images/2743275-72a9f7da67487398?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### 单机多节点集群配置\n\n如果想要在一台机器上启动多个节点，步骤如下：\n\n1、复制一份ELasticsearch的安装包\n2、修改端口，比如一个是9200，一个是9205\n3、删除data目录下的数据(如果是新解压的安装包就不必了)","source":"_posts/搭建-ElasticSearch-6-1-3分布式集群.md","raw":"title: 搭建 ElasticSearch 6.1.3分布式集群\ntags: ELK日志分析\ndescription: 搭建 ElasticSearch 6.1.3分布式集群\ndate: 2018-04-17 15:57:03\n---\n#### ELasticsearch 6.1.3要求JDK版本最低为1.8\n\nmac上的本机ip为192.168.1.111,设为master节点，配置如下：\n\n\tcluster.name: my-application\n\tnode.name: node-111\n\n\tnetwork.host: 192.168.1.111\n\thttp.port: 9200\n\n\thttp.cors.enabled: true\n\thttp.cors.allow-origin: \"*\"\n\n\tnode.master: true\n\tnode.data: true\n\tdiscovery.zen.ping.unicast.hosts: [\"192.168.1.111\"]\n<!--more-->\nUbuntu机器的ip位192.168.1.102，配置如下：\n\t\n\tcluster.name: my-application\n\tnode.name: node-102\n\n\tnetwork.host: 192.168.1.102\n\thttp.port: 9200\n\n\thttp.cors.enabled: true\n\thttp.cors.allow-origin: \"*\"\n\n\tnode.master: false\n\tnode.data: true\n\tdiscovery.zen.ping.unicast.hosts: [\"192.168.1.111\"]\n\n先启动mac上的master，再启动Ubuntu上的slave节点，观察输出，会有一个node-102探测到master节点的提示：\n\n\t2017-06-07T11:33:39,369][INFO ][o.e.c.s.ClusterService   ] [node-102] detected_master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300}, added {{node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300},}, reason: zen-disco-receive(from master [master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300} committed version [8]])'\n\n\n访问head，一个master一个slave组成集群，界面如下：\n\n![这里写图片描述](http://upload-images.jianshu.io/upload_images/2743275-72a9f7da67487398?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### 单机多节点集群配置\n\n如果想要在一台机器上启动多个节点，步骤如下：\n\n1、复制一份ELasticsearch的安装包\n2、修改端口，比如一个是9200，一个是9205\n3、删除data目录下的数据(如果是新解压的安装包就不必了)","slug":"搭建-ElasticSearch-6-1-3分布式集群","published":1,"updated":"2018-06-05T11:40:32.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irr2001q48dkplnkz6g2","content":"<h4 id=\"ELasticsearch-6-1-3要求JDK版本最低为1-8\"><a href=\"#ELasticsearch-6-1-3要求JDK版本最低为1-8\" class=\"headerlink\" title=\"ELasticsearch 6.1.3要求JDK版本最低为1.8\"></a>ELasticsearch 6.1.3要求JDK版本最低为1.8</h4><p>mac上的本机ip为192.168.1.111,设为master节点，配置如下：</p>\n<pre><code>cluster.name: my-application\nnode.name: node-111\n\nnetwork.host: 192.168.1.111\nhttp.port: 9200\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\n\nnode.master: true\nnode.data: true\ndiscovery.zen.ping.unicast.hosts: [&quot;192.168.1.111&quot;]\n</code></pre><a id=\"more\"></a>\n<p>Ubuntu机器的ip位192.168.1.102，配置如下：</p>\n<pre><code>cluster.name: my-application\nnode.name: node-102\n\nnetwork.host: 192.168.1.102\nhttp.port: 9200\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\n\nnode.master: false\nnode.data: true\ndiscovery.zen.ping.unicast.hosts: [&quot;192.168.1.111&quot;]\n</code></pre><p>先启动mac上的master，再启动Ubuntu上的slave节点，观察输出，会有一个node-102探测到master节点的提示：</p>\n<pre><code>2017-06-07T11:33:39,369][INFO ][o.e.c.s.ClusterService   ] [node-102] detected_master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300}, added {{node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300},}, reason: zen-disco-receive(from master [master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300} committed version [8]])&apos;\n</code></pre><p>访问head，一个master一个slave组成集群，界面如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-72a9f7da67487398?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"这里写图片描述\"></p>\n<h3 id=\"单机多节点集群配置\"><a href=\"#单机多节点集群配置\" class=\"headerlink\" title=\"单机多节点集群配置\"></a>单机多节点集群配置</h3><p>如果想要在一台机器上启动多个节点，步骤如下：</p>\n<p>1、复制一份ELasticsearch的安装包<br>2、修改端口，比如一个是9200，一个是9205<br>3、删除data目录下的数据(如果是新解压的安装包就不必了)</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"ELasticsearch-6-1-3要求JDK版本最低为1-8\"><a href=\"#ELasticsearch-6-1-3要求JDK版本最低为1-8\" class=\"headerlink\" title=\"ELasticsearch 6.1.3要求JDK版本最低为1.8\"></a>ELasticsearch 6.1.3要求JDK版本最低为1.8</h4><p>mac上的本机ip为192.168.1.111,设为master节点，配置如下：</p>\n<pre><code>cluster.name: my-application\nnode.name: node-111\n\nnetwork.host: 192.168.1.111\nhttp.port: 9200\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\n\nnode.master: true\nnode.data: true\ndiscovery.zen.ping.unicast.hosts: [&quot;192.168.1.111&quot;]\n</code></pre>","more":"<p>Ubuntu机器的ip位192.168.1.102，配置如下：</p>\n<pre><code>cluster.name: my-application\nnode.name: node-102\n\nnetwork.host: 192.168.1.102\nhttp.port: 9200\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\n\nnode.master: false\nnode.data: true\ndiscovery.zen.ping.unicast.hosts: [&quot;192.168.1.111&quot;]\n</code></pre><p>先启动mac上的master，再启动Ubuntu上的slave节点，观察输出，会有一个node-102探测到master节点的提示：</p>\n<pre><code>2017-06-07T11:33:39,369][INFO ][o.e.c.s.ClusterService   ] [node-102] detected_master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300}, added {{node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300},}, reason: zen-disco-receive(from master [master {node-111}{3dQd1RRVTMiKdTckM68nPQ}{H6Zu7PAQRWewUBcllsQWTQ}{192.168.1.111}{192.168.1.111:9300} committed version [8]])&apos;\n</code></pre><p>访问head，一个master一个slave组成集群，界面如下：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-72a9f7da67487398?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"这里写图片描述\"></p>\n<h3 id=\"单机多节点集群配置\"><a href=\"#单机多节点集群配置\" class=\"headerlink\" title=\"单机多节点集群配置\"></a>单机多节点集群配置</h3><p>如果想要在一台机器上启动多个节点，步骤如下：</p>\n<p>1、复制一份ELasticsearch的安装包<br>2、修改端口，比如一个是9200，一个是9205<br>3、删除data目录下的数据(如果是新解压的安装包就不必了)</p>"},{"title":"新增Hexo博客文章置顶功能","date":"2019-02-25T03:40:00.000Z","description":"新增Hexo博客文章置顶功能","_content":"###### 修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js\n需要添加的代码：\n```javascript\nposts.data = posts.data.sort(function(a, b) {\n      if(a.top && b.top) {\n          if(a.top == b.top) return b.date - a.date;\n          else return b.top - a.top;\n      }\n      else if(a.top && !b.top) {\n          return -1;\n      }\n      else if(!a.top && b.top) {\n          return 1;\n      }\n      else return b.date - a.date;\n  });\n```\n<!--more-->\n以下是最终的generator.js内容：\n```javascript\n'use strict';\n\nvar pagination = require('hexo-pagination');\n\nmodule.exports = function(locals) {\n  var config = this.config;\n  var posts = locals.posts.sort(config.index_generator.order_by);\n\n  posts.data = posts.data.sort(function(a, b) {\n      if(a.top && b.top) {\n          if(a.top == b.top) return b.date - a.date;\n          else return b.top - a.top;\n      }\n      else if(a.top && !b.top) {\n          return -1;\n      }\n      else if(!a.top && b.top) {\n          return 1;\n      }\n      else return b.date - a.date;\n  });\n\n  var paginationDir = config.pagination_dir || 'page';\n  var path = config.index_generator.path || '';\n\n  return pagination(path, posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n```\n----\n如何使用：在需要置顶的文章添加top属性即可，排序从小到大![](https://upload-images.jianshu.io/upload_images/2743275-85427a7ca0fa1c91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n----\n博客效果：![](https://upload-images.jianshu.io/upload_images/2743275-d3826b5a2d621b67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n----\n##### Tips:常用hexo命令\n```bash\n# hexo n == hexo new\n# hexo g == 生成\n# hexo s == 启动服务\n```\n","source":"_posts/新增Hexo博客文章置顶功能.md","raw":"---\ntitle: 新增Hexo博客文章置顶功能\ndate: 2019-02-25 11:40\ntags: 日记本\ndescription: 新增Hexo博客文章置顶功能\n---\n###### 修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js\n需要添加的代码：\n```javascript\nposts.data = posts.data.sort(function(a, b) {\n      if(a.top && b.top) {\n          if(a.top == b.top) return b.date - a.date;\n          else return b.top - a.top;\n      }\n      else if(a.top && !b.top) {\n          return -1;\n      }\n      else if(!a.top && b.top) {\n          return 1;\n      }\n      else return b.date - a.date;\n  });\n```\n<!--more-->\n以下是最终的generator.js内容：\n```javascript\n'use strict';\n\nvar pagination = require('hexo-pagination');\n\nmodule.exports = function(locals) {\n  var config = this.config;\n  var posts = locals.posts.sort(config.index_generator.order_by);\n\n  posts.data = posts.data.sort(function(a, b) {\n      if(a.top && b.top) {\n          if(a.top == b.top) return b.date - a.date;\n          else return b.top - a.top;\n      }\n      else if(a.top && !b.top) {\n          return -1;\n      }\n      else if(!a.top && b.top) {\n          return 1;\n      }\n      else return b.date - a.date;\n  });\n\n  var paginationDir = config.pagination_dir || 'page';\n  var path = config.index_generator.path || '';\n\n  return pagination(path, posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n```\n----\n如何使用：在需要置顶的文章添加top属性即可，排序从小到大![](https://upload-images.jianshu.io/upload_images/2743275-85427a7ca0fa1c91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n----\n博客效果：![](https://upload-images.jianshu.io/upload_images/2743275-d3826b5a2d621b67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n----\n##### Tips:常用hexo命令\n```bash\n# hexo n == hexo new\n# hexo g == 生成\n# hexo s == 启动服务\n```\n","slug":"新增Hexo博客文章置顶功能","published":1,"updated":"2019-02-25T13:53:43.286Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irr5001s48dkmmydep5p","content":"<h6 id=\"修改Hexo文件夹下的node-modules-hexo-generator-index-lib-generator-js\"><a href=\"#修改Hexo文件夹下的node-modules-hexo-generator-index-lib-generator-js\" class=\"headerlink\" title=\"修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js\"></a>修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js</h6><p>需要添加的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>以下是最终的generator.js内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = <span class=\"keyword\">this</span>.config;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> posts = locals.posts.sort(config.index_generator.order_by);</span><br><span class=\"line\"></span><br><span class=\"line\">  posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">'page'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = config.index_generator.path || <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(path, posts, &#123;</span><br><span class=\"line\">    perPage: config.index_generator.per_page,</span><br><span class=\"line\">    layout: [<span class=\"string\">'index'</span>, <span class=\"string\">'archive'</span>],</span><br><span class=\"line\">    format: paginationDir + <span class=\"string\">'/%d/'</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      __index: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>如何使用：在需要置顶的文章添加top属性即可，排序从小到大<img src=\"https://upload-images.jianshu.io/upload_images/2743275-85427a7ca0fa1c91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p>博客效果：<img src=\"https://upload-images.jianshu.io/upload_images/2743275-d3826b5a2d621b67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"Tips-常用hexo命令\"><a href=\"#Tips-常用hexo命令\" class=\"headerlink\" title=\"Tips:常用hexo命令\"></a>Tips:常用hexo命令</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo n == hexo new</span></span><br><span class=\"line\"><span class=\"comment\"># hexo g == 生成</span></span><br><span class=\"line\"><span class=\"comment\"># hexo s == 启动服务</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h6 id=\"修改Hexo文件夹下的node-modules-hexo-generator-index-lib-generator-js\"><a href=\"#修改Hexo文件夹下的node-modules-hexo-generator-index-lib-generator-js\" class=\"headerlink\" title=\"修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js\"></a>修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js</h6><p>需要添加的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>","more":"<p>以下是最终的generator.js内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = <span class=\"keyword\">this</span>.config;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> posts = locals.posts.sort(config.index_generator.order_by);</span><br><span class=\"line\"></span><br><span class=\"line\">  posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">'page'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> path = config.index_generator.path || <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(path, posts, &#123;</span><br><span class=\"line\">    perPage: config.index_generator.per_page,</span><br><span class=\"line\">    layout: [<span class=\"string\">'index'</span>, <span class=\"string\">'archive'</span>],</span><br><span class=\"line\">    format: paginationDir + <span class=\"string\">'/%d/'</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      __index: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>如何使用：在需要置顶的文章添加top属性即可，排序从小到大<img src=\"https://upload-images.jianshu.io/upload_images/2743275-85427a7ca0fa1c91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<p>博客效果：<img src=\"https://upload-images.jianshu.io/upload_images/2743275-d3826b5a2d621b67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"Tips-常用hexo命令\"><a href=\"#Tips-常用hexo命令\" class=\"headerlink\" title=\"Tips:常用hexo命令\"></a>Tips:常用hexo命令</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo n == hexo new</span></span><br><span class=\"line\"><span class=\"comment\"># hexo g == 生成</span></span><br><span class=\"line\"><span class=\"comment\"># hexo s == 启动服务</span></span><br></pre></td></tr></table></figure>"},{"title":"解决MariaDB中文乱码","date":"2018-04-26T07:46:00.000Z","description":"解决MariaDB中文乱码","_content":"#### 1.检查自己数据库编码\n\t# mysql -uroot -proot\n\t# show VARIABLES like 'char%';\n\n![](https://upload-images.jianshu.io/upload_images/2743275-aed00e544adf23d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!--more-->\n#### 2.更改Client和Server编码都是UTF-8\n\n\t# vim /etc/my.cnf.d/server.cnf\n###### 在server.cnf中[mysqld]添加如下代码\n\n\tinit-connect='SET NAMES utf8'  \n\tcharacter-set-server = utf8\n\n![](https://upload-images.jianshu.io/upload_images/2743275-109f93534d06e671.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n###### 重启MariaDB即可\n\t# systemctl restart mariadb\n\t如果已经添加为服务\n\t# service mysqld restart","source":"_posts/解决MariaDB中文乱码.md","raw":"---\ntitle: 解决MariaDB中文乱码\ndate: 2018-04-26 15:46\ntags: Linux\ndescription: 解决MariaDB中文乱码\n---\n#### 1.检查自己数据库编码\n\t# mysql -uroot -proot\n\t# show VARIABLES like 'char%';\n\n![](https://upload-images.jianshu.io/upload_images/2743275-aed00e544adf23d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!--more-->\n#### 2.更改Client和Server编码都是UTF-8\n\n\t# vim /etc/my.cnf.d/server.cnf\n###### 在server.cnf中[mysqld]添加如下代码\n\n\tinit-connect='SET NAMES utf8'  \n\tcharacter-set-server = utf8\n\n![](https://upload-images.jianshu.io/upload_images/2743275-109f93534d06e671.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n###### 重启MariaDB即可\n\t# systemctl restart mariadb\n\t如果已经添加为服务\n\t# service mysqld restart","slug":"解决MariaDB中文乱码","published":1,"updated":"2019-02-26T13:51:51.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irr8001u48dk9uz4bffe","content":"<h4 id=\"1-检查自己数据库编码\"><a href=\"#1-检查自己数据库编码\" class=\"headerlink\" title=\"1.检查自己数据库编码\"></a>1.检查自己数据库编码</h4><pre><code># mysql -uroot -proot\n# show VARIABLES like &apos;char%&apos;;\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-aed00e544adf23d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h4 id=\"2-更改Client和Server编码都是UTF-8\"><a href=\"#2-更改Client和Server编码都是UTF-8\" class=\"headerlink\" title=\"2.更改Client和Server编码都是UTF-8\"></a>2.更改Client和Server编码都是UTF-8</h4><pre><code># vim /etc/my.cnf.d/server.cnf\n</code></pre><h6 id=\"在server-cnf中-mysqld-添加如下代码\"><a href=\"#在server-cnf中-mysqld-添加如下代码\" class=\"headerlink\" title=\"在server.cnf中[mysqld]添加如下代码\"></a>在server.cnf中[mysqld]添加如下代码</h6><pre><code>init-connect=&apos;SET NAMES utf8&apos;  \ncharacter-set-server = utf8\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-109f93534d06e671.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"重启MariaDB即可\"><a href=\"#重启MariaDB即可\" class=\"headerlink\" title=\"重启MariaDB即可\"></a>重启MariaDB即可</h6><pre><code># systemctl restart mariadb\n如果已经添加为服务\n# service mysqld restart\n</code></pre>","site":{"data":{}},"excerpt":"<h4 id=\"1-检查自己数据库编码\"><a href=\"#1-检查自己数据库编码\" class=\"headerlink\" title=\"1.检查自己数据库编码\"></a>1.检查自己数据库编码</h4><pre><code># mysql -uroot -proot\n# show VARIABLES like &apos;char%&apos;;\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-aed00e544adf23d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>","more":"<h4 id=\"2-更改Client和Server编码都是UTF-8\"><a href=\"#2-更改Client和Server编码都是UTF-8\" class=\"headerlink\" title=\"2.更改Client和Server编码都是UTF-8\"></a>2.更改Client和Server编码都是UTF-8</h4><pre><code># vim /etc/my.cnf.d/server.cnf\n</code></pre><h6 id=\"在server-cnf中-mysqld-添加如下代码\"><a href=\"#在server-cnf中-mysqld-添加如下代码\" class=\"headerlink\" title=\"在server.cnf中[mysqld]添加如下代码\"></a>在server.cnf中[mysqld]添加如下代码</h6><pre><code>init-connect=&apos;SET NAMES utf8&apos;  \ncharacter-set-server = utf8\n</code></pre><p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-109f93534d06e671.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<h6 id=\"重启MariaDB即可\"><a href=\"#重启MariaDB即可\" class=\"headerlink\" title=\"重启MariaDB即可\"></a>重启MariaDB即可</h6><pre><code># systemctl restart mariadb\n如果已经添加为服务\n# service mysqld restart\n</code></pre>"},{"title":"解决Tomcat在IDEA控制台中文乱码的问题","date":"2019-02-18T06:01:00.000Z","description":"解决Tomcat在IDEA控制台中文乱码的问题","_content":"###### 在idea的安装目录下的bin/idea.exe.vmoptions文件和idea64.exe.vmoptions文件的末尾另起一行添加\n```shell\n-Dfile.encoding=UTF-8\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-61972ac0c4df530b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/解决Tomcat在IDEA控制台中文乱码的问题.md","raw":"---\ntitle: 解决Tomcat在IDEA控制台中文乱码的问题\ndate: 2019-02-18 14:01\ntags: 日记本\ndescription: 解决Tomcat在IDEA控制台中文乱码的问题\n---\n###### 在idea的安装目录下的bin/idea.exe.vmoptions文件和idea64.exe.vmoptions文件的末尾另起一行添加\n```shell\n-Dfile.encoding=UTF-8\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-61972ac0c4df530b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"解决Tomcat在IDEA控制台中文乱码的问题","published":1,"updated":"2019-02-25T13:45:43.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt58irra001w48dkf2h6rnbv","content":"<h6 id=\"在idea的安装目录下的bin-idea-exe-vmoptions文件和idea64-exe-vmoptions文件的末尾另起一行添加\"><a href=\"#在idea的安装目录下的bin-idea-exe-vmoptions文件和idea64-exe-vmoptions文件的末尾另起一行添加\" class=\"headerlink\" title=\"在idea的安装目录下的bin/idea.exe.vmoptions文件和idea64.exe.vmoptions文件的末尾另起一行添加\"></a>在idea的安装目录下的bin/idea.exe.vmoptions文件和idea64.exe.vmoptions文件的末尾另起一行添加</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-61972ac0c4df530b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h6 id=\"在idea的安装目录下的bin-idea-exe-vmoptions文件和idea64-exe-vmoptions文件的末尾另起一行添加\"><a href=\"#在idea的安装目录下的bin-idea-exe-vmoptions文件和idea64-exe-vmoptions文件的末尾另起一行添加\" class=\"headerlink\" title=\"在idea的安装目录下的bin/idea.exe.vmoptions文件和idea64.exe.vmoptions文件的末尾另起一行添加\"></a>在idea的安装目录下的bin/idea.exe.vmoptions文件和idea64.exe.vmoptions文件的末尾另起一行添加</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-61972ac0c4df530b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n"},{"title":"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！","date":"2018-02-04T06:02:12.000Z","comments":1,"description":"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！","_content":" \n 网络上为赵丽颖晋身为Dior新代言人，为baby抱屈而打口水仗的人们依旧在评论区喋喋不休。\n\n网友不是头一次抹黑赵丽颖，也不是第一次对她评头论足。\n\n他们从来没忘记赵丽颖的中专文凭、农村出身、补刀神手的人设，以及她在时尚界那次长裙美背后却贴小花纸的“土美”事件。\n\n他们从来没想到她以一张包子脸的长相也能进军时尚界甚至可以开疆辟土，能在颜控大长腿的天下里挤得一席之地。\n<!--more-->\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-53f4e13ae7bb957c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n别说喷子们不服，就连那些以颜值、身材傲娇的模特们甚至也要掂量下要不要去拍部剧来充实一下自己的市场含金量。\n\n也许，不过是因为赵丽颖改变了某些市场主导者的审美标准，也或者因为她让人们看到了属于某种叫做内在因素的美学吸引力。\n\n在风云突变的娱乐圈子里，令人眼花缭乱的美的形式层出不穷，种种以花瓶自居的美少女美男子更是如过江之鲫。可以说美常有，花瓶亦常有，但是以内在实力让人发现美的内在的，却不常见。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-8a989c5bb640f4bf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n黄渤算是特例，他从来不以帅著称。\n\n但是他有让人透过“看似抽象的外表”发现其演技魅力的能耐，继而在大大小小的场合，能让人心悦诚服地体会到他妙语连珠舌灿生花的高情商魅力。这大概就属于那种可以满足人们精神需要层次的美了。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-4d63302781989ff0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n周冬雨也算特例，而且特例得很成功。\n\n作为18岁时就荣升为“谋女郎”的幸运儿，她的演技她的颜值，在进入电影学院以及刚毕业的阶段，都不算是人们口中的佼佼者。甚至在很长一段时间里，人们总能从她刻意扮老的衣着里发现“令人扼腕”的衣品。\n\n她没有好身材，她也曾自嘲“自己二十四岁的年纪里，有的是十四岁的身材”；她没有欧式大眼睛，她笑起来眼睛眯成一条线的样子的确像自嘲的“小蝌蚪”“小黄鸭”。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-d0b5d1c133826c9e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n可是她知道衣品可以偷偷修炼，演技亦可以让那些吐槽她的人对她黑转粉。\n\n现在的周冬雨，总能用梨花带雨的哭或明媚如初恋的笑牵引着观众去发现她的灵动、可爱、放肆、潇洒。她是安生、顾胜男、肖红，还是宇宙CP心中念念不忘的“小蝌蚪”。她用角色在无数人心中收获对她别样之美的肯定。\n\n诚然，她瘦小单薄，不够丰盈饱满。但是她会努力想尽各种办法，去让自己中学时因练舞而壮硕的小腿变瘦再变瘦。于是与别人比，她会胜在肌肤胜雪、会胜在后天小白腿又瘦又直所营造出的纯真干净气质上。所以，懂得适合自己穿衣风格的姑娘，懂得扬长避短的她，终会在可以抱着奖杯时靠衣品靠气质在时尚界锦上添花。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-cb84c86409b3303d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n周冬雨也许可以成为赵丽颖在衣品上征服人心的榜样。她们虽然不够天资卓越，但胜在后天足够努力。尽管她们都曾被人很批过说话耿直情商感人，但是胜在她们都足够心大如海，能把注意力转移到自己钟爱的演技磨砺层面，继而以实力赢得业界尊重。\n\n这时代，从耀眼高台跌倒下来的明星不胜枚举，在底层逆境中一点一点攀爬努力的演员亦多如星辰。但不管她们处在什么阶段，能够给予她们自信的，永远是自己对所爱事业的追梦执念，和一次次挫败后的执着坚持。\n\n正所谓“闻道有先后，术业有专攻”。多少演员成为明星，立足的资本，成名的资本，踏入时尚圈的资本，永远是彰显实力的代表作。也就是说，唯有专注于自己的术业，才能脱胎换骨，再上台阶；才能有机会发光发亮，才够得住机会来时的橄榄枝！\n\n出道十年，赵丽颖从选秀开始奋斗，跑过无数龙套，在扎扎实实的演技磨砺中成就了陆贞、杉杉、花千骨、楚乔等多个被人记到心里的角色，也算是用步步的成就证明了从平凡到华丽蜕变的自我价值。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-b650a625da475f1b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n就算曾经土气又如何，曾经籍籍无名又如何，谁的人生不是在不断修炼中成长?当你拥有一颗坚忍倔强的心，埋首修剪自我的不足时，就没空在乎别人说长道短了。\n\n就像赵丽颖曾说的，人到一定程度，就不会再计较那么多了；以前会怕这个、怕那个，但是她觉得现在的自己心态很平和，状态也还挺好；对于这些东西就更不在意了。\n\n正所谓，你若淡看风云，窗前自有云卷云舒的自在；你若似繁花锦绣，周围自有蝴蝶悄然翩跹。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-a9e30f2c8ddd5f04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n诚然，梦想不必过早就实现，也不必实现了就止步于当下。\n\n我们总有困顿迷惑自我怀疑的时候，就像努力了很多年的前夫哥雷佳音，在出演鹿兆鹏几个月都快要抑郁的时候，等来了陈俊生、裴纶这样一个可以证明自己实力的角色。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-8d20f5c9550d4809.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n就像被离婚大战拖累到几乎要完全没有出路的潘粤明，在跨界歌王中唱出了文艺小生的双面挣扎，也让自己有机会被制作方看中可塑性而出演了证明自己炸裂演技的角色“白夜兄弟”。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-ecab8a59519a96cf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n我们总有会爬上某个看似自我高峰的时刻，唯有清醒和自省能让自己行远路行得远。\n\n就像周冬雨的小妞人设演多了，也需要调整战略在别的角色领域里证明自己的可塑性。就像赵丽颖的进阶更上层楼了，也需要在学识修养衣品方面内外兼修裨补缺漏。\n\n有人说，任何人都不是超人，你的心思放在哪儿是可以看见的。\n\n当你眼中只有名利时，纵然有一千万中想红想赚快钱的途径，但是如日中天如薛之谦又如何，火箭般翻红的速度，维持的时间却不过是两年。\n\n当没有创新度的段子梗被他在上百个节目中玩到泛滥时，当没有专情如一的人品来维持深情人设而被昔日恋人李雨桐扒个底朝天的时候，名利来得快走得也快，还顺便把你打倒至众人踩众人唾弃的深渊。\n\n傅雷说，我们的确是盲目着在世界上前进的。但是当你行走于世越深入，你才发现你的双眼你的灵魂会容易被浮华蔽眼而陷入盲目。\n\n没有谁不渴望事业成功荣耀加身，但是能救赎我们灵魂的永远是自己可以拿得出手的自己钟爱的作品。\n\n如好剧本之于演员，好书籍之于作家，好项目之于商人，好工作之于普通人。我们行走江湖的目的，就是用尽自己的全部能耐把本来就好的璞玉打造成臻于完美的玉石。\n\n至于随之而来的物质累积、名誉傍身，都不过是立足于其上的附加之物。本立则荣加，本无则荣枯。明白这一点，世人眼中关于你的值不值得，都不足以撼动你对自己的肯定。\n\n","source":"_posts/赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！.md","raw":"---\ntitle: 赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\ndate: 2018-02-04 14:02:12\ntags: 记录生活点滴\ncomments: true\ndescription: 赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n---\n \n 网络上为赵丽颖晋身为Dior新代言人，为baby抱屈而打口水仗的人们依旧在评论区喋喋不休。\n\n网友不是头一次抹黑赵丽颖，也不是第一次对她评头论足。\n\n他们从来没忘记赵丽颖的中专文凭、农村出身、补刀神手的人设，以及她在时尚界那次长裙美背后却贴小花纸的“土美”事件。\n\n他们从来没想到她以一张包子脸的长相也能进军时尚界甚至可以开疆辟土，能在颜控大长腿的天下里挤得一席之地。\n<!--more-->\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-53f4e13ae7bb957c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n别说喷子们不服，就连那些以颜值、身材傲娇的模特们甚至也要掂量下要不要去拍部剧来充实一下自己的市场含金量。\n\n也许，不过是因为赵丽颖改变了某些市场主导者的审美标准，也或者因为她让人们看到了属于某种叫做内在因素的美学吸引力。\n\n在风云突变的娱乐圈子里，令人眼花缭乱的美的形式层出不穷，种种以花瓶自居的美少女美男子更是如过江之鲫。可以说美常有，花瓶亦常有，但是以内在实力让人发现美的内在的，却不常见。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-8a989c5bb640f4bf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n黄渤算是特例，他从来不以帅著称。\n\n但是他有让人透过“看似抽象的外表”发现其演技魅力的能耐，继而在大大小小的场合，能让人心悦诚服地体会到他妙语连珠舌灿生花的高情商魅力。这大概就属于那种可以满足人们精神需要层次的美了。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-4d63302781989ff0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n周冬雨也算特例，而且特例得很成功。\n\n作为18岁时就荣升为“谋女郎”的幸运儿，她的演技她的颜值，在进入电影学院以及刚毕业的阶段，都不算是人们口中的佼佼者。甚至在很长一段时间里，人们总能从她刻意扮老的衣着里发现“令人扼腕”的衣品。\n\n她没有好身材，她也曾自嘲“自己二十四岁的年纪里，有的是十四岁的身材”；她没有欧式大眼睛，她笑起来眼睛眯成一条线的样子的确像自嘲的“小蝌蚪”“小黄鸭”。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-d0b5d1c133826c9e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n可是她知道衣品可以偷偷修炼，演技亦可以让那些吐槽她的人对她黑转粉。\n\n现在的周冬雨，总能用梨花带雨的哭或明媚如初恋的笑牵引着观众去发现她的灵动、可爱、放肆、潇洒。她是安生、顾胜男、肖红，还是宇宙CP心中念念不忘的“小蝌蚪”。她用角色在无数人心中收获对她别样之美的肯定。\n\n诚然，她瘦小单薄，不够丰盈饱满。但是她会努力想尽各种办法，去让自己中学时因练舞而壮硕的小腿变瘦再变瘦。于是与别人比，她会胜在肌肤胜雪、会胜在后天小白腿又瘦又直所营造出的纯真干净气质上。所以，懂得适合自己穿衣风格的姑娘，懂得扬长避短的她，终会在可以抱着奖杯时靠衣品靠气质在时尚界锦上添花。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-cb84c86409b3303d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n周冬雨也许可以成为赵丽颖在衣品上征服人心的榜样。她们虽然不够天资卓越，但胜在后天足够努力。尽管她们都曾被人很批过说话耿直情商感人，但是胜在她们都足够心大如海，能把注意力转移到自己钟爱的演技磨砺层面，继而以实力赢得业界尊重。\n\n这时代，从耀眼高台跌倒下来的明星不胜枚举，在底层逆境中一点一点攀爬努力的演员亦多如星辰。但不管她们处在什么阶段，能够给予她们自信的，永远是自己对所爱事业的追梦执念，和一次次挫败后的执着坚持。\n\n正所谓“闻道有先后，术业有专攻”。多少演员成为明星，立足的资本，成名的资本，踏入时尚圈的资本，永远是彰显实力的代表作。也就是说，唯有专注于自己的术业，才能脱胎换骨，再上台阶；才能有机会发光发亮，才够得住机会来时的橄榄枝！\n\n出道十年，赵丽颖从选秀开始奋斗，跑过无数龙套，在扎扎实实的演技磨砺中成就了陆贞、杉杉、花千骨、楚乔等多个被人记到心里的角色，也算是用步步的成就证明了从平凡到华丽蜕变的自我价值。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-b650a625da475f1b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n就算曾经土气又如何，曾经籍籍无名又如何，谁的人生不是在不断修炼中成长?当你拥有一颗坚忍倔强的心，埋首修剪自我的不足时，就没空在乎别人说长道短了。\n\n就像赵丽颖曾说的，人到一定程度，就不会再计较那么多了；以前会怕这个、怕那个，但是她觉得现在的自己心态很平和，状态也还挺好；对于这些东西就更不在意了。\n\n正所谓，你若淡看风云，窗前自有云卷云舒的自在；你若似繁花锦绣，周围自有蝴蝶悄然翩跹。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-a9e30f2c8ddd5f04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n诚然，梦想不必过早就实现，也不必实现了就止步于当下。\n\n我们总有困顿迷惑自我怀疑的时候，就像努力了很多年的前夫哥雷佳音，在出演鹿兆鹏几个月都快要抑郁的时候，等来了陈俊生、裴纶这样一个可以证明自己实力的角色。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-8d20f5c9550d4809.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n就像被离婚大战拖累到几乎要完全没有出路的潘粤明，在跨界歌王中唱出了文艺小生的双面挣扎，也让自己有机会被制作方看中可塑性而出演了证明自己炸裂演技的角色“白夜兄弟”。\n\n![赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！](http://upload-images.jianshu.io/upload_images/2743275-ecab8a59519a96cf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\n\n我们总有会爬上某个看似自我高峰的时刻，唯有清醒和自省能让自己行远路行得远。\n\n就像周冬雨的小妞人设演多了，也需要调整战略在别的角色领域里证明自己的可塑性。就像赵丽颖的进阶更上层楼了，也需要在学识修养衣品方面内外兼修裨补缺漏。\n\n有人说，任何人都不是超人，你的心思放在哪儿是可以看见的。\n\n当你眼中只有名利时，纵然有一千万中想红想赚快钱的途径，但是如日中天如薛之谦又如何，火箭般翻红的速度，维持的时间却不过是两年。\n\n当没有创新度的段子梗被他在上百个节目中玩到泛滥时，当没有专情如一的人品来维持深情人设而被昔日恋人李雨桐扒个底朝天的时候，名利来得快走得也快，还顺便把你打倒至众人踩众人唾弃的深渊。\n\n傅雷说，我们的确是盲目着在世界上前进的。但是当你行走于世越深入，你才发现你的双眼你的灵魂会容易被浮华蔽眼而陷入盲目。\n\n没有谁不渴望事业成功荣耀加身，但是能救赎我们灵魂的永远是自己可以拿得出手的自己钟爱的作品。\n\n如好剧本之于演员，好书籍之于作家，好项目之于商人，好工作之于普通人。我们行走江湖的目的，就是用尽自己的全部能耐把本来就好的璞玉打造成臻于完美的玉石。\n\n至于随之而来的物质累积、名誉傍身，都不过是立足于其上的附加之物。本立则荣加，本无则荣枯。明白这一点，世人眼中关于你的值不值得，都不足以撼动你对自己的肯定。\n\n","slug":"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！","published":1,"updated":"2019-02-25T11:52:04.503Z","layout":"post","photos":[],"link":"","_id":"cjt58irre001y48dk7y575o6m","content":"<p> 网络上为赵丽颖晋身为Dior新代言人，为baby抱屈而打口水仗的人们依旧在评论区喋喋不休。</p>\n<p>网友不是头一次抹黑赵丽颖，也不是第一次对她评头论足。</p>\n<p>他们从来没忘记赵丽颖的中专文凭、农村出身、补刀神手的人设，以及她在时尚界那次长裙美背后却贴小花纸的“土美”事件。</p>\n<p>他们从来没想到她以一张包子脸的长相也能进军时尚界甚至可以开疆辟土，能在颜控大长腿的天下里挤得一席之地。<br><a id=\"more\"></a><br><img src=\"http://upload-images.jianshu.io/upload_images/2743275-53f4e13ae7bb957c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"><br>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>别说喷子们不服，就连那些以颜值、身材傲娇的模特们甚至也要掂量下要不要去拍部剧来充实一下自己的市场含金量。</p>\n<p>也许，不过是因为赵丽颖改变了某些市场主导者的审美标准，也或者因为她让人们看到了属于某种叫做内在因素的美学吸引力。</p>\n<p>在风云突变的娱乐圈子里，令人眼花缭乱的美的形式层出不穷，种种以花瓶自居的美少女美男子更是如过江之鲫。可以说美常有，花瓶亦常有，但是以内在实力让人发现美的内在的，却不常见。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-8a989c5bb640f4bf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>黄渤算是特例，他从来不以帅著称。</p>\n<p>但是他有让人透过“看似抽象的外表”发现其演技魅力的能耐，继而在大大小小的场合，能让人心悦诚服地体会到他妙语连珠舌灿生花的高情商魅力。这大概就属于那种可以满足人们精神需要层次的美了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-4d63302781989ff0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>周冬雨也算特例，而且特例得很成功。</p>\n<p>作为18岁时就荣升为“谋女郎”的幸运儿，她的演技她的颜值，在进入电影学院以及刚毕业的阶段，都不算是人们口中的佼佼者。甚至在很长一段时间里，人们总能从她刻意扮老的衣着里发现“令人扼腕”的衣品。</p>\n<p>她没有好身材，她也曾自嘲“自己二十四岁的年纪里，有的是十四岁的身材”；她没有欧式大眼睛，她笑起来眼睛眯成一条线的样子的确像自嘲的“小蝌蚪”“小黄鸭”。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-d0b5d1c133826c9e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>可是她知道衣品可以偷偷修炼，演技亦可以让那些吐槽她的人对她黑转粉。</p>\n<p>现在的周冬雨，总能用梨花带雨的哭或明媚如初恋的笑牵引着观众去发现她的灵动、可爱、放肆、潇洒。她是安生、顾胜男、肖红，还是宇宙CP心中念念不忘的“小蝌蚪”。她用角色在无数人心中收获对她别样之美的肯定。</p>\n<p>诚然，她瘦小单薄，不够丰盈饱满。但是她会努力想尽各种办法，去让自己中学时因练舞而壮硕的小腿变瘦再变瘦。于是与别人比，她会胜在肌肤胜雪、会胜在后天小白腿又瘦又直所营造出的纯真干净气质上。所以，懂得适合自己穿衣风格的姑娘，懂得扬长避短的她，终会在可以抱着奖杯时靠衣品靠气质在时尚界锦上添花。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-cb84c86409b3303d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>周冬雨也许可以成为赵丽颖在衣品上征服人心的榜样。她们虽然不够天资卓越，但胜在后天足够努力。尽管她们都曾被人很批过说话耿直情商感人，但是胜在她们都足够心大如海，能把注意力转移到自己钟爱的演技磨砺层面，继而以实力赢得业界尊重。</p>\n<p>这时代，从耀眼高台跌倒下来的明星不胜枚举，在底层逆境中一点一点攀爬努力的演员亦多如星辰。但不管她们处在什么阶段，能够给予她们自信的，永远是自己对所爱事业的追梦执念，和一次次挫败后的执着坚持。</p>\n<p>正所谓“闻道有先后，术业有专攻”。多少演员成为明星，立足的资本，成名的资本，踏入时尚圈的资本，永远是彰显实力的代表作。也就是说，唯有专注于自己的术业，才能脱胎换骨，再上台阶；才能有机会发光发亮，才够得住机会来时的橄榄枝！</p>\n<p>出道十年，赵丽颖从选秀开始奋斗，跑过无数龙套，在扎扎实实的演技磨砺中成就了陆贞、杉杉、花千骨、楚乔等多个被人记到心里的角色，也算是用步步的成就证明了从平凡到华丽蜕变的自我价值。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-b650a625da475f1b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>就算曾经土气又如何，曾经籍籍无名又如何，谁的人生不是在不断修炼中成长?当你拥有一颗坚忍倔强的心，埋首修剪自我的不足时，就没空在乎别人说长道短了。</p>\n<p>就像赵丽颖曾说的，人到一定程度，就不会再计较那么多了；以前会怕这个、怕那个，但是她觉得现在的自己心态很平和，状态也还挺好；对于这些东西就更不在意了。</p>\n<p>正所谓，你若淡看风云，窗前自有云卷云舒的自在；你若似繁花锦绣，周围自有蝴蝶悄然翩跹。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-a9e30f2c8ddd5f04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>诚然，梦想不必过早就实现，也不必实现了就止步于当下。</p>\n<p>我们总有困顿迷惑自我怀疑的时候，就像努力了很多年的前夫哥雷佳音，在出演鹿兆鹏几个月都快要抑郁的时候，等来了陈俊生、裴纶这样一个可以证明自己实力的角色。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-8d20f5c9550d4809.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>就像被离婚大战拖累到几乎要完全没有出路的潘粤明，在跨界歌王中唱出了文艺小生的双面挣扎，也让自己有机会被制作方看中可塑性而出演了证明自己炸裂演技的角色“白夜兄弟”。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-ecab8a59519a96cf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>我们总有会爬上某个看似自我高峰的时刻，唯有清醒和自省能让自己行远路行得远。</p>\n<p>就像周冬雨的小妞人设演多了，也需要调整战略在别的角色领域里证明自己的可塑性。就像赵丽颖的进阶更上层楼了，也需要在学识修养衣品方面内外兼修裨补缺漏。</p>\n<p>有人说，任何人都不是超人，你的心思放在哪儿是可以看见的。</p>\n<p>当你眼中只有名利时，纵然有一千万中想红想赚快钱的途径，但是如日中天如薛之谦又如何，火箭般翻红的速度，维持的时间却不过是两年。</p>\n<p>当没有创新度的段子梗被他在上百个节目中玩到泛滥时，当没有专情如一的人品来维持深情人设而被昔日恋人李雨桐扒个底朝天的时候，名利来得快走得也快，还顺便把你打倒至众人踩众人唾弃的深渊。</p>\n<p>傅雷说，我们的确是盲目着在世界上前进的。但是当你行走于世越深入，你才发现你的双眼你的灵魂会容易被浮华蔽眼而陷入盲目。</p>\n<p>没有谁不渴望事业成功荣耀加身，但是能救赎我们灵魂的永远是自己可以拿得出手的自己钟爱的作品。</p>\n<p>如好剧本之于演员，好书籍之于作家，好项目之于商人，好工作之于普通人。我们行走江湖的目的，就是用尽自己的全部能耐把本来就好的璞玉打造成臻于完美的玉石。</p>\n<p>至于随之而来的物质累积、名誉傍身，都不过是立足于其上的附加之物。本立则荣加，本无则荣枯。明白这一点，世人眼中关于你的值不值得，都不足以撼动你对自己的肯定。</p>\n","site":{"data":{}},"excerpt":"<p> 网络上为赵丽颖晋身为Dior新代言人，为baby抱屈而打口水仗的人们依旧在评论区喋喋不休。</p>\n<p>网友不是头一次抹黑赵丽颖，也不是第一次对她评头论足。</p>\n<p>他们从来没忘记赵丽颖的中专文凭、农村出身、补刀神手的人设，以及她在时尚界那次长裙美背后却贴小花纸的“土美”事件。</p>\n<p>他们从来没想到她以一张包子脸的长相也能进军时尚界甚至可以开疆辟土，能在颜控大长腿的天下里挤得一席之地。<br>","more":"<br><img src=\"http://upload-images.jianshu.io/upload_images/2743275-53f4e13ae7bb957c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"><br>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>别说喷子们不服，就连那些以颜值、身材傲娇的模特们甚至也要掂量下要不要去拍部剧来充实一下自己的市场含金量。</p>\n<p>也许，不过是因为赵丽颖改变了某些市场主导者的审美标准，也或者因为她让人们看到了属于某种叫做内在因素的美学吸引力。</p>\n<p>在风云突变的娱乐圈子里，令人眼花缭乱的美的形式层出不穷，种种以花瓶自居的美少女美男子更是如过江之鲫。可以说美常有，花瓶亦常有，但是以内在实力让人发现美的内在的，却不常见。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-8a989c5bb640f4bf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>黄渤算是特例，他从来不以帅著称。</p>\n<p>但是他有让人透过“看似抽象的外表”发现其演技魅力的能耐，继而在大大小小的场合，能让人心悦诚服地体会到他妙语连珠舌灿生花的高情商魅力。这大概就属于那种可以满足人们精神需要层次的美了。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-4d63302781989ff0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>周冬雨也算特例，而且特例得很成功。</p>\n<p>作为18岁时就荣升为“谋女郎”的幸运儿，她的演技她的颜值，在进入电影学院以及刚毕业的阶段，都不算是人们口中的佼佼者。甚至在很长一段时间里，人们总能从她刻意扮老的衣着里发现“令人扼腕”的衣品。</p>\n<p>她没有好身材，她也曾自嘲“自己二十四岁的年纪里，有的是十四岁的身材”；她没有欧式大眼睛，她笑起来眼睛眯成一条线的样子的确像自嘲的“小蝌蚪”“小黄鸭”。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-d0b5d1c133826c9e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>可是她知道衣品可以偷偷修炼，演技亦可以让那些吐槽她的人对她黑转粉。</p>\n<p>现在的周冬雨，总能用梨花带雨的哭或明媚如初恋的笑牵引着观众去发现她的灵动、可爱、放肆、潇洒。她是安生、顾胜男、肖红，还是宇宙CP心中念念不忘的“小蝌蚪”。她用角色在无数人心中收获对她别样之美的肯定。</p>\n<p>诚然，她瘦小单薄，不够丰盈饱满。但是她会努力想尽各种办法，去让自己中学时因练舞而壮硕的小腿变瘦再变瘦。于是与别人比，她会胜在肌肤胜雪、会胜在后天小白腿又瘦又直所营造出的纯真干净气质上。所以，懂得适合自己穿衣风格的姑娘，懂得扬长避短的她，终会在可以抱着奖杯时靠衣品靠气质在时尚界锦上添花。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-cb84c86409b3303d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>周冬雨也许可以成为赵丽颖在衣品上征服人心的榜样。她们虽然不够天资卓越，但胜在后天足够努力。尽管她们都曾被人很批过说话耿直情商感人，但是胜在她们都足够心大如海，能把注意力转移到自己钟爱的演技磨砺层面，继而以实力赢得业界尊重。</p>\n<p>这时代，从耀眼高台跌倒下来的明星不胜枚举，在底层逆境中一点一点攀爬努力的演员亦多如星辰。但不管她们处在什么阶段，能够给予她们自信的，永远是自己对所爱事业的追梦执念，和一次次挫败后的执着坚持。</p>\n<p>正所谓“闻道有先后，术业有专攻”。多少演员成为明星，立足的资本，成名的资本，踏入时尚圈的资本，永远是彰显实力的代表作。也就是说，唯有专注于自己的术业，才能脱胎换骨，再上台阶；才能有机会发光发亮，才够得住机会来时的橄榄枝！</p>\n<p>出道十年，赵丽颖从选秀开始奋斗，跑过无数龙套，在扎扎实实的演技磨砺中成就了陆贞、杉杉、花千骨、楚乔等多个被人记到心里的角色，也算是用步步的成就证明了从平凡到华丽蜕变的自我价值。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-b650a625da475f1b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>就算曾经土气又如何，曾经籍籍无名又如何，谁的人生不是在不断修炼中成长?当你拥有一颗坚忍倔强的心，埋首修剪自我的不足时，就没空在乎别人说长道短了。</p>\n<p>就像赵丽颖曾说的，人到一定程度，就不会再计较那么多了；以前会怕这个、怕那个，但是她觉得现在的自己心态很平和，状态也还挺好；对于这些东西就更不在意了。</p>\n<p>正所谓，你若淡看风云，窗前自有云卷云舒的自在；你若似繁花锦绣，周围自有蝴蝶悄然翩跹。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-a9e30f2c8ddd5f04.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>诚然，梦想不必过早就实现，也不必实现了就止步于当下。</p>\n<p>我们总有困顿迷惑自我怀疑的时候，就像努力了很多年的前夫哥雷佳音，在出演鹿兆鹏几个月都快要抑郁的时候，等来了陈俊生、裴纶这样一个可以证明自己实力的角色。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-8d20f5c9550d4809.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>就像被离婚大战拖累到几乎要完全没有出路的潘粤明，在跨界歌王中唱出了文艺小生的双面挣扎，也让自己有机会被制作方看中可塑性而出演了证明自己炸裂演技的角色“白夜兄弟”。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/2743275-ecab8a59519a96cf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！\"></p>\n<p>赵丽颖：没有什么配不配，你的努力发光了，你就是值得的！</p>\n<p>我们总有会爬上某个看似自我高峰的时刻，唯有清醒和自省能让自己行远路行得远。</p>\n<p>就像周冬雨的小妞人设演多了，也需要调整战略在别的角色领域里证明自己的可塑性。就像赵丽颖的进阶更上层楼了，也需要在学识修养衣品方面内外兼修裨补缺漏。</p>\n<p>有人说，任何人都不是超人，你的心思放在哪儿是可以看见的。</p>\n<p>当你眼中只有名利时，纵然有一千万中想红想赚快钱的途径，但是如日中天如薛之谦又如何，火箭般翻红的速度，维持的时间却不过是两年。</p>\n<p>当没有创新度的段子梗被他在上百个节目中玩到泛滥时，当没有专情如一的人品来维持深情人设而被昔日恋人李雨桐扒个底朝天的时候，名利来得快走得也快，还顺便把你打倒至众人踩众人唾弃的深渊。</p>\n<p>傅雷说，我们的确是盲目着在世界上前进的。但是当你行走于世越深入，你才发现你的双眼你的灵魂会容易被浮华蔽眼而陷入盲目。</p>\n<p>没有谁不渴望事业成功荣耀加身，但是能救赎我们灵魂的永远是自己可以拿得出手的自己钟爱的作品。</p>\n<p>如好剧本之于演员，好书籍之于作家，好项目之于商人，好工作之于普通人。我们行走江湖的目的，就是用尽自己的全部能耐把本来就好的璞玉打造成臻于完美的玉石。</p>\n<p>至于随之而来的物质累积、名誉傍身，都不过是立足于其上的附加之物。本立则荣加，本无则荣枯。明白这一点，世人眼中关于你的值不值得，都不足以撼动你对自己的肯定。</p>"},{"title":"Hexo博客添加访问量统计","date":"2019-03-13T03:51:00.000Z","description":"Hexo博客添加访问量统计","_content":"##### Tips:前导必备\n- [博主博客地址](https://joeybling.github.io/)\n- 博主使用的是`yilia`主题\n- 访问量统计使用**[不蒜子](http://busuanzi.ibruce.info/ \"不蒜子\")**\n\n-----------------------------------------------------------------------------------------\n##### 1、配置是否开启不蒜子访问量统计功能\n&#160;&#160;&#160;&#160;在`themes/yilia/_config.yml`添加属性\n```yaml\n# 是否开启访问量统计功能(不蒜子)\nbusuanzi:\n enable: true\n```\n<!--more-->\n![](https://upload-images.jianshu.io/upload_images/2743275-5b02280831598f7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n-----------------------------------------------------------------------------------------\n##### 2、引入不蒜子并添加站点访问量\n&#160;&#160;&#160;&#160;在`themes/yilia/layout/_partial/footer.ejs`末尾添加如下代码\n```html\n<% if (theme.busuanzi && theme.busuanzi.enable){ %>\n        <!-- 不蒜子统计 -->\n        <span id=\"busuanzi_container_site_pv\">\n                本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次\n        </span>\n        <span class=\"post-meta-divider\">|</span>\n        <span id=\"busuanzi_container_site_uv\" style='display:none'>\n                本站访客数<span id=\"busuanzi_value_site_uv\"></span>人\n        </span>\n        <script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n  <% } %>\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-606746be58d76274.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n-----------------------------------------------------------------------------------------\n##### 3、添加文章访问量\n&#160;&#160;&#160;&#160;在`themes/yilia/layout/_partial/post/date.ejs`开头添加如下代码\n```html\n<% if (theme.busuanzi && theme.busuanzi.enable && !index){ %>\n        <!-- 不蒜子统计 -->\n        <span id=\"busuanzi_container_page_pv\" style='display:none' class=\"<%= class_name %>\">\n              <i class=\"icon-smile icon\"></i> 阅读数：<span id=\"busuanzi_value_page_pv\"></span>次\n        </span>\n<% } %>\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-75e2b6aa8e3e1d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n- **重启即可查看效果**\n\n-----------------------------------------------------------------------------------------\n##### 4、作者寄语\n> Everything is ok. But you have to do by yourself.\n","source":"_posts/Hexo博客添加访问量统计.md","raw":"---\ntitle: Hexo博客添加访问量统计\ndate: 2019.03.13 11:51\ntags: 日记本\n#top: 1\ndescription: Hexo博客添加访问量统计\n---\n##### Tips:前导必备\n- [博主博客地址](https://joeybling.github.io/)\n- 博主使用的是`yilia`主题\n- 访问量统计使用**[不蒜子](http://busuanzi.ibruce.info/ \"不蒜子\")**\n\n-----------------------------------------------------------------------------------------\n##### 1、配置是否开启不蒜子访问量统计功能\n&#160;&#160;&#160;&#160;在`themes/yilia/_config.yml`添加属性\n```yaml\n# 是否开启访问量统计功能(不蒜子)\nbusuanzi:\n enable: true\n```\n<!--more-->\n![](https://upload-images.jianshu.io/upload_images/2743275-5b02280831598f7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n-----------------------------------------------------------------------------------------\n##### 2、引入不蒜子并添加站点访问量\n&#160;&#160;&#160;&#160;在`themes/yilia/layout/_partial/footer.ejs`末尾添加如下代码\n```html\n<% if (theme.busuanzi && theme.busuanzi.enable){ %>\n        <!-- 不蒜子统计 -->\n        <span id=\"busuanzi_container_site_pv\">\n                本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次\n        </span>\n        <span class=\"post-meta-divider\">|</span>\n        <span id=\"busuanzi_container_site_uv\" style='display:none'>\n                本站访客数<span id=\"busuanzi_value_site_uv\"></span>人\n        </span>\n        <script async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n  <% } %>\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-606746be58d76274.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n-----------------------------------------------------------------------------------------\n##### 3、添加文章访问量\n&#160;&#160;&#160;&#160;在`themes/yilia/layout/_partial/post/date.ejs`开头添加如下代码\n```html\n<% if (theme.busuanzi && theme.busuanzi.enable && !index){ %>\n        <!-- 不蒜子统计 -->\n        <span id=\"busuanzi_container_page_pv\" style='display:none' class=\"<%= class_name %>\">\n              <i class=\"icon-smile icon\"></i> 阅读数：<span id=\"busuanzi_value_page_pv\"></span>次\n        </span>\n<% } %>\n```\n![](https://upload-images.jianshu.io/upload_images/2743275-75e2b6aa8e3e1d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n- **重启即可查看效果**\n\n-----------------------------------------------------------------------------------------\n##### 4、作者寄语\n> Everything is ok. But you have to do by yourself.\n","slug":"Hexo博客添加访问量统计","published":1,"updated":"2019-03-14T02:30:14.327Z","_id":"cjt6s2qfp00006qdkg3bhjyui","comments":1,"layout":"post","photos":[],"link":"","content":"<h5 id=\"Tips-前导必备\"><a href=\"#Tips-前导必备\" class=\"headerlink\" title=\"Tips:前导必备\"></a>Tips:前导必备</h5><ul>\n<li><a href=\"https://joeybling.github.io/\">博主博客地址</a></li>\n<li>博主使用的是<code>yilia</code>主题</li>\n<li>访问量统计使用<strong><a href=\"http://busuanzi.ibruce.info/\" title=\"不蒜子\" target=\"_blank\" rel=\"noopener\">不蒜子</a></strong></li>\n</ul>\n<hr>\n<h5 id=\"1、配置是否开启不蒜子访问量统计功能\"><a href=\"#1、配置是否开启不蒜子访问量统计功能\" class=\"headerlink\" title=\"1、配置是否开启不蒜子访问量统计功能\"></a>1、配置是否开启不蒜子访问量统计功能</h5><p>&#160;&#160;&#160;&#160;在<code>themes/yilia/_config.yml</code>添加属性<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 是否开启访问量统计功能(不蒜子)</span></span><br><span class=\"line\"><span class=\"attr\">busuanzi:</span></span><br><span class=\"line\"><span class=\"attr\"> enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5b02280831598f7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"2、引入不蒜子并添加站点访问量\"><a href=\"#2、引入不蒜子并添加站点访问量\" class=\"headerlink\" title=\"2、引入不蒜子并添加站点访问量\"></a>2、引入不蒜子并添加站点访问量</h5><p>&#160;&#160;&#160;&#160;在<code>themes/yilia/layout/_partial/footer.ejs</code>末尾添加如下代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.busuanzi</span> &amp;&amp; <span class=\"attr\">theme.busuanzi.enable</span>)&#123; %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_site_pv\"</span>&gt;</span></span><br><span class=\"line\">                本站总访问量<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_site_pv\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>次</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-meta-divider\"</span>&gt;</span>|<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_site_uv\"</span> <span class=\"attr\">style</span>=<span class=\"string\">'display:none'</span>&gt;</span></span><br><span class=\"line\">                本站访客数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_site_uv\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>人</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-606746be58d76274.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"3、添加文章访问量\"><a href=\"#3、添加文章访问量\" class=\"headerlink\" title=\"3、添加文章访问量\"></a>3、添加文章访问量</h5><p>&#160;&#160;&#160;&#160;在<code>themes/yilia/layout/_partial/post/date.ejs</code>开头添加如下代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.busuanzi</span> &amp;&amp; <span class=\"attr\">theme.busuanzi.enable</span> &amp;&amp; !<span class=\"attr\">index</span>)&#123; %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_page_pv\"</span> <span class=\"attr\">style</span>=<span class=\"string\">'display:none'</span> <span class=\"attr\">class</span>=<span class=\"string\">\"&lt;%= class_name %&gt;\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-smile icon\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> 阅读数：<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_page_pv\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>次</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-75e2b6aa8e3e1d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<ul>\n<li><strong>重启即可查看效果</strong></li>\n</ul>\n<hr>\n<h5 id=\"4、作者寄语\"><a href=\"#4、作者寄语\" class=\"headerlink\" title=\"4、作者寄语\"></a>4、作者寄语</h5><blockquote>\n<p>Everything is ok. But you have to do by yourself.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h5 id=\"Tips-前导必备\"><a href=\"#Tips-前导必备\" class=\"headerlink\" title=\"Tips:前导必备\"></a>Tips:前导必备</h5><ul>\n<li><a href=\"https://joeybling.github.io/\">博主博客地址</a></li>\n<li>博主使用的是<code>yilia</code>主题</li>\n<li>访问量统计使用<strong><a href=\"http://busuanzi.ibruce.info/\" title=\"不蒜子\" target=\"_blank\" rel=\"noopener\">不蒜子</a></strong></li>\n</ul>\n<hr>\n<h5 id=\"1、配置是否开启不蒜子访问量统计功能\"><a href=\"#1、配置是否开启不蒜子访问量统计功能\" class=\"headerlink\" title=\"1、配置是否开启不蒜子访问量统计功能\"></a>1、配置是否开启不蒜子访问量统计功能</h5><p>&#160;&#160;&#160;&#160;在<code>themes/yilia/_config.yml</code>添加属性<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 是否开启访问量统计功能(不蒜子)</span></span><br><span class=\"line\"><span class=\"attr\">busuanzi:</span></span><br><span class=\"line\"><span class=\"attr\"> enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure></p>","more":"<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-5b02280831598f7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"2、引入不蒜子并添加站点访问量\"><a href=\"#2、引入不蒜子并添加站点访问量\" class=\"headerlink\" title=\"2、引入不蒜子并添加站点访问量\"></a>2、引入不蒜子并添加站点访问量</h5><p>&#160;&#160;&#160;&#160;在<code>themes/yilia/layout/_partial/footer.ejs</code>末尾添加如下代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.busuanzi</span> &amp;&amp; <span class=\"attr\">theme.busuanzi.enable</span>)&#123; %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_site_pv\"</span>&gt;</span></span><br><span class=\"line\">                本站总访问量<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_site_pv\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>次</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-meta-divider\"</span>&gt;</span>|<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_site_uv\"</span> <span class=\"attr\">style</span>=<span class=\"string\">'display:none'</span>&gt;</span></span><br><span class=\"line\">                本站访客数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_site_uv\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>人</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-606746be58d76274.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<hr>\n<h5 id=\"3、添加文章访问量\"><a href=\"#3、添加文章访问量\" class=\"headerlink\" title=\"3、添加文章访问量\"></a>3、添加文章访问量</h5><p>&#160;&#160;&#160;&#160;在<code>themes/yilia/layout/_partial/post/date.ejs</code>开头添加如下代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.busuanzi</span> &amp;&amp; <span class=\"attr\">theme.busuanzi.enable</span> &amp;&amp; !<span class=\"attr\">index</span>)&#123; %&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 不蒜子统计 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_page_pv\"</span> <span class=\"attr\">style</span>=<span class=\"string\">'display:none'</span> <span class=\"attr\">class</span>=<span class=\"string\">\"&lt;%= class_name %&gt;\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-smile icon\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> 阅读数：<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_page_pv\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>次</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2743275-75e2b6aa8e3e1d07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"\"></p>\n<ul>\n<li><strong>重启即可查看效果</strong></li>\n</ul>\n<hr>\n<h5 id=\"4、作者寄语\"><a href=\"#4、作者寄语\" class=\"headerlink\" title=\"4、作者寄语\"></a>4、作者寄语</h5><blockquote>\n<p>Everything is ok. But you have to do by yourself.</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjt58iro5000448dkph485j4r","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irof000748dkpzbf6mr0"},{"post_id":"cjt58irna000048dk5rjap63v","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58iroi000948dkbf6bf7kq"},{"post_id":"cjt58irnt000148dk9utebe6c","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irop000c48dk9abm4e43"},{"post_id":"cjt58iro1000348dkfx5m8oi5","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irp4000g48dkmxhembid"},{"post_id":"cjt58iro9000548dkacc5r4g6","tag_id":"cjt58iroy000f48dkdf4lzqfm","_id":"cjt58irpd000l48dklkmv52op"},{"post_id":"cjt58irp9000i48dk9cepq0r4","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpf000n48dkjel0b4yt"},{"post_id":"cjt58irpb000k48dkchuanqnv","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpi000q48dkai3ajp7s"},{"post_id":"cjt58irog000848dk2vg4rmvp","tag_id":"cjt58irpb000j48dkkppnrp0l","_id":"cjt58irpk000s48dkkucul61r"},{"post_id":"cjt58irpe000m48dkp7sitmlx","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpm000v48dk6uwbhdkw"},{"post_id":"cjt58irpg000p48dk5mgkie82","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpo000x48dkzdry4i4g"},{"post_id":"cjt58iroj000a48dkre8fcowu","tag_id":"cjt58irpg000o48dkefzdlium","_id":"cjt58irpr001048dkkn6dehed"},{"post_id":"cjt58irpi000r48dkygaw7jt5","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpu001248dkhzocjjeo"},{"post_id":"cjt58irpl000u48dkt682fsp5","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpw001548dklrpwpncp"},{"post_id":"cjt58irpn000w48dkovvlpirk","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irpz001748dkjsnpvd76"},{"post_id":"cjt58irop000d48dklx6cmnny","tag_id":"cjt58irpk000t48dkzj19uney","_id":"cjt58irq2001948dkwfftdvby"},{"post_id":"cjt58irpp000y48dkf6v365vt","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irq5001b48dkh389x69q"},{"post_id":"cjt58irps001148dklpzm0w0g","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irq9001d48dkm3bi37hc"},{"post_id":"cjt58iror000e48dkmwtqblyr","tag_id":"cjt58irpk000t48dkzj19uney","_id":"cjt58irqb001f48dkqrdpldkl"},{"post_id":"cjt58irpv001348dku93g22uq","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irqd001h48dk43rejl70"},{"post_id":"cjt58irpx001648dkld32txy2","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irqf001j48dknbwp0sa0"},{"post_id":"cjt58irp4000h48dkircdr7n1","tag_id":"cjt58irpg000o48dkefzdlium","_id":"cjt58irqh001l48dkoy44asea"},{"post_id":"cjt58irq0001848dkvejq8mhe","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irqj001n48dk0qbtv940"},{"post_id":"cjt58irq3001a48dkuvcxscyx","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irr2001p48dk8kg0rj2c"},{"post_id":"cjt58irq5001c48dk0frpv841","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irr4001r48dk7y5nf4jv"},{"post_id":"cjt58irqa001e48dkq24wjgdi","tag_id":"cjt58irpg000o48dkefzdlium","_id":"cjt58irr7001t48dkkbhic8pq"},{"post_id":"cjt58irqc001g48dk4nwdjwdt","tag_id":"cjt58irpg000o48dkefzdlium","_id":"cjt58irr9001v48dkrc0lkudg"},{"post_id":"cjt58irqe001i48dksaq4dslf","tag_id":"cjt58irpg000o48dkefzdlium","_id":"cjt58irrd001x48dk6f48t0vj"},{"post_id":"cjt58irqf001k48dknyvb9evn","tag_id":"cjt58irpg000o48dkefzdlium","_id":"cjt58irrg001z48dk1rr43er7"},{"post_id":"cjt58irqh001m48dkaymi8f26","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irrh002048dk7l4zzt24"},{"post_id":"cjt58irr2001q48dkplnkz6g2","tag_id":"cjt58iroy000f48dkdf4lzqfm","_id":"cjt58irri002248dkbdzjdyoq"},{"post_id":"cjt58irr5001s48dkmmydep5p","tag_id":"cjt58irpk000t48dkzj19uney","_id":"cjt58irri002348dki7sm54g1"},{"post_id":"cjt58irr8001u48dk9uz4bffe","tag_id":"cjt58irnx000248dknfuutyq9","_id":"cjt58irri002448dknmz94nwb"},{"post_id":"cjt58irra001w48dkf2h6rnbv","tag_id":"cjt58irpk000t48dkzj19uney","_id":"cjt58irri002548dkok153x5g"},{"post_id":"cjt58irre001y48dk7y575o6m","tag_id":"cjt58irrh002148dkxh6ddjnm","_id":"cjt58irrj002648dkguclvogh"},{"post_id":"cjt6s2qfp00006qdkg3bhjyui","tag_id":"cjt58irpk000t48dkzj19uney","_id":"cjt6s2qfw00016qdkmyn10evo"}],"Tag":[{"name":"Linux","_id":"cjt58irnx000248dknfuutyq9"},{"name":"ELK日志分析","_id":"cjt58iroy000f48dkdf4lzqfm"},{"name":"ELK日志分析平台","_id":"cjt58irpb000j48dkkppnrp0l"},{"name":"Java","_id":"cjt58irpg000o48dkefzdlium"},{"name":"日记本","_id":"cjt58irpk000t48dkzj19uney"},{"name":"记录生活点滴","_id":"cjt58irrh002148dkxh6ddjnm"}]}}